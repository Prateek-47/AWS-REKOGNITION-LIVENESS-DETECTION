{"ast":null,"code":"import { __asyncValues, __awaiter, __generator, __values } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { isPredicateObj } from '../../types';\nimport { getStorename, getIndexKeys, extractPrimaryKeyValues, traverseModel, validatePredicate, isModelConstructor, extractPrimaryKeyFieldNames } from '../../util';\nimport { ModelRelationship } from '../relationship';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\n\nvar StorageAdapterBase =\n/** @class */\nfunction () {\n  function StorageAdapterBase() {\n    this.dbName = DB_NAME;\n  }\n  /**\n   * Initializes local DB\n   *\n   * @param theSchema\n   * @param namespaceResolver\n   * @param modelInstanceCreator\n   * @param getModelConstructorByModelName\n   * @param sessionId\n   */\n\n\n  StorageAdapterBase.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.preSetUpChecks()];\n\n          case 1:\n            _b.sent();\n\n            if (!!this.initPromise) return [3\n            /*break*/\n            , 2];\n            this.initPromise = new Promise(function (res, rej) {\n              _this.resolve = res;\n              _this.reject = rej;\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.initPromise];\n\n          case 3:\n            _b.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            if (sessionId) {\n              this.dbName = DB_NAME + \"-\" + sessionId;\n            }\n\n            this.schema = theSchema;\n            this.namespaceResolver = namespaceResolver;\n            this.modelInstanceCreator = modelInstanceCreator;\n            this.getModelConstructorByModelName = getModelConstructorByModelName;\n            _b.label = 5;\n\n          case 5:\n            _b.trys.push([5, 8,, 9]);\n\n            if (!!this.db) return [3\n            /*break*/\n            , 7];\n            _a = this;\n            return [4\n            /*yield*/\n            , this.initDb()];\n\n          case 6:\n            _a.db = _b.sent();\n            this.resolve();\n            _b.label = 7;\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            error_1 = _b.sent();\n            this.reject(error_1);\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @param modelConstructor\n   * @returns local DB table name\n   */\n\n\n  StorageAdapterBase.prototype.getStorenameForModel = function (modelConstructor) {\n    var namespace = this.namespaceResolver(modelConstructor);\n    var modelName = modelConstructor.name;\n    return getStorename(namespace, modelName);\n  };\n  /**\n   *\n   * @param model - instantiated model record\n   * @returns the record's primary key values\n   */\n\n\n  StorageAdapterBase.prototype.getIndexKeyValuesFromModel = function (model) {\n    var modelConstructor = Object.getPrototypeOf(model).constructor;\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var keys = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n    return extractPrimaryKeyValues(model, keys);\n  };\n  /**\n   * Common metadata for `save` operation\n   * used by individual storage adapters\n   *\n   * @param model\n   */\n\n\n  StorageAdapterBase.prototype.saveMetadata = function (model) {\n    var _this = this;\n\n    var modelConstructor = Object.getPrototypeOf(model).constructor;\n    var storeName = this.getStorenameForModel(modelConstructor);\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[namespaceName], this.modelInstanceCreator, this.getModelConstructorByModelName);\n    var set = new Set();\n    var connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n      var modelName = _a.modelName,\n          item = _a.item,\n          instance = _a.instance;\n      var storeName = getStorename(namespaceName, modelName);\n      set.add(storeName);\n      var keys = getIndexKeys(_this.schema.namespaces[namespaceName], modelName);\n      return {\n        storeName: storeName,\n        item: item,\n        instance: instance,\n        keys: keys\n      };\n    });\n    var modelKeyValues = this.getIndexKeyValuesFromModel(model);\n    return {\n      storeName: storeName,\n      set: set,\n      connectionStoreNames: connectionStoreNames,\n      modelKeyValues: modelKeyValues\n    };\n  };\n  /**\n   * Enforces conditional save. Throws if condition is not met.\n   * used by individual storage adapters\n   *\n   * @param model\n   */\n\n\n  StorageAdapterBase.prototype.validateSaveCondition = function (condition, fromDB) {\n    if (!(condition && fromDB)) {\n      return;\n    }\n\n    var predicates = ModelPredicateCreator.getPredicates(condition);\n    var _a = predicates,\n        predicateObjs = _a.predicates,\n        type = _a.type;\n    var isValid = validatePredicate(fromDB, type, predicateObjs);\n\n    if (!isValid) {\n      var msg = 'Conditional update failed';\n      logger.error(msg, {\n        model: fromDB,\n        condition: predicateObjs\n      });\n      throw new Error(msg);\n    }\n  };\n  /**\n   * Instantiate models from POJO records returned from the database\n   *\n   * @param namespaceName - string model namespace\n   * @param srcModelName - string model name\n   * @param records - array of uninstantiated records\n   * @returns\n   */\n\n\n  StorageAdapterBase.prototype.load = function (namespaceName, srcModelName, records) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, relations, connectionStoreNames, modelConstructor;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        namespace = this.schema.namespaces[namespaceName];\n        relations = namespace.relationships[srcModelName].relationTypes;\n        connectionStoreNames = relations.map(function (_a) {\n          var modelName = _a.modelName;\n          return getStorename(namespaceName, modelName);\n        });\n        modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n\n        if (connectionStoreNames.length === 0) {\n          return [2\n          /*return*/\n          , records.map(function (record) {\n            return _this.modelInstanceCreator(modelConstructor, record);\n          })];\n        }\n\n        return [2\n        /*return*/\n        , records.map(function (record) {\n          return _this.modelInstanceCreator(modelConstructor, record);\n        })];\n      });\n    });\n  };\n  /**\n   * Extracts operands from a predicate group into an array of key values\n   * Used in the query method\n   *\n   * @param predicates - predicate group\n   * @param keyPath - string array of key names ['id', 'sortKey']\n   * @returns string[] of key values\n   *\n   * @example\n   * ```js\n   * { and:[{ id: { eq: 'abc' }}, { sortKey: { eq: 'def' }}] }\n   * ```\n   * Becomes\n   * ```\n   * ['abc', 'def']\n   * ```\n   */\n\n\n  StorageAdapterBase.prototype.keyValueFromPredicate = function (predicates, keyPath) {\n    var e_1, _a;\n\n    var predicateObjs = predicates.predicates;\n\n    if (predicateObjs.length !== keyPath.length) {\n      return;\n    }\n\n    var keyValues = [];\n\n    var _loop_1 = function (key) {\n      var predicateObj = predicateObjs.find(function (p) {\n        // it's a relevant predicate object only if it's an equality\n        // operation for a key field from the key:\n        return isPredicateObj(p) && p.field === key && p.operator === 'eq' && p.operand !== null && p.operand !== undefined;\n      });\n      predicateObj && keyValues.push(predicateObj.operand);\n    };\n\n    try {\n      for (var keyPath_1 = __values(keyPath), keyPath_1_1 = keyPath_1.next(); !keyPath_1_1.done; keyPath_1_1 = keyPath_1.next()) {\n        var key = keyPath_1_1.value;\n\n        _loop_1(key);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (keyPath_1_1 && !keyPath_1_1.done && (_a = keyPath_1.return)) _a.call(keyPath_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return keyValues.length === keyPath.length ? keyValues : undefined;\n  };\n  /**\n   * Common metadata for `query` operation\n   * used by individual storage adapters\n   *\n   * @param modelConstructor\n   * @param predicate\n   * @param pagination\n   */\n\n\n  StorageAdapterBase.prototype.queryMetadata = function (modelConstructor, predicate, pagination) {\n    var storeName = this.getStorenameForModel(modelConstructor);\n    var namespaceName = this.namespaceResolver(modelConstructor);\n    var predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n    var keyPath = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n    var queryByKey = predicates && this.keyValueFromPredicate(predicates, keyPath);\n    var hasSort = pagination && pagination.sort;\n    var hasPagination = pagination && pagination.limit;\n    return {\n      storeName: storeName,\n      namespaceName: namespaceName,\n      queryByKey: queryByKey,\n      predicates: predicates,\n      hasSort: hasSort,\n      hasPagination: hasPagination\n    };\n  };\n  /**\n   * Delete record\n   * Cascades to related records (for Has One and Has Many relationships)\n   *\n   * @param modelOrModelConstructor\n   * @param condition\n   * @returns\n   */\n\n\n  StorageAdapterBase.prototype.delete = function (modelOrModelConstructor, condition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteQueue, modelConstructor, namespace, models, deletedModels, deletedModels, model, modelConstructor, namespaceName, storeName, keyValues, fromDB, msg, predicates, _a, predicateObjs, type, isValid, msg, deletedModels;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.preOpCheck()];\n\n          case 1:\n            _b.sent();\n\n            deleteQueue = [];\n            if (!isModelConstructor(modelOrModelConstructor)) return [3\n            /*break*/\n            , 9];\n            modelConstructor = modelOrModelConstructor;\n            namespace = this.namespaceResolver(modelConstructor);\n            return [4\n            /*yield*/\n            , this.query(modelConstructor, condition)];\n\n          case 2:\n            models = _b.sent();\n            if (!(condition !== undefined)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.deleteTraverse(models, modelConstructor, namespace, deleteQueue)];\n\n          case 3:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 4:\n            _b.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 5:\n            return [4\n            /*yield*/\n            , this.deleteTraverse(models, modelConstructor, namespace, deleteQueue)];\n\n          case 6:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 7:\n            _b.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [models, deletedModels]];\n\n          case 8:\n            return [3\n            /*break*/\n            , 16];\n\n          case 9:\n            model = modelOrModelConstructor;\n            modelConstructor = Object.getPrototypeOf(model).constructor;\n            namespaceName = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            if (!condition) return [3\n            /*break*/\n            , 12];\n            keyValues = this.getIndexKeyValuesFromModel(model);\n            return [4\n            /*yield*/\n            , this._get(storeName, keyValues)];\n\n          case 10:\n            fromDB = _b.sent();\n\n            if (fromDB === undefined) {\n              msg = 'Model instance not found in storage';\n              logger.warn(msg, {\n                model: model\n              });\n              return [2\n              /*return*/\n              , [[model], []]];\n            }\n\n            predicates = ModelPredicateCreator.getPredicates(condition);\n            _a = predicates, predicateObjs = _a.predicates, type = _a.type;\n            isValid = validatePredicate(fromDB, type, predicateObjs);\n\n            if (!isValid) {\n              msg = 'Conditional update failed';\n              logger.error(msg, {\n                model: fromDB,\n                condition: predicateObjs\n              });\n              throw new Error(msg);\n            }\n\n            return [4\n            /*yield*/\n            , this.deleteTraverse([model], modelConstructor, namespaceName, deleteQueue)];\n\n          case 11:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 14];\n\n          case 12:\n            return [4\n            /*yield*/\n            , this.deleteTraverse([model], modelConstructor, namespaceName, deleteQueue)];\n\n          case 13:\n            _b.sent();\n\n            _b.label = 14;\n\n          case 14:\n            return [4\n            /*yield*/\n            , this.deleteItem(deleteQueue)];\n\n          case 15:\n            _b.sent();\n\n            deletedModels = deleteQueue.reduce(function (acc, _a) {\n              var items = _a.items;\n              return acc.concat(items);\n            }, []);\n            return [2\n            /*return*/\n            , [[model], deletedModels]];\n\n          case 16:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Recursively traverse relationship graph and add\n   * all Has One and Has Many relations to `deleteQueue` param\n   *\n   * Actual deletion of records added to `deleteQueue` occurs in the `delete` method\n   *\n   * @param models\n   * @param modelConstructor\n   * @param namespace\n   * @param deleteQueue\n   */\n\n\n  StorageAdapterBase.prototype.deleteTraverse = function (models, modelConstructor, namespace, deleteQueue) {\n    var models_1, models_1_1;\n\n    var e_2, _a, e_3, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var cascadingRelationTypes, model, modelDefinition, modelMeta, relationships, relationships_1, relationships_1_1, r, queryObject, relatedRecords, e_3_1, e_2_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            cascadingRelationTypes = ['HAS_ONE', 'HAS_MANY'];\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 19, 20, 25]);\n\n            models_1 = __asyncValues(models);\n            _c.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , models_1.next()];\n\n          case 3:\n            if (!(models_1_1 = _c.sent(), !models_1_1.done)) return [3\n            /*break*/\n            , 18];\n            model = models_1_1.value;\n            modelDefinition = this.schema.namespaces[namespace].models[modelConstructor.name];\n            modelMeta = {\n              builder: modelConstructor,\n              schema: modelDefinition,\n              pkField: extractPrimaryKeyFieldNames(modelDefinition)\n            };\n            relationships = ModelRelationship.allFrom(modelMeta).filter(function (r) {\n              return cascadingRelationTypes.includes(r.type);\n            });\n            _c.label = 4;\n\n          case 4:\n            _c.trys.push([4, 11, 12, 17]);\n\n            relationships_1 = __asyncValues(relationships);\n            _c.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , relationships_1.next()];\n\n          case 6:\n            if (!(relationships_1_1 = _c.sent(), !relationships_1_1.done)) return [3\n            /*break*/\n            , 10];\n            r = relationships_1_1.value;\n            queryObject = r.createRemoteQueryObject(model);\n            if (!(queryObject !== null)) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.query(r.remoteModelConstructor, ModelPredicateCreator.createFromFlatEqualities(r.remoteDefinition, queryObject))];\n\n          case 7:\n            relatedRecords = _c.sent();\n            return [4\n            /*yield*/\n            , this.deleteTraverse(relatedRecords, r.remoteModelConstructor, namespace, deleteQueue)];\n\n          case 8:\n            _c.sent();\n\n            _c.label = 9;\n\n          case 9:\n            return [3\n            /*break*/\n            , 5];\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            e_3_1 = _c.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 12:\n            _c.trys.push([12,, 15, 16]);\n\n            if (!(relationships_1_1 && !relationships_1_1.done && (_b = relationships_1.return))) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , _b.call(relationships_1)];\n\n          case 13:\n            _c.sent();\n\n            _c.label = 14;\n\n          case 14:\n            return [3\n            /*break*/\n            , 16];\n\n          case 15:\n            if (e_3) throw e_3.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [3\n            /*break*/\n            , 2];\n\n          case 18:\n            return [3\n            /*break*/\n            , 25];\n\n          case 19:\n            e_2_1 = _c.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 25];\n\n          case 20:\n            _c.trys.push([20,, 23, 24]);\n\n            if (!(models_1_1 && !models_1_1.done && (_a = models_1.return))) return [3\n            /*break*/\n            , 22];\n            return [4\n            /*yield*/\n            , _a.call(models_1)];\n\n          case 21:\n            _c.sent();\n\n            _c.label = 22;\n\n          case 22:\n            return [3\n            /*break*/\n            , 24];\n\n          case 23:\n            if (e_2) throw e_2.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 24:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 25:\n            deleteQueue.push({\n              storeName: getStorename(namespace, modelConstructor.name),\n              items: models\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return StorageAdapterBase;\n}();\n\nexport { StorageAdapterBase };","map":{"version":3,"names":["__asyncValues","__awaiter","__generator","__values","ConsoleLogger","Logger","ModelPredicateCreator","isPredicateObj","getStorename","getIndexKeys","extractPrimaryKeyValues","traverseModel","validatePredicate","isModelConstructor","extractPrimaryKeyFieldNames","ModelRelationship","logger","DB_NAME","StorageAdapterBase","dbName","prototype","setUp","theSchema","namespaceResolver","modelInstanceCreator","getModelConstructorByModelName","sessionId","_a","error_1","_this","_b","label","preSetUpChecks","sent","initPromise","Promise","res","rej","resolve","reject","schema","trys","push","db","initDb","getStorenameForModel","modelConstructor","namespace","modelName","name","getIndexKeyValuesFromModel","model","Object","getPrototypeOf","constructor","namespaceName","keys","namespaces","saveMetadata","storeName","connectedModels","set","Set","connectionStoreNames","values","map","item","instance","add","modelKeyValues","validateSaveCondition","condition","fromDB","predicates","getPredicates","predicateObjs","type","isValid","msg","error","Error","load","srcModelName","records","relations","relationships","relationTypes","length","record","keyValueFromPredicate","keyPath","e_1","keyValues","_loop_1","key","predicateObj","find","p","field","operator","operand","undefined","keyPath_1","keyPath_1_1","next","done","value","e_1_1","return","call","queryMetadata","predicate","pagination","queryByKey","hasSort","sort","hasPagination","limit","delete","modelOrModelConstructor","deleteQueue","models","deletedModels","preOpCheck","query","deleteTraverse","deleteItem","reduce","acc","items","concat","_get","warn","models_1","models_1_1","e_2","e_3","cascadingRelationTypes","modelDefinition","modelMeta","relationships_1","relationships_1_1","r","queryObject","relatedRecords","e_3_1","e_2_1","_c","builder","pkField","allFrom","filter","includes","createRemoteQueryObject","remoteModelConstructor","createFromFlatEqualities","remoteDefinition"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/datastore/lib-esm/storage/adapter/StorageAdapterBase.js"],"sourcesContent":["import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { isPredicateObj, } from '../../types';\nimport { getStorename, getIndexKeys, extractPrimaryKeyValues, traverseModel, validatePredicate, isModelConstructor, extractPrimaryKeyFieldNames, } from '../../util';\nimport { ModelRelationship } from '../relationship';\nvar logger = new Logger('DataStore');\nvar DB_NAME = 'amplify-datastore';\nvar StorageAdapterBase = /** @class */ (function () {\n    function StorageAdapterBase() {\n        this.dbName = DB_NAME;\n    }\n    /**\n     * Initializes local DB\n     *\n     * @param theSchema\n     * @param namespaceResolver\n     * @param modelInstanceCreator\n     * @param getModelConstructorByModelName\n     * @param sessionId\n     */\n    StorageAdapterBase.prototype.setUp = function (theSchema, namespaceResolver, modelInstanceCreator, getModelConstructorByModelName, sessionId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_1;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.preSetUpChecks()];\n                    case 1:\n                        _b.sent();\n                        if (!!this.initPromise) return [3 /*break*/, 2];\n                        this.initPromise = new Promise(function (res, rej) {\n                            _this.resolve = res;\n                            _this.reject = rej;\n                        });\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.initPromise];\n                    case 3:\n                        _b.sent();\n                        return [2 /*return*/];\n                    case 4:\n                        if (sessionId) {\n                            this.dbName = DB_NAME + \"-\" + sessionId;\n                        }\n                        this.schema = theSchema;\n                        this.namespaceResolver = namespaceResolver;\n                        this.modelInstanceCreator = modelInstanceCreator;\n                        this.getModelConstructorByModelName = getModelConstructorByModelName;\n                        _b.label = 5;\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        if (!!this.db) return [3 /*break*/, 7];\n                        _a = this;\n                        return [4 /*yield*/, this.initDb()];\n                    case 6:\n                        _a.db = _b.sent();\n                        this.resolve();\n                        _b.label = 7;\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        error_1 = _b.sent();\n                        this.reject(error_1);\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param modelConstructor\n     * @returns local DB table name\n     */\n    StorageAdapterBase.prototype.getStorenameForModel = function (modelConstructor) {\n        var namespace = this.namespaceResolver(modelConstructor);\n        var modelName = modelConstructor.name;\n        return getStorename(namespace, modelName);\n    };\n    /**\n     *\n     * @param model - instantiated model record\n     * @returns the record's primary key values\n     */\n    StorageAdapterBase.prototype.getIndexKeyValuesFromModel = function (model) {\n        var modelConstructor = Object.getPrototypeOf(model)\n            .constructor;\n        var namespaceName = this.namespaceResolver(modelConstructor);\n        var keys = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n        return extractPrimaryKeyValues(model, keys);\n    };\n    /**\n     * Common metadata for `save` operation\n     * used by individual storage adapters\n     *\n     * @param model\n     */\n    StorageAdapterBase.prototype.saveMetadata = function (model) {\n        var _this = this;\n        var modelConstructor = Object.getPrototypeOf(model)\n            .constructor;\n        var storeName = this.getStorenameForModel(modelConstructor);\n        var namespaceName = this.namespaceResolver(modelConstructor);\n        var connectedModels = traverseModel(modelConstructor.name, model, this.schema.namespaces[namespaceName], this.modelInstanceCreator, this.getModelConstructorByModelName);\n        var set = new Set();\n        var connectionStoreNames = Object.values(connectedModels).map(function (_a) {\n            var modelName = _a.modelName, item = _a.item, instance = _a.instance;\n            var storeName = getStorename(namespaceName, modelName);\n            set.add(storeName);\n            var keys = getIndexKeys(_this.schema.namespaces[namespaceName], modelName);\n            return { storeName: storeName, item: item, instance: instance, keys: keys };\n        });\n        var modelKeyValues = this.getIndexKeyValuesFromModel(model);\n        return { storeName: storeName, set: set, connectionStoreNames: connectionStoreNames, modelKeyValues: modelKeyValues };\n    };\n    /**\n     * Enforces conditional save. Throws if condition is not met.\n     * used by individual storage adapters\n     *\n     * @param model\n     */\n    StorageAdapterBase.prototype.validateSaveCondition = function (condition, fromDB) {\n        if (!(condition && fromDB)) {\n            return;\n        }\n        var predicates = ModelPredicateCreator.getPredicates(condition);\n        var _a = predicates, predicateObjs = _a.predicates, type = _a.type;\n        var isValid = validatePredicate(fromDB, type, predicateObjs);\n        if (!isValid) {\n            var msg = 'Conditional update failed';\n            logger.error(msg, { model: fromDB, condition: predicateObjs });\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Instantiate models from POJO records returned from the database\n     *\n     * @param namespaceName - string model namespace\n     * @param srcModelName - string model name\n     * @param records - array of uninstantiated records\n     * @returns\n     */\n    StorageAdapterBase.prototype.load = function (namespaceName, srcModelName, records) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, relations, connectionStoreNames, modelConstructor;\n            var _this = this;\n            return __generator(this, function (_a) {\n                namespace = this.schema.namespaces[namespaceName];\n                relations = namespace.relationships[srcModelName].relationTypes;\n                connectionStoreNames = relations.map(function (_a) {\n                    var modelName = _a.modelName;\n                    return getStorename(namespaceName, modelName);\n                });\n                modelConstructor = this.getModelConstructorByModelName(namespaceName, srcModelName);\n                if (connectionStoreNames.length === 0) {\n                    return [2 /*return*/, records.map(function (record) {\n                            return _this.modelInstanceCreator(modelConstructor, record);\n                        })];\n                }\n                return [2 /*return*/, records.map(function (record) {\n                        return _this.modelInstanceCreator(modelConstructor, record);\n                    })];\n            });\n        });\n    };\n    /**\n     * Extracts operands from a predicate group into an array of key values\n     * Used in the query method\n     *\n     * @param predicates - predicate group\n     * @param keyPath - string array of key names ['id', 'sortKey']\n     * @returns string[] of key values\n     *\n     * @example\n     * ```js\n     * { and:[{ id: { eq: 'abc' }}, { sortKey: { eq: 'def' }}] }\n     * ```\n     * Becomes\n     * ```\n     * ['abc', 'def']\n     * ```\n     */\n    StorageAdapterBase.prototype.keyValueFromPredicate = function (predicates, keyPath) {\n        var e_1, _a;\n        var predicateObjs = predicates.predicates;\n        if (predicateObjs.length !== keyPath.length) {\n            return;\n        }\n        var keyValues = [];\n        var _loop_1 = function (key) {\n            var predicateObj = predicateObjs.find(function (p) {\n                // it's a relevant predicate object only if it's an equality\n                // operation for a key field from the key:\n                return isPredicateObj(p) &&\n                    p.field === key &&\n                    p.operator === 'eq' &&\n                    p.operand !== null &&\n                    p.operand !== undefined;\n            });\n            predicateObj && keyValues.push(predicateObj.operand);\n        };\n        try {\n            for (var keyPath_1 = __values(keyPath), keyPath_1_1 = keyPath_1.next(); !keyPath_1_1.done; keyPath_1_1 = keyPath_1.next()) {\n                var key = keyPath_1_1.value;\n                _loop_1(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keyPath_1_1 && !keyPath_1_1.done && (_a = keyPath_1.return)) _a.call(keyPath_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return keyValues.length === keyPath.length ? keyValues : undefined;\n    };\n    /**\n     * Common metadata for `query` operation\n     * used by individual storage adapters\n     *\n     * @param modelConstructor\n     * @param predicate\n     * @param pagination\n     */\n    StorageAdapterBase.prototype.queryMetadata = function (modelConstructor, predicate, pagination) {\n        var storeName = this.getStorenameForModel(modelConstructor);\n        var namespaceName = this.namespaceResolver(modelConstructor);\n        var predicates = predicate && ModelPredicateCreator.getPredicates(predicate);\n        var keyPath = getIndexKeys(this.schema.namespaces[namespaceName], modelConstructor.name);\n        var queryByKey = predicates && this.keyValueFromPredicate(predicates, keyPath);\n        var hasSort = pagination && pagination.sort;\n        var hasPagination = pagination && pagination.limit;\n        return {\n            storeName: storeName,\n            namespaceName: namespaceName,\n            queryByKey: queryByKey,\n            predicates: predicates,\n            hasSort: hasSort,\n            hasPagination: hasPagination,\n        };\n    };\n    /**\n     * Delete record\n     * Cascades to related records (for Has One and Has Many relationships)\n     *\n     * @param modelOrModelConstructor\n     * @param condition\n     * @returns\n     */\n    StorageAdapterBase.prototype.delete = function (modelOrModelConstructor, condition) {\n        return __awaiter(this, void 0, void 0, function () {\n            var deleteQueue, modelConstructor, namespace, models, deletedModels, deletedModels, model, modelConstructor, namespaceName, storeName, keyValues, fromDB, msg, predicates, _a, predicateObjs, type, isValid, msg, deletedModels;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.preOpCheck()];\n                    case 1:\n                        _b.sent();\n                        deleteQueue = [];\n                        if (!isModelConstructor(modelOrModelConstructor)) return [3 /*break*/, 9];\n                        modelConstructor = modelOrModelConstructor;\n                        namespace = this.namespaceResolver(modelConstructor);\n                        return [4 /*yield*/, this.query(modelConstructor, condition)];\n                    case 2:\n                        models = _b.sent();\n                        if (!(condition !== undefined)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.deleteTraverse(models, modelConstructor, namespace, deleteQueue)];\n                    case 3:\n                        _b.sent();\n                        return [4 /*yield*/, this.deleteItem(deleteQueue)];\n                    case 4:\n                        _b.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [models, deletedModels]];\n                    case 5: return [4 /*yield*/, this.deleteTraverse(models, modelConstructor, namespace, deleteQueue)];\n                    case 6:\n                        _b.sent();\n                        return [4 /*yield*/, this.deleteItem(deleteQueue)];\n                    case 7:\n                        _b.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [models, deletedModels]];\n                    case 8: return [3 /*break*/, 16];\n                    case 9:\n                        model = modelOrModelConstructor;\n                        modelConstructor = Object.getPrototypeOf(model)\n                            .constructor;\n                        namespaceName = this.namespaceResolver(modelConstructor);\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        if (!condition) return [3 /*break*/, 12];\n                        keyValues = this.getIndexKeyValuesFromModel(model);\n                        return [4 /*yield*/, this._get(storeName, keyValues)];\n                    case 10:\n                        fromDB = _b.sent();\n                        if (fromDB === undefined) {\n                            msg = 'Model instance not found in storage';\n                            logger.warn(msg, { model: model });\n                            return [2 /*return*/, [[model], []]];\n                        }\n                        predicates = ModelPredicateCreator.getPredicates(condition);\n                        _a = predicates, predicateObjs = _a.predicates, type = _a.type;\n                        isValid = validatePredicate(fromDB, type, predicateObjs);\n                        if (!isValid) {\n                            msg = 'Conditional update failed';\n                            logger.error(msg, { model: fromDB, condition: predicateObjs });\n                            throw new Error(msg);\n                        }\n                        return [4 /*yield*/, this.deleteTraverse([model], modelConstructor, namespaceName, deleteQueue)];\n                    case 11:\n                        _b.sent();\n                        return [3 /*break*/, 14];\n                    case 12: return [4 /*yield*/, this.deleteTraverse([model], modelConstructor, namespaceName, deleteQueue)];\n                    case 13:\n                        _b.sent();\n                        _b.label = 14;\n                    case 14: return [4 /*yield*/, this.deleteItem(deleteQueue)];\n                    case 15:\n                        _b.sent();\n                        deletedModels = deleteQueue.reduce(function (acc, _a) {\n                            var items = _a.items;\n                            return acc.concat(items);\n                        }, []);\n                        return [2 /*return*/, [[model], deletedModels]];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Recursively traverse relationship graph and add\n     * all Has One and Has Many relations to `deleteQueue` param\n     *\n     * Actual deletion of records added to `deleteQueue` occurs in the `delete` method\n     *\n     * @param models\n     * @param modelConstructor\n     * @param namespace\n     * @param deleteQueue\n     */\n    StorageAdapterBase.prototype.deleteTraverse = function (models, modelConstructor, namespace, deleteQueue) {\n        var models_1, models_1_1;\n        var e_2, _a, e_3, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var cascadingRelationTypes, model, modelDefinition, modelMeta, relationships, relationships_1, relationships_1_1, r, queryObject, relatedRecords, e_3_1, e_2_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        cascadingRelationTypes = ['HAS_ONE', 'HAS_MANY'];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 19, 20, 25]);\n                        models_1 = __asyncValues(models);\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, models_1.next()];\n                    case 3:\n                        if (!(models_1_1 = _c.sent(), !models_1_1.done)) return [3 /*break*/, 18];\n                        model = models_1_1.value;\n                        modelDefinition = this.schema.namespaces[namespace].models[modelConstructor.name];\n                        modelMeta = {\n                            builder: modelConstructor,\n                            schema: modelDefinition,\n                            pkField: extractPrimaryKeyFieldNames(modelDefinition),\n                        };\n                        relationships = ModelRelationship.allFrom(modelMeta).filter(function (r) {\n                            return cascadingRelationTypes.includes(r.type);\n                        });\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 11, 12, 17]);\n                        relationships_1 = __asyncValues(relationships);\n                        _c.label = 5;\n                    case 5: return [4 /*yield*/, relationships_1.next()];\n                    case 6:\n                        if (!(relationships_1_1 = _c.sent(), !relationships_1_1.done)) return [3 /*break*/, 10];\n                        r = relationships_1_1.value;\n                        queryObject = r.createRemoteQueryObject(model);\n                        if (!(queryObject !== null)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.query(r.remoteModelConstructor, ModelPredicateCreator.createFromFlatEqualities(r.remoteDefinition, queryObject))];\n                    case 7:\n                        relatedRecords = _c.sent();\n                        return [4 /*yield*/, this.deleteTraverse(relatedRecords, r.remoteModelConstructor, namespace, deleteQueue)];\n                    case 8:\n                        _c.sent();\n                        _c.label = 9;\n                    case 9: return [3 /*break*/, 5];\n                    case 10: return [3 /*break*/, 17];\n                    case 11:\n                        e_3_1 = _c.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 17];\n                    case 12:\n                        _c.trys.push([12, , 15, 16]);\n                        if (!(relationships_1_1 && !relationships_1_1.done && (_b = relationships_1.return))) return [3 /*break*/, 14];\n                        return [4 /*yield*/, _b.call(relationships_1)];\n                    case 13:\n                        _c.sent();\n                        _c.label = 14;\n                    case 14: return [3 /*break*/, 16];\n                    case 15:\n                        if (e_3) throw e_3.error;\n                        return [7 /*endfinally*/];\n                    case 16: return [7 /*endfinally*/];\n                    case 17: return [3 /*break*/, 2];\n                    case 18: return [3 /*break*/, 25];\n                    case 19:\n                        e_2_1 = _c.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 25];\n                    case 20:\n                        _c.trys.push([20, , 23, 24]);\n                        if (!(models_1_1 && !models_1_1.done && (_a = models_1.return))) return [3 /*break*/, 22];\n                        return [4 /*yield*/, _a.call(models_1)];\n                    case 21:\n                        _c.sent();\n                        _c.label = 22;\n                    case 22: return [3 /*break*/, 24];\n                    case 23:\n                        if (e_2) throw e_2.error;\n                        return [7 /*endfinally*/];\n                    case 24: return [7 /*endfinally*/];\n                    case 25:\n                        deleteQueue.push({\n                            storeName: getStorename(namespace, modelConstructor.name),\n                            items: models,\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StorageAdapterBase;\n}());\nexport { StorageAdapterBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}