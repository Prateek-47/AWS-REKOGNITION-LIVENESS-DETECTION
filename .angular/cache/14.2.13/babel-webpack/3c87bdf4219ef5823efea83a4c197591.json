{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __rest, __values } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Logger, Mutex } from '@aws-amplify/core';\nimport PushStream from 'zen-push';\nimport { ModelPredicateCreator } from '../predicates';\nimport { OpType, QueryOne, isTargetNameAssociation } from '../types';\nimport { isModelConstructor, STORAGE, validatePredicate, valuesEqual } from '../util';\nimport { getIdentifierValue } from '../sync/utils';\nimport getDefaultAdapter from './adapter/getDefaultAdapter';\nvar logger = new Logger('DataStore');\n\nvar StorageClass =\n/** @class */\nfunction () {\n  function StorageClass(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId) {\n    this.schema = schema;\n    this.namespaceResolver = namespaceResolver;\n    this.getModelConstructorByModelName = getModelConstructorByModelName;\n    this.modelInstanceCreator = modelInstanceCreator;\n    this.adapter = adapter;\n    this.sessionId = sessionId;\n    this.adapter = this.adapter || getDefaultAdapter();\n    this.pushStream = new PushStream();\n  }\n\n  StorageClass.getNamespace = function () {\n    var namespace = {\n      name: STORAGE,\n      relationships: {},\n      enums: {},\n      models: {},\n      nonModels: {}\n    };\n    return namespace;\n  };\n\n  StorageClass.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolve, reject;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.initialized !== undefined)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.initialized];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n\n          case 2:\n            logger.debug('Starting Storage');\n            this.initialized = new Promise(function (res, rej) {\n              resolve = res;\n              reject = rej;\n            });\n            this.adapter.setUp(this.schema, this.namespaceResolver, this.modelInstanceCreator, this.getModelConstructorByModelName, this.sessionId).then(resolve, reject);\n            return [4\n            /*yield*/\n            , this.initialized];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.save = function (model, condition, mutator, patchesTuple) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.init()];\n\n          case 1:\n            _a.sent();\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.save(model, condition)];\n\n          case 2:\n            result = _a.sent();\n            result.forEach(function (r) {\n              var _a = __read(r, 2),\n                  savedElement = _a[0],\n                  opType = _a[1]; // truthy when save is called by the Merger\n\n\n              var syncResponse = !!mutator;\n              var updateMutationInput; // don't attempt to calc mutation input when storage.save\n              // is called by Merger, i.e., when processing an AppSync response\n\n              if ((opType === OpType.UPDATE || opType === OpType.INSERT) && !syncResponse) {\n                //\n                // TODO: LOOK!!!\n                // the `model` used here is in effect regardless of what model\n                // comes back from adapter.save().\n                // Prior to fix, SQLite adapter had been returning two models\n                // of different types, resulting in invalid outbox entries.\n                //\n                // the bug is essentially fixed in SQLite adapter.\n                // leaving as-is, because it's currently unclear whether anything\n                // depends on this remaining as-is.\n                //\n                updateMutationInput = _this.getChangedFieldsInput(model, savedElement, patchesTuple); // // an update without changed user fields\n                // => don't create mutationEvent\n\n                if (updateMutationInput === null) {\n                  return result;\n                }\n              }\n\n              var element = updateMutationInput || savedElement;\n              var modelConstructor = Object.getPrototypeOf(savedElement).constructor;\n\n              _this.pushStream.next({\n                model: modelConstructor,\n                opType: opType,\n                element: element,\n                mutator: mutator,\n                condition: condition && ModelPredicateCreator.getPredicates(condition, false) || null,\n                savedElement: savedElement\n              });\n            });\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.delete = function (modelOrModelConstructor, condition, mutator) {\n    return __awaiter(this, void 0, void 0, function () {\n      var models, deleted, modelConstructor, namespaceName, modelDefinition, modelIds;\n\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.init()];\n\n          case 1:\n            _b.sent();\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.delete(modelOrModelConstructor, condition)];\n\n          case 2:\n            _a = __read.apply(void 0, [_b.sent(), 2]), models = _a[0], deleted = _a[1];\n            modelConstructor = isModelConstructor(modelOrModelConstructor) ? modelOrModelConstructor : Object.getPrototypeOf(modelOrModelConstructor || {}).constructor;\n            namespaceName = this.namespaceResolver(modelConstructor);\n            modelDefinition = this.schema.namespaces[namespaceName].models[modelConstructor.name];\n            modelIds = new Set(models.map(function (model) {\n              var modelId = getIdentifierValue(modelDefinition, model);\n              return modelId;\n            }));\n\n            if (!isModelConstructor(modelOrModelConstructor) && !Array.isArray(deleted)) {\n              deleted = [deleted];\n            }\n\n            deleted.forEach(function (model) {\n              var modelConstructor = Object.getPrototypeOf(model).constructor;\n              var theCondition;\n\n              if (!isModelConstructor(modelOrModelConstructor)) {\n                var modelId = getIdentifierValue(modelDefinition, model);\n                theCondition = modelIds.has(modelId) ? ModelPredicateCreator.getPredicates(condition, false) : undefined;\n              }\n\n              _this.pushStream.next({\n                model: modelConstructor,\n                opType: OpType.DELETE,\n                element: model,\n                mutator: mutator,\n                condition: theCondition || null\n              });\n            });\n            return [2\n            /*return*/\n            , [models, deleted]];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.init()];\n\n          case 1:\n            _a.sent();\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.query(modelConstructor, predicate, pagination)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.init()];\n\n          case 1:\n            _a.sent();\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.queryOne(modelConstructor, firstOrLast)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.observe = function (modelConstructor, predicate, skipOwn) {\n    var listenToAll = !modelConstructor;\n\n    var _a = predicate && ModelPredicateCreator.getPredicates(predicate, false) || {},\n        predicates = _a.predicates,\n        type = _a.type;\n\n    var result = this.pushStream.observable.filter(function (_a) {\n      var mutator = _a.mutator;\n      return !skipOwn || mutator !== skipOwn;\n    }).map(function (_a) {\n      var _mutator = _a.mutator,\n          message = __rest(_a, [\"mutator\"]);\n\n      return message;\n    });\n\n    if (!listenToAll) {\n      result = result.filter(function (_a) {\n        var model = _a.model,\n            element = _a.element;\n\n        if (modelConstructor !== model) {\n          return false;\n        }\n\n        if (!!predicates && !!type) {\n          return validatePredicate(element, type, predicates);\n        }\n\n        return true;\n      });\n    }\n\n    return result;\n  };\n\n  StorageClass.prototype.clear = function (completeObservable) {\n    if (completeObservable === void 0) {\n      completeObservable = true;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.initialized = undefined;\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.clear()];\n\n          case 1:\n            _a.sent();\n\n            if (completeObservable) {\n              this.pushStream.complete();\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  StorageClass.prototype.batchSave = function (modelConstructor, items, mutator) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.init()];\n\n          case 1:\n            _a.sent();\n\n            if (!this.adapter) {\n              throw new Error('Storage adapter is missing');\n            }\n\n            return [4\n            /*yield*/\n            , this.adapter.batchSave(modelConstructor, items)];\n\n          case 2:\n            result = _a.sent();\n            result.forEach(function (_a) {\n              var _b = __read(_a, 2),\n                  element = _b[0],\n                  opType = _b[1];\n\n              _this.pushStream.next({\n                model: modelConstructor,\n                opType: opType,\n                element: element,\n                mutator: mutator,\n                condition: null\n              });\n            });\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  }; // returns null if no user fields were changed (determined by value comparison)\n\n\n  StorageClass.prototype.getChangedFieldsInput = function (model, originalElement, patchesTuple) {\n    var e_1, _a;\n\n    var _b;\n\n    var containsPatches = patchesTuple && patchesTuple.length;\n\n    if (!containsPatches) {\n      return null;\n    }\n\n    var _c = __read(patchesTuple, 2),\n        patches = _c[0],\n        source = _c[1];\n\n    var updatedElement = {}; // extract array of updated fields from patches\n\n    var updatedFields = patches.map(function (patch) {\n      return patch.path && patch.path[0];\n    }); // check model def for association and replace with targetName if exists\n\n    var modelConstructor = Object.getPrototypeOf(model).constructor;\n    var namespace = this.namespaceResolver(modelConstructor);\n    var fields = this.schema.namespaces[namespace].models[modelConstructor.name].fields;\n\n    var _d = ((_b = this.schema.namespaces[namespace].keys) === null || _b === void 0 ? void 0 : _b[modelConstructor.name]) || {},\n        primaryKey = _d.primaryKey,\n        _e = _d.compositeKeys,\n        compositeKeys = _e === void 0 ? [] : _e; // set original values for these fields\n\n\n    updatedFields.forEach(function (field) {\n      var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;\n\n      var _f;\n\n      var targetNames = isTargetNameAssociation((_f = fields[field]) === null || _f === void 0 ? void 0 : _f.association);\n\n      if (Array.isArray(targetNames)) {\n        try {\n          // if field refers to a belongsTo relation, use the target field instead\n          for (var targetNames_1 = __values(targetNames), targetNames_1_1 = targetNames_1.next(); !targetNames_1_1.done; targetNames_1_1 = targetNames_1.next()) {\n            var targetName = targetNames_1_1.value; // check field values by value. Ignore unchanged fields\n\n            if (!valuesEqual(source[targetName], originalElement[targetName])) {\n              // if the field was updated to 'undefined', replace with 'null' for compatibility with JSON and GraphQL\n              updatedElement[targetName] = originalElement[targetName] === undefined ? null : originalElement[targetName];\n\n              try {\n                for (var compositeKeys_1 = (e_3 = void 0, __values(compositeKeys)), compositeKeys_1_1 = compositeKeys_1.next(); !compositeKeys_1_1.done; compositeKeys_1_1 = compositeKeys_1.next()) {\n                  var fieldSet = compositeKeys_1_1.value; // include all of the fields that comprise the composite key\n\n                  if (fieldSet.has(targetName)) {\n                    try {\n                      for (var fieldSet_1 = (e_4 = void 0, __values(fieldSet)), fieldSet_1_1 = fieldSet_1.next(); !fieldSet_1_1.done; fieldSet_1_1 = fieldSet_1.next()) {\n                        var compositeField = fieldSet_1_1.value;\n                        updatedElement[compositeField] = originalElement[compositeField];\n                      }\n                    } catch (e_4_1) {\n                      e_4 = {\n                        error: e_4_1\n                      };\n                    } finally {\n                      try {\n                        if (fieldSet_1_1 && !fieldSet_1_1.done && (_c = fieldSet_1.return)) _c.call(fieldSet_1);\n                      } finally {\n                        if (e_4) throw e_4.error;\n                      }\n                    }\n                  }\n                }\n              } catch (e_3_1) {\n                e_3 = {\n                  error: e_3_1\n                };\n              } finally {\n                try {\n                  if (compositeKeys_1_1 && !compositeKeys_1_1.done && (_b = compositeKeys_1.return)) _b.call(compositeKeys_1);\n                } finally {\n                  if (e_3) throw e_3.error;\n                }\n              }\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (targetNames_1_1 && !targetNames_1_1.done && (_a = targetNames_1.return)) _a.call(targetNames_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      } else {\n        // Backwards compatibility pre-CPK\n        // if field refers to a belongsTo relation, use the target field instead\n        var key = targetNames || field; // check field values by value. Ignore unchanged fields\n\n        if (!valuesEqual(source[key], originalElement[key])) {\n          // if the field was updated to 'undefined', replace with 'null' for compatibility with JSON and GraphQL\n          updatedElement[key] = originalElement[key] === undefined ? null : originalElement[key];\n\n          try {\n            for (var compositeKeys_2 = __values(compositeKeys), compositeKeys_2_1 = compositeKeys_2.next(); !compositeKeys_2_1.done; compositeKeys_2_1 = compositeKeys_2.next()) {\n              var fieldSet = compositeKeys_2_1.value; // include all of the fields that comprise the composite key\n\n              if (fieldSet.has(key)) {\n                try {\n                  for (var fieldSet_2 = (e_6 = void 0, __values(fieldSet)), fieldSet_2_1 = fieldSet_2.next(); !fieldSet_2_1.done; fieldSet_2_1 = fieldSet_2.next()) {\n                    var compositeField = fieldSet_2_1.value;\n                    updatedElement[compositeField] = originalElement[compositeField];\n                  }\n                } catch (e_6_1) {\n                  e_6 = {\n                    error: e_6_1\n                  };\n                } finally {\n                  try {\n                    if (fieldSet_2_1 && !fieldSet_2_1.done && (_e = fieldSet_2.return)) _e.call(fieldSet_2);\n                  } finally {\n                    if (e_6) throw e_6.error;\n                  }\n                }\n              }\n            }\n          } catch (e_5_1) {\n            e_5 = {\n              error: e_5_1\n            };\n          } finally {\n            try {\n              if (compositeKeys_2_1 && !compositeKeys_2_1.done && (_d = compositeKeys_2.return)) _d.call(compositeKeys_2);\n            } finally {\n              if (e_5) throw e_5.error;\n            }\n          }\n        }\n      }\n    }); // Exit early when there are no changes introduced in the update mutation\n\n    if (Object.keys(updatedElement).length === 0) {\n      return null;\n    } // include field(s) from custom PK if one is specified for the model\n\n\n    if (primaryKey && primaryKey.length) {\n      try {\n        for (var primaryKey_1 = __values(primaryKey), primaryKey_1_1 = primaryKey_1.next(); !primaryKey_1_1.done; primaryKey_1_1 = primaryKey_1.next()) {\n          var pkField = primaryKey_1_1.value;\n          updatedElement[pkField] = originalElement[pkField];\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (primaryKey_1_1 && !primaryKey_1_1.done && (_a = primaryKey_1.return)) _a.call(primaryKey_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    var id = originalElement.id,\n        _version = originalElement._version,\n        _lastChangedAt = originalElement._lastChangedAt,\n        _deleted = originalElement._deleted; // For update mutations we only want to send fields with changes\n    // and the required internal fields\n\n    return __assign(__assign({}, updatedElement), {\n      id: id,\n      _version: _version,\n      _lastChangedAt: _lastChangedAt,\n      _deleted: _deleted\n    });\n  };\n\n  return StorageClass;\n}();\n\nvar ExclusiveStorage =\n/** @class */\nfunction () {\n  function ExclusiveStorage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId) {\n    this.mutex = new Mutex();\n    this.storage = new StorageClass(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId);\n  }\n\n  ExclusiveStorage.prototype.runExclusive = function (fn) {\n    return this.mutex.runExclusive(fn.bind(this, this.storage));\n  };\n\n  ExclusiveStorage.prototype.save = function (model, condition, mutator, patchesTuple) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.runExclusive(function (storage) {\n          return storage.save(model, condition, mutator, patchesTuple);\n        })];\n      });\n    });\n  };\n\n  ExclusiveStorage.prototype.delete = function (modelOrModelConstructor, condition, mutator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.runExclusive(function (storage) {\n          if (isModelConstructor(modelOrModelConstructor)) {\n            var modelConstructor = modelOrModelConstructor;\n            return storage.delete(modelConstructor, condition, mutator);\n          } else {\n            var model = modelOrModelConstructor;\n            return storage.delete(model, condition, mutator);\n          }\n        })];\n      });\n    });\n  };\n\n  ExclusiveStorage.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.runExclusive(function (storage) {\n          return storage.query(modelConstructor, predicate, pagination);\n        })];\n      });\n    });\n  };\n\n  ExclusiveStorage.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.runExclusive(function (storage) {\n          return storage.queryOne(modelConstructor, firstOrLast);\n        })];\n      });\n    });\n  };\n\n  ExclusiveStorage.getNamespace = function () {\n    return StorageClass.getNamespace();\n  };\n\n  ExclusiveStorage.prototype.observe = function (modelConstructor, predicate, skipOwn) {\n    return this.storage.observe(modelConstructor, predicate, skipOwn);\n  };\n\n  ExclusiveStorage.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.runExclusive(function (storage) {\n              return storage.clear();\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ExclusiveStorage.prototype.batchSave = function (modelConstructor, items) {\n    return this.storage.batchSave(modelConstructor, items);\n  };\n\n  ExclusiveStorage.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.storage.init()];\n      });\n    });\n  };\n\n  return ExclusiveStorage;\n}();\n\nexport { ExclusiveStorage };","map":{"version":3,"names":["__assign","__awaiter","__generator","__read","__rest","__values","Logger","Mutex","PushStream","ModelPredicateCreator","OpType","QueryOne","isTargetNameAssociation","isModelConstructor","STORAGE","validatePredicate","valuesEqual","getIdentifierValue","getDefaultAdapter","logger","StorageClass","schema","namespaceResolver","getModelConstructorByModelName","modelInstanceCreator","adapter","sessionId","pushStream","getNamespace","namespace","name","relationships","enums","models","nonModels","prototype","init","resolve","reject","_a","label","initialized","undefined","sent","debug","Promise","res","rej","setUp","then","save","model","condition","mutator","patchesTuple","result","_this","Error","forEach","r","savedElement","opType","syncResponse","updateMutationInput","UPDATE","INSERT","getChangedFieldsInput","element","modelConstructor","Object","getPrototypeOf","constructor","next","getPredicates","delete","modelOrModelConstructor","deleted","namespaceName","modelDefinition","modelIds","_b","apply","namespaces","Set","map","modelId","Array","isArray","theCondition","has","DELETE","query","predicate","pagination","queryOne","firstOrLast","FIRST","observe","skipOwn","listenToAll","predicates","type","observable","filter","_mutator","message","clear","completeObservable","complete","batchSave","items","originalElement","e_1","containsPatches","length","_c","patches","source","updatedElement","updatedFields","patch","path","fields","_d","keys","primaryKey","_e","compositeKeys","field","e_2","e_3","e_4","e_5","e_6","_f","targetNames","association","targetNames_1","targetNames_1_1","done","targetName","value","compositeKeys_1","compositeKeys_1_1","fieldSet","fieldSet_1","fieldSet_1_1","compositeField","e_4_1","error","return","call","e_3_1","e_2_1","key","compositeKeys_2","compositeKeys_2_1","fieldSet_2","fieldSet_2_1","e_6_1","e_5_1","primaryKey_1","primaryKey_1_1","pkField","e_1_1","id","_version","_lastChangedAt","_deleted","ExclusiveStorage","mutex","storage","runExclusive","fn","bind"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/datastore/lib-esm/storage/storage.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __read, __rest, __values } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Logger, Mutex } from '@aws-amplify/core';\nimport PushStream from 'zen-push';\nimport { ModelPredicateCreator } from '../predicates';\nimport { OpType, QueryOne, isTargetNameAssociation, } from '../types';\nimport { isModelConstructor, STORAGE, validatePredicate, valuesEqual, } from '../util';\nimport { getIdentifierValue } from '../sync/utils';\nimport getDefaultAdapter from './adapter/getDefaultAdapter';\nvar logger = new Logger('DataStore');\nvar StorageClass = /** @class */ (function () {\n    function StorageClass(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId) {\n        this.schema = schema;\n        this.namespaceResolver = namespaceResolver;\n        this.getModelConstructorByModelName = getModelConstructorByModelName;\n        this.modelInstanceCreator = modelInstanceCreator;\n        this.adapter = adapter;\n        this.sessionId = sessionId;\n        this.adapter = this.adapter || getDefaultAdapter();\n        this.pushStream = new PushStream();\n    }\n    StorageClass.getNamespace = function () {\n        var namespace = {\n            name: STORAGE,\n            relationships: {},\n            enums: {},\n            models: {},\n            nonModels: {},\n        };\n        return namespace;\n    };\n    StorageClass.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolve, reject;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.initialized !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.initialized];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        logger.debug('Starting Storage');\n                        this.initialized = new Promise(function (res, rej) {\n                            resolve = res;\n                            reject = rej;\n                        });\n                        this.adapter.setUp(this.schema, this.namespaceResolver, this.modelInstanceCreator, this.getModelConstructorByModelName, this.sessionId).then(resolve, reject);\n                        return [4 /*yield*/, this.initialized];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.save = function (model, condition, mutator, patchesTuple) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.save(model, condition)];\n                    case 2:\n                        result = _a.sent();\n                        result.forEach(function (r) {\n                            var _a = __read(r, 2), savedElement = _a[0], opType = _a[1];\n                            // truthy when save is called by the Merger\n                            var syncResponse = !!mutator;\n                            var updateMutationInput;\n                            // don't attempt to calc mutation input when storage.save\n                            // is called by Merger, i.e., when processing an AppSync response\n                            if ((opType === OpType.UPDATE || opType === OpType.INSERT) &&\n                                !syncResponse) {\n                                //\n                                // TODO: LOOK!!!\n                                // the `model` used here is in effect regardless of what model\n                                // comes back from adapter.save().\n                                // Prior to fix, SQLite adapter had been returning two models\n                                // of different types, resulting in invalid outbox entries.\n                                //\n                                // the bug is essentially fixed in SQLite adapter.\n                                // leaving as-is, because it's currently unclear whether anything\n                                // depends on this remaining as-is.\n                                //\n                                updateMutationInput = _this.getChangedFieldsInput(model, savedElement, patchesTuple);\n                                // // an update without changed user fields\n                                // => don't create mutationEvent\n                                if (updateMutationInput === null) {\n                                    return result;\n                                }\n                            }\n                            var element = updateMutationInput || savedElement;\n                            var modelConstructor = Object.getPrototypeOf(savedElement)\n                                .constructor;\n                            _this.pushStream.next({\n                                model: modelConstructor,\n                                opType: opType,\n                                element: element,\n                                mutator: mutator,\n                                condition: (condition &&\n                                    ModelPredicateCreator.getPredicates(condition, false)) ||\n                                    null,\n                                savedElement: savedElement,\n                            });\n                        });\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.delete = function (modelOrModelConstructor, condition, mutator) {\n        return __awaiter(this, void 0, void 0, function () {\n            var models, deleted, modelConstructor, namespaceName, modelDefinition, modelIds;\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.init()];\n                    case 1:\n                        _b.sent();\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.delete(modelOrModelConstructor, condition)];\n                    case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), models = _a[0], deleted = _a[1];\n                        modelConstructor = isModelConstructor(modelOrModelConstructor)\n                            ? modelOrModelConstructor\n                            : Object.getPrototypeOf(modelOrModelConstructor || {})\n                                .constructor;\n                        namespaceName = this.namespaceResolver(modelConstructor);\n                        modelDefinition = this.schema.namespaces[namespaceName].models[modelConstructor.name];\n                        modelIds = new Set(models.map(function (model) {\n                            var modelId = getIdentifierValue(modelDefinition, model);\n                            return modelId;\n                        }));\n                        if (!isModelConstructor(modelOrModelConstructor) &&\n                            !Array.isArray(deleted)) {\n                            deleted = [deleted];\n                        }\n                        deleted.forEach(function (model) {\n                            var modelConstructor = Object.getPrototypeOf(model)\n                                .constructor;\n                            var theCondition;\n                            if (!isModelConstructor(modelOrModelConstructor)) {\n                                var modelId = getIdentifierValue(modelDefinition, model);\n                                theCondition = modelIds.has(modelId)\n                                    ? ModelPredicateCreator.getPredicates(condition, false)\n                                    : undefined;\n                            }\n                            _this.pushStream.next({\n                                model: modelConstructor,\n                                opType: OpType.DELETE,\n                                element: model,\n                                mutator: mutator,\n                                condition: theCondition || null,\n                            });\n                        });\n                        return [2 /*return*/, [models, deleted]];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.query = function (modelConstructor, predicate, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.query(modelConstructor, predicate, pagination)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.queryOne = function (modelConstructor, firstOrLast) {\n        if (firstOrLast === void 0) { firstOrLast = QueryOne.FIRST; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.queryOne(modelConstructor, firstOrLast)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.observe = function (modelConstructor, predicate, skipOwn) {\n        var listenToAll = !modelConstructor;\n        var _a = (predicate && ModelPredicateCreator.getPredicates(predicate, false)) ||\n            {}, predicates = _a.predicates, type = _a.type;\n        var result = this.pushStream.observable\n            .filter(function (_a) {\n            var mutator = _a.mutator;\n            return !skipOwn || mutator !== skipOwn;\n        })\n            .map(function (_a) {\n            var _mutator = _a.mutator, message = __rest(_a, [\"mutator\"]);\n            return message;\n        });\n        if (!listenToAll) {\n            result = result.filter(function (_a) {\n                var model = _a.model, element = _a.element;\n                if (modelConstructor !== model) {\n                    return false;\n                }\n                if (!!predicates && !!type) {\n                    return validatePredicate(element, type, predicates);\n                }\n                return true;\n            });\n        }\n        return result;\n    };\n    StorageClass.prototype.clear = function (completeObservable) {\n        if (completeObservable === void 0) { completeObservable = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.initialized = undefined;\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.clear()];\n                    case 1:\n                        _a.sent();\n                        if (completeObservable) {\n                            this.pushStream.complete();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageClass.prototype.batchSave = function (modelConstructor, items, mutator) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        if (!this.adapter) {\n                            throw new Error('Storage adapter is missing');\n                        }\n                        return [4 /*yield*/, this.adapter.batchSave(modelConstructor, items)];\n                    case 2:\n                        result = _a.sent();\n                        result.forEach(function (_a) {\n                            var _b = __read(_a, 2), element = _b[0], opType = _b[1];\n                            _this.pushStream.next({\n                                model: modelConstructor,\n                                opType: opType,\n                                element: element,\n                                mutator: mutator,\n                                condition: null,\n                            });\n                        });\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    // returns null if no user fields were changed (determined by value comparison)\n    StorageClass.prototype.getChangedFieldsInput = function (model, originalElement, patchesTuple) {\n        var e_1, _a;\n        var _b;\n        var containsPatches = patchesTuple && patchesTuple.length;\n        if (!containsPatches) {\n            return null;\n        }\n        var _c = __read(patchesTuple, 2), patches = _c[0], source = _c[1];\n        var updatedElement = {};\n        // extract array of updated fields from patches\n        var updatedFields = (patches.map(function (patch) { return patch.path && patch.path[0]; }));\n        // check model def for association and replace with targetName if exists\n        var modelConstructor = Object.getPrototypeOf(model)\n            .constructor;\n        var namespace = this.namespaceResolver(modelConstructor);\n        var fields = this.schema.namespaces[namespace].models[modelConstructor.name].fields;\n        var _d = ((_b = this.schema.namespaces[namespace].keys) === null || _b === void 0 ? void 0 : _b[modelConstructor.name]) || {}, primaryKey = _d.primaryKey, _e = _d.compositeKeys, compositeKeys = _e === void 0 ? [] : _e;\n        // set original values for these fields\n        updatedFields.forEach(function (field) {\n            var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;\n            var _f;\n            var targetNames = isTargetNameAssociation((_f = fields[field]) === null || _f === void 0 ? void 0 : _f.association);\n            if (Array.isArray(targetNames)) {\n                try {\n                    // if field refers to a belongsTo relation, use the target field instead\n                    for (var targetNames_1 = __values(targetNames), targetNames_1_1 = targetNames_1.next(); !targetNames_1_1.done; targetNames_1_1 = targetNames_1.next()) {\n                        var targetName = targetNames_1_1.value;\n                        // check field values by value. Ignore unchanged fields\n                        if (!valuesEqual(source[targetName], originalElement[targetName])) {\n                            // if the field was updated to 'undefined', replace with 'null' for compatibility with JSON and GraphQL\n                            updatedElement[targetName] =\n                                originalElement[targetName] === undefined\n                                    ? null\n                                    : originalElement[targetName];\n                            try {\n                                for (var compositeKeys_1 = (e_3 = void 0, __values(compositeKeys)), compositeKeys_1_1 = compositeKeys_1.next(); !compositeKeys_1_1.done; compositeKeys_1_1 = compositeKeys_1.next()) {\n                                    var fieldSet = compositeKeys_1_1.value;\n                                    // include all of the fields that comprise the composite key\n                                    if (fieldSet.has(targetName)) {\n                                        try {\n                                            for (var fieldSet_1 = (e_4 = void 0, __values(fieldSet)), fieldSet_1_1 = fieldSet_1.next(); !fieldSet_1_1.done; fieldSet_1_1 = fieldSet_1.next()) {\n                                                var compositeField = fieldSet_1_1.value;\n                                                updatedElement[compositeField] =\n                                                    originalElement[compositeField];\n                                            }\n                                        }\n                                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                                        finally {\n                                            try {\n                                                if (fieldSet_1_1 && !fieldSet_1_1.done && (_c = fieldSet_1.return)) _c.call(fieldSet_1);\n                                            }\n                                            finally { if (e_4) throw e_4.error; }\n                                        }\n                                    }\n                                }\n                            }\n                            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                            finally {\n                                try {\n                                    if (compositeKeys_1_1 && !compositeKeys_1_1.done && (_b = compositeKeys_1.return)) _b.call(compositeKeys_1);\n                                }\n                                finally { if (e_3) throw e_3.error; }\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (targetNames_1_1 && !targetNames_1_1.done && (_a = targetNames_1.return)) _a.call(targetNames_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                // Backwards compatibility pre-CPK\n                // if field refers to a belongsTo relation, use the target field instead\n                var key = targetNames || field;\n                // check field values by value. Ignore unchanged fields\n                if (!valuesEqual(source[key], originalElement[key])) {\n                    // if the field was updated to 'undefined', replace with 'null' for compatibility with JSON and GraphQL\n                    updatedElement[key] =\n                        originalElement[key] === undefined ? null : originalElement[key];\n                    try {\n                        for (var compositeKeys_2 = __values(compositeKeys), compositeKeys_2_1 = compositeKeys_2.next(); !compositeKeys_2_1.done; compositeKeys_2_1 = compositeKeys_2.next()) {\n                            var fieldSet = compositeKeys_2_1.value;\n                            // include all of the fields that comprise the composite key\n                            if (fieldSet.has(key)) {\n                                try {\n                                    for (var fieldSet_2 = (e_6 = void 0, __values(fieldSet)), fieldSet_2_1 = fieldSet_2.next(); !fieldSet_2_1.done; fieldSet_2_1 = fieldSet_2.next()) {\n                                        var compositeField = fieldSet_2_1.value;\n                                        updatedElement[compositeField] =\n                                            originalElement[compositeField];\n                                    }\n                                }\n                                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                                finally {\n                                    try {\n                                        if (fieldSet_2_1 && !fieldSet_2_1.done && (_e = fieldSet_2.return)) _e.call(fieldSet_2);\n                                    }\n                                    finally { if (e_6) throw e_6.error; }\n                                }\n                            }\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (compositeKeys_2_1 && !compositeKeys_2_1.done && (_d = compositeKeys_2.return)) _d.call(compositeKeys_2);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                }\n            }\n        });\n        // Exit early when there are no changes introduced in the update mutation\n        if (Object.keys(updatedElement).length === 0) {\n            return null;\n        }\n        // include field(s) from custom PK if one is specified for the model\n        if (primaryKey && primaryKey.length) {\n            try {\n                for (var primaryKey_1 = __values(primaryKey), primaryKey_1_1 = primaryKey_1.next(); !primaryKey_1_1.done; primaryKey_1_1 = primaryKey_1.next()) {\n                    var pkField = primaryKey_1_1.value;\n                    updatedElement[pkField] = originalElement[pkField];\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (primaryKey_1_1 && !primaryKey_1_1.done && (_a = primaryKey_1.return)) _a.call(primaryKey_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        var id = originalElement.id, _version = originalElement._version, _lastChangedAt = originalElement._lastChangedAt, _deleted = originalElement._deleted;\n        // For update mutations we only want to send fields with changes\n        // and the required internal fields\n        return __assign(__assign({}, updatedElement), { id: id,\n            _version: _version,\n            _lastChangedAt: _lastChangedAt,\n            _deleted: _deleted });\n    };\n    return StorageClass;\n}());\nvar ExclusiveStorage = /** @class */ (function () {\n    function ExclusiveStorage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId) {\n        this.mutex = new Mutex();\n        this.storage = new StorageClass(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator, adapter, sessionId);\n    }\n    ExclusiveStorage.prototype.runExclusive = function (fn) {\n        return this.mutex.runExclusive(fn.bind(this, this.storage));\n    };\n    ExclusiveStorage.prototype.save = function (model, condition, mutator, patchesTuple) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.runExclusive(function (storage) {\n                        return storage.save(model, condition, mutator, patchesTuple);\n                    })];\n            });\n        });\n    };\n    ExclusiveStorage.prototype.delete = function (modelOrModelConstructor, condition, mutator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.runExclusive(function (storage) {\n                        if (isModelConstructor(modelOrModelConstructor)) {\n                            var modelConstructor = modelOrModelConstructor;\n                            return storage.delete(modelConstructor, condition, mutator);\n                        }\n                        else {\n                            var model = modelOrModelConstructor;\n                            return storage.delete(model, condition, mutator);\n                        }\n                    })];\n            });\n        });\n    };\n    ExclusiveStorage.prototype.query = function (modelConstructor, predicate, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.runExclusive(function (storage) {\n                        return storage.query(modelConstructor, predicate, pagination);\n                    })];\n            });\n        });\n    };\n    ExclusiveStorage.prototype.queryOne = function (modelConstructor, firstOrLast) {\n        if (firstOrLast === void 0) { firstOrLast = QueryOne.FIRST; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.runExclusive(function (storage) {\n                        return storage.queryOne(modelConstructor, firstOrLast);\n                    })];\n            });\n        });\n    };\n    ExclusiveStorage.getNamespace = function () {\n        return StorageClass.getNamespace();\n    };\n    ExclusiveStorage.prototype.observe = function (modelConstructor, predicate, skipOwn) {\n        return this.storage.observe(modelConstructor, predicate, skipOwn);\n    };\n    ExclusiveStorage.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.runExclusive(function (storage) { return storage.clear(); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExclusiveStorage.prototype.batchSave = function (modelConstructor, items) {\n        return this.storage.batchSave(modelConstructor, items);\n    };\n    ExclusiveStorage.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.storage.init()];\n            });\n        });\n    };\n    return ExclusiveStorage;\n}());\nexport { ExclusiveStorage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}