{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform, util } from '@tensorflow/tfjs-core';\nlet wasmTransform;\n\nfunction setup(backend) {\n  wasmTransform = backend.wasm.cwrap(Transform, null\n  /*void*/\n  , ['number', 'number', 'bool', 'number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\n\nfunction transform(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    image,\n    transforms\n  } = inputs;\n  const {\n    interpolation,\n    fillMode,\n    fillValue,\n    outputShape\n  } = attrs;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape = [batch, outHeight, outWidth, numChannels];\n  const strides = new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n\n    case 'reflect':\n      fillModeId = 2;\n      break;\n\n    case 'wrap':\n      fillModeId = 3;\n      break;\n\n    case 'nearest':\n      fillModeId = 4;\n      break;\n\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(imageId, transformsId, transforms.shape[0] > 1, batch, outHeight, outWidth, numChannels, imageWidth, imageHeight, strides, image.shape.length - 1, interpolationModeId, fillModeId, fillValue, outId);\n  return out;\n}\n\nexport const transformConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform\n};","map":{"version":3,"names":["Transform","util","wasmTransform","setup","backend","wasm","cwrap","transform","args","inputs","attrs","image","transforms","interpolation","fillMode","fillValue","outputShape","batch","imageHeight","imageWidth","numChannels","shape","outHeight","outWidth","outShape","strides","Uint8Array","Int32Array","computeStrides","buffer","out","makeOutput","dtype","outId","dataIdMap","get","dataId","id","imageData","imageId","transformsData","transformsId","interpolationModeId","fillModeId","length","transformConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Transform.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform, util } from '@tensorflow/tfjs-core';\nlet wasmTransform;\nfunction setup(backend) {\n    wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n        'number',\n        'number',\n        'bool',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction transform(args) {\n    const { backend, inputs, attrs } = args;\n    const { image, transforms } = inputs;\n    const { interpolation, fillMode, fillValue, outputShape } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n    const outShape = [batch, outHeight, outWidth,\n        numChannels];\n    const strides = new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n    const out = backend.makeOutput(outShape, image.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const imageData = backend.dataIdMap.get(image.dataId);\n    const imageId = imageData.id;\n    const transformsData = backend.dataIdMap.get(transforms.dataId);\n    const transformsId = transformsData.id;\n    const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n    let fillModeId;\n    switch (fillMode) {\n        case 'constant':\n            fillModeId = 1;\n            break;\n        case 'reflect':\n            fillModeId = 2;\n            break;\n        case 'wrap':\n            fillModeId = 3;\n            break;\n        case 'nearest':\n            fillModeId = 4;\n            break;\n        default:\n            fillModeId = 1;\n            break;\n    }\n    wasmTransform(imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight, outWidth, numChannels, imageWidth, imageHeight, strides, image.shape.length - 1, interpolationModeId, fillModeId, fillValue, outId);\n    return out;\n}\nexport const transformConfig = {\n    kernelName: Transform,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: transform\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}