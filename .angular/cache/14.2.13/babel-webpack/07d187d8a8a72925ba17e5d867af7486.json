{"ast":null,"code":"import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n  const {\n    endpointParams,\n    logger\n  } = options;\n  const {\n    parameters,\n    rules\n  } = ruleSetObject;\n  options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n  const paramsWithDefault = Object.entries(parameters).filter(([, v]) => v.default != null).map(([k, v]) => [k, v.default]);\n\n  if (paramsWithDefault.length > 0) {\n    for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n      endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n    }\n  }\n\n  const requiredParams = Object.entries(parameters).filter(([, v]) => v.required).map(([k]) => k);\n\n  for (const requiredParam of requiredParams) {\n    if (endpointParams[requiredParam] == null) {\n      throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n    }\n  }\n\n  const endpoint = evaluateRules(rules, {\n    endpointParams,\n    logger,\n    referenceRecord: {}\n  });\n\n  if (options.endpointParams?.Endpoint) {\n    try {\n      const givenEndpoint = new URL(options.endpointParams.Endpoint);\n      const {\n        protocol,\n        port\n      } = givenEndpoint;\n      endpoint.url.protocol = protocol;\n      endpoint.url.port = port;\n    } catch (e) {}\n  }\n\n  options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n  return endpoint;\n};","map":{"version":3,"names":["debugId","toDebugString","EndpointError","evaluateRules","resolveEndpoint","ruleSetObject","options","endpointParams","logger","parameters","rules","debug","paramsWithDefault","Object","entries","filter","v","default","map","k","length","paramKey","paramDefaultValue","requiredParams","required","requiredParam","endpoint","referenceRecord","Endpoint","givenEndpoint","URL","protocol","port","url","e"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js"],"sourcesContent":["import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,SAAvC;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;EACvD,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA6BF,OAAnC;EACA,MAAM;IAAEG,UAAF;IAAcC;EAAd,IAAwBL,aAA9B;EACAC,OAAO,CAACE,MAAR,EAAgBG,KAAhB,GAAyB,GAAEX,OAAQ,4BAA2BC,aAAa,CAACM,cAAD,CAAiB,EAA5F;EACA,MAAMK,iBAAiB,GAAGC,MAAM,CAACC,OAAP,CAAeL,UAAf,EACrBM,MADqB,CACd,CAAC,GAAGC,CAAH,CAAD,KAAWA,CAAC,CAACC,OAAF,IAAa,IADV,EAErBC,GAFqB,CAEjB,CAAC,CAACC,CAAD,EAAIH,CAAJ,CAAD,KAAY,CAACG,CAAD,EAAIH,CAAC,CAACC,OAAN,CAFK,CAA1B;;EAGA,IAAIL,iBAAiB,CAACQ,MAAlB,GAA2B,CAA/B,EAAkC;IAC9B,KAAK,MAAM,CAACC,QAAD,EAAWC,iBAAX,CAAX,IAA4CV,iBAA5C,EAA+D;MAC3DL,cAAc,CAACc,QAAD,CAAd,GAA2Bd,cAAc,CAACc,QAAD,CAAd,IAA4BC,iBAAvD;IACH;EACJ;;EACD,MAAMC,cAAc,GAAGV,MAAM,CAACC,OAAP,CAAeL,UAAf,EAClBM,MADkB,CACX,CAAC,GAAGC,CAAH,CAAD,KAAWA,CAAC,CAACQ,QADF,EAElBN,GAFkB,CAEd,CAAC,CAACC,CAAD,CAAD,KAASA,CAFK,CAAvB;;EAGA,KAAK,MAAMM,aAAX,IAA4BF,cAA5B,EAA4C;IACxC,IAAIhB,cAAc,CAACkB,aAAD,CAAd,IAAiC,IAArC,EAA2C;MACvC,MAAM,IAAIvB,aAAJ,CAAmB,gCAA+BuB,aAAc,GAAhE,CAAN;IACH;EACJ;;EACD,MAAMC,QAAQ,GAAGvB,aAAa,CAACO,KAAD,EAAQ;IAAEH,cAAF;IAAkBC,MAAlB;IAA0BmB,eAAe,EAAE;EAA3C,CAAR,CAA9B;;EACA,IAAIrB,OAAO,CAACC,cAAR,EAAwBqB,QAA5B,EAAsC;IAClC,IAAI;MACA,MAAMC,aAAa,GAAG,IAAIC,GAAJ,CAAQxB,OAAO,CAACC,cAAR,CAAuBqB,QAA/B,CAAtB;MACA,MAAM;QAAEG,QAAF;QAAYC;MAAZ,IAAqBH,aAA3B;MACAH,QAAQ,CAACO,GAAT,CAAaF,QAAb,GAAwBA,QAAxB;MACAL,QAAQ,CAACO,GAAT,CAAaD,IAAb,GAAoBA,IAApB;IACH,CALD,CAMA,OAAOE,CAAP,EAAU,CACT;EACJ;;EACD5B,OAAO,CAACE,MAAR,EAAgBG,KAAhB,GAAyB,GAAEX,OAAQ,uBAAsBC,aAAa,CAACyB,QAAD,CAAW,EAAjF;EACA,OAAOA,QAAP;AACH,CAjCM"},"metadata":{},"sourceType":"module"}