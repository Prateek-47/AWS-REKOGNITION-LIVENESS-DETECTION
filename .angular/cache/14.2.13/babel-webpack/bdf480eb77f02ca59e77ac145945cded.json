{"ast":null,"code":"import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  const {\n    port,\n    query\n  } = request;\n  let {\n    protocol,\n    path,\n    hostname\n  } = request;\n\n  if (protocol && protocol.slice(-1) !== \":\") {\n    protocol += \":\";\n  }\n\n  if (port) {\n    hostname += `:${port}`;\n  }\n\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n\n  let queryString = query ? buildQueryString(query) : \"\";\n\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n\n  let auth = \"\";\n\n  if (request.username != null || request.password != null) {\n    const username = request.username ?? \"\";\n    const password = request.password ?? \"\";\n    auth = `${username}:${password}@`;\n  }\n\n  let fragment = \"\";\n\n  if (request.fragment) {\n    fragment = `#${request.fragment}`;\n  }\n\n  return `${protocol}//${auth}${hostname}${path}${queryString}${fragment}`;\n}","map":{"version":3,"names":["buildQueryString","formatUrl","request","port","query","protocol","path","hostname","slice","charAt","queryString","auth","username","password","fragment"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/util-format-url/dist-es/index.js"],"sourcesContent":["import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n    const { port, query } = request;\n    let { protocol, path, hostname } = request;\n    if (protocol && protocol.slice(-1) !== \":\") {\n        protocol += \":\";\n    }\n    if (port) {\n        hostname += `:${port}`;\n    }\n    if (path && path.charAt(0) !== \"/\") {\n        path = `/${path}`;\n    }\n    let queryString = query ? buildQueryString(query) : \"\";\n    if (queryString && queryString[0] !== \"?\") {\n        queryString = `?${queryString}`;\n    }\n    let auth = \"\";\n    if (request.username != null || request.password != null) {\n        const username = request.username ?? \"\";\n        const password = request.password ?? \"\";\n        auth = `${username}:${password}@`;\n    }\n    let fragment = \"\";\n    if (request.fragment) {\n        fragment = `#${request.fragment}`;\n    }\n    return `${protocol}//${auth}${hostname}${path}${queryString}${fragment}`;\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;EAC/B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkBF,OAAxB;EACA,IAAI;IAAEG,QAAF;IAAYC,IAAZ;IAAkBC;EAAlB,IAA+BL,OAAnC;;EACA,IAAIG,QAAQ,IAAIA,QAAQ,CAACG,KAAT,CAAe,CAAC,CAAhB,MAAuB,GAAvC,EAA4C;IACxCH,QAAQ,IAAI,GAAZ;EACH;;EACD,IAAIF,IAAJ,EAAU;IACNI,QAAQ,IAAK,IAAGJ,IAAK,EAArB;EACH;;EACD,IAAIG,IAAI,IAAIA,IAAI,CAACG,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;IAChCH,IAAI,GAAI,IAAGA,IAAK,EAAhB;EACH;;EACD,IAAII,WAAW,GAAGN,KAAK,GAAGJ,gBAAgB,CAACI,KAAD,CAAnB,GAA6B,EAApD;;EACA,IAAIM,WAAW,IAAIA,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAtC,EAA2C;IACvCA,WAAW,GAAI,IAAGA,WAAY,EAA9B;EACH;;EACD,IAAIC,IAAI,GAAG,EAAX;;EACA,IAAIT,OAAO,CAACU,QAAR,IAAoB,IAApB,IAA4BV,OAAO,CAACW,QAAR,IAAoB,IAApD,EAA0D;IACtD,MAAMD,QAAQ,GAAGV,OAAO,CAACU,QAAR,IAAoB,EAArC;IACA,MAAMC,QAAQ,GAAGX,OAAO,CAACW,QAAR,IAAoB,EAArC;IACAF,IAAI,GAAI,GAAEC,QAAS,IAAGC,QAAS,GAA/B;EACH;;EACD,IAAIC,QAAQ,GAAG,EAAf;;EACA,IAAIZ,OAAO,CAACY,QAAZ,EAAsB;IAClBA,QAAQ,GAAI,IAAGZ,OAAO,CAACY,QAAS,EAAhC;EACH;;EACD,OAAQ,GAAET,QAAS,KAAIM,IAAK,GAAEJ,QAAS,GAAED,IAAK,GAAEI,WAAY,GAAEI,QAAS,EAAvE;AACH"},"metadata":{},"sourceType":"module"}