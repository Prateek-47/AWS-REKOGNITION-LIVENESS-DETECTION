{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather_util, GatherNd } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmGatherNd;\n\nfunction setup(backend) {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null\n  /*void*/\n  , ['number', 'number', 'number', 'number', 'number', 'number', 'array', 'number' // outId\n  ]);\n}\n\nfunction gatherNd(args) {\n  const {\n    backend,\n    inputs\n  } = args;\n  const {\n    params,\n    indices\n  } = inputs;\n  const [resultShape, numSlices, sliceSize, strides] = gather_util.prepareAndValidate(params, indices);\n  const out = backend.makeOutput(resultShape, params.dtype);\n\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize, stridesBytes, outId);\n  return out;\n}\n\nexport const gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};","map":{"version":3,"names":["gather_util","GatherNd","CppDType","wasmGatherNd","setup","backend","wasm","cwrap","gatherNd","args","inputs","params","indices","resultShape","numSlices","sliceSize","strides","prepareAndValidate","out","makeOutput","dtype","indicesShape","shape","sliceRank","length","xData","dataIdMap","get","dataId","xId","id","indicesData","indicesId","stridesBytes","Uint8Array","Int32Array","buffer","outId","gatherNdConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GatherNd.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather_util, GatherNd } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmGatherNd;\nfunction setup(backend) {\n    wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number' // outId\n    ]);\n}\nfunction gatherNd(args) {\n    const { backend, inputs } = args;\n    const { params, indices } = inputs;\n    const [resultShape, numSlices, sliceSize, strides] = gather_util.prepareAndValidate(params, indices);\n    const out = backend.makeOutput(resultShape, params.dtype);\n    if (numSlices === 0) {\n        return out;\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const xData = backend.dataIdMap.get(params.dataId);\n    const xId = xData.id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmGatherNd(xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize, stridesBytes, outId);\n    return out;\n}\nexport const gatherNdConfig = {\n    kernelName: GatherNd,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: gatherNd\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,uBAAtC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,IAAIC,YAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,YAAY,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBN,QAAnB,EAA6B;EAAK;EAAlC,EAA4C,CACvD,QADuD,EAEvD,QAFuD,EAGvD,QAHuD,EAIvD,QAJuD,EAKvD,QALuD,EAMvD,QANuD,EAOvD,OAPuD,EAQvD,QARuD,CAQ9C;EAR8C,CAA5C,CAAf;AAUH;;AACD,SAASO,QAAT,CAAkBC,IAAlB,EAAwB;EACpB,MAAM;IAAEJ,OAAF;IAAWK;EAAX,IAAsBD,IAA5B;EACA,MAAM;IAAEE,MAAF;IAAUC;EAAV,IAAsBF,MAA5B;EACA,MAAM,CAACG,WAAD,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,OAApC,IAA+ChB,WAAW,CAACiB,kBAAZ,CAA+BN,MAA/B,EAAuCC,OAAvC,CAArD;EACA,MAAMM,GAAG,GAAGb,OAAO,CAACc,UAAR,CAAmBN,WAAnB,EAAgCF,MAAM,CAACS,KAAvC,CAAZ;;EACA,IAAIN,SAAS,KAAK,CAAlB,EAAqB;IACjB,OAAOI,GAAP;EACH;;EACD,MAAMG,YAAY,GAAGT,OAAO,CAACU,KAA7B;EACA,MAAMC,SAAS,GAAGF,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CAA9B;EACA,MAAMC,KAAK,GAAGpB,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBhB,MAAM,CAACiB,MAA7B,CAAd;EACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,EAAlB;EACA,MAAMC,WAAW,GAAG1B,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBf,OAAO,CAACgB,MAA9B,CAApB;EACA,MAAMI,SAAS,GAAGD,WAAW,CAACD,EAA9B;EACA,MAAMG,YAAY,GAAG,IAAIC,UAAJ,CAAe,IAAIC,UAAJ,CAAenB,OAAf,EAAwBoB,MAAvC,CAArB;EACA,MAAMC,KAAK,GAAGhC,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBT,GAAG,CAACU,MAA1B,EAAkCE,EAAhD;EACA3B,YAAY,CAAC0B,GAAD,EAAM3B,QAAQ,CAACS,MAAM,CAACS,KAAR,CAAd,EAA8BY,SAA9B,EAAyClB,SAAzC,EAAoDS,SAApD,EAA+DR,SAA/D,EAA0EkB,YAA1E,EAAwFI,KAAxF,CAAZ;EACA,OAAOnB,GAAP;AACH;;AACD,OAAO,MAAMoB,cAAc,GAAG;EAC1BC,UAAU,EAAEtC,QADc;EAE1BuC,WAAW,EAAE,MAFa;EAG1BC,SAAS,EAAErC,KAHe;EAI1BsC,UAAU,EAAElC;AAJc,CAAvB"},"metadata":{},"sourceType":"module"}