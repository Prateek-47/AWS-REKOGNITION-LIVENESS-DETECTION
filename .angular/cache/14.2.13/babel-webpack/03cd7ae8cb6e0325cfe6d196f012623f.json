{"ast":null,"code":"import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, isRaisableAction, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    return {\n      transitions: [selectedTransition],\n      exitSet: isInternal ? [] : flatten(nextStateNodes.map(function (targetNode) {\n        return _this.getPotentiallyReenteringNodes(targetNode);\n      })),\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  }; // even though the name of this function mentions reentry nodes\n  // we are pushing its result into `exitSet`\n  // that's because what we exit might be reentered (it's an invariant of reentrancy)\n\n\n  StateNode.prototype.getPotentiallyReenteringNodes = function (targetNode) {\n    if (this.order < targetNode.order) {\n      return [this];\n    }\n\n    var nodes = [];\n    var marker = this;\n    var possibleAncestor = targetNode;\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = prevState ? getConfiguration([], this.getStateNodes(prevState.value)) : [];\n    var entrySet = new Set();\n\n    try {\n      for (var _c = __values(Array.from(resolvedConfig).sort(function (a, b) {\n        return a.order - b.order;\n      })), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var sn = _d.value;\n\n        if (!has(prevConfig, sn) || has(transition.exitSet, sn) || sn.parent && entrySet.has(sn.parent)) {\n          entrySet.add(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    var entryStates = Array.from(entrySet).sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var exitStates = new Set(transition.exitSet);\n    var doneEvents = flatten(entryStates.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    var entryActions = entryStates.map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return {\n        type: 'entry',\n        actions: toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions)\n      };\n    }).concat({\n      type: 'state_done',\n      actions: doneEvents.map(function (event) {\n        return raise(event);\n      })\n    });\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return {\n        type: 'exit',\n        actions: toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n          return stop(activity);\n        })), false), _this.machine.options.actions)\n      };\n    });\n    var actions = exitActions.concat({\n      type: 'transition',\n      actions: toActionObjects(transition.actions, this.machine.options.actions)\n    }).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return !isRaisableAction(action);\n      });\n      return actions.concat({\n        type: 'stop',\n        actions: stopActions\n      });\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var _c = (e_7 = void 0, __values(block.actions)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var action = _d.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _e = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _e[0],\n        updatedContext = _e[1];\n\n    var _f = __read(partition(resolvedActions, isRaisableAction), 2),\n        raisedEvents = _f[0],\n        nonRaisedActions = _f[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };","map":{"version":3,"names":["__assign","__spreadArray","__read","__values","__rest","isFunction","mapValues","isArray","flatten","toArray","toStateValue","isString","getEventType","toSCXMLEvent","matchesState","path","evaluateGuard","mapContext","isRaisableAction","pathToStateValue","isBuiltInEvent","partition","updateHistoryValue","toStatePath","mapFilterValues","warn","toStatePaths","nestedPath","normalizeTarget","toGuard","toTransitionConfigArray","isMachine","createInvokeId","State","stateValuesEqual","start","start$1","stop","stop$1","invoke","update","nullEvent","done","toActionObjects","raise","resolveActions","doneInvoke","error","toActionObject","toActivityDefinition","after","send","cancel","initEvent","IS_PRODUCTION","STATE_DELIMITER","getAllStateNodes","getConfiguration","isInFinalState","getTagsFromConfiguration","has","getChildren","getValue","isLeafNode","getAllChildren","createInvocableActor","toInvokeDefinition","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","EMPTY_OBJECT","isStateId","str","createDefaultOptions","actions","guards","services","activities","delays","validateArrayifiedTransitions","stateNode","event","transitions","hasNonLastUnguardedTarget","slice","some","transition","target","eventText","concat","id","StateNode","config","options","_context","_stateInfo","context","undefined","_this","_a","order","__xstatenode","__cache","events","relativeValue","Map","initialStateValue","initialState","on","candidates","delayedTransitions","idMap","tags","Object","assign","parent","key","machine","delimiter","join","version","type","parallel","states","keys","length","history","schema","description","initial","stateConfig","dfs","e_1","_b","_c","next","child","value","e_1_1","return","call","_transient","always","Array","strict","onEntry","entry","map","action","onExit","exit","meta","doneData","data","invokeConfig","i","invokeId","src","invokeSource","activity","bind","prototype","_init","forEach","withConfig","withContext","defineProperty","get","enumerable","configurable","state","definition","toJSON","reduce","eventType","push","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","delay","delayRef","configTransition","resolvedTransition","resolvedDelay","isNaN","delayedTransition","formatTransition","getStateNodes","stateValue","getStateNode","subStateKeys","subStateNodes","apply","subStateKey","handles","includes","resolveState","stateFromConfig","create","configuration","from","resolve","transitionLeafNode","_event","transitionCompoundNode","_transition","transitionParallelNode","e_2","transitionMap","subStateValue","subStateNode","e_2_1","stateTransitions","enabledTransitions","st","willTransition","exitSet","t","source","getTransitionData","e_3","name","nextStateNodes","selectedTransition","candidate","cond","stateIn","in","resolvedContext","isInState","matches","getStateNodeById","guardPassed","err","Error","message","e_3_1","allNextStateNodes","getRelativeStateNodes","historyValue","isInternal","internal","targetNode","getPotentiallyReenteringNodes","nodes","marker","possibleAncestor","getActions","resolvedConfig","isDone","currentContext","prevState","predictableExec","e_4","e_5","prevConfig","entrySet","Set","sort","a","b","_d","sn","add","e_4_1","prevConfig_1","prevConfig_1_1","e_5_1","entryStates","exitStates","doneEvents","grandparent","every","parentNode","entryActions","invokeActions","exitActions","stopActions","exec","currentState","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","e_6","e_7","resolvedConfiguration","actionBlocks","actionBlocks_1","actionBlocks_1_1","block","e_7_1","e_6_1","_e","predictableActionArguments","preserveActionOrder","resolvedActions","updatedContext","_f","raisedEvents","nonRaisedActions","children","acc","nextState","_sessionid","didUpdateContext","changed","hasAlwaysTransitions","maybeNextState","raisedEvent","shift","stateKey","result","stateId","resolvedStateId","getStateNodeByPath","statePath","e","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodes","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","childStateNode","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","e_8","e_9","ownEvents","event_1","e_9_1","e_8_1","resolveTarget","_target","isInternalTarget","resolvedTarget","targetStateNode","transitionConfig","normalizedTarget","e_10","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","eventlessConfig","doneConfig","onDone","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","e_10_1"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/xstate/es/StateNode.js"],"sourcesContent":["import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, isRaisableAction, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\n\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    return {\n      transitions: [selectedTransition],\n      exitSet: isInternal ? [] : flatten(nextStateNodes.map(function (targetNode) {\n        return _this.getPotentiallyReenteringNodes(targetNode);\n      })),\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  }; // even though the name of this function mentions reentry nodes\n  // we are pushing its result into `exitSet`\n  // that's because what we exit might be reentered (it's an invariant of reentrancy)\n\n\n  StateNode.prototype.getPotentiallyReenteringNodes = function (targetNode) {\n    if (this.order < targetNode.order) {\n      return [this];\n    }\n\n    var nodes = [];\n    var marker = this;\n    var possibleAncestor = targetNode;\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = prevState ? getConfiguration([], this.getStateNodes(prevState.value)) : [];\n    var entrySet = new Set();\n\n    try {\n      for (var _c = __values(Array.from(resolvedConfig).sort(function (a, b) {\n        return a.order - b.order;\n      })), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var sn = _d.value;\n\n        if (!has(prevConfig, sn) || has(transition.exitSet, sn) || sn.parent && entrySet.has(sn.parent)) {\n          entrySet.add(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    var entryStates = Array.from(entrySet).sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var exitStates = new Set(transition.exitSet);\n    var doneEvents = flatten(entryStates.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    var entryActions = entryStates.map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return {\n        type: 'entry',\n        actions: toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions)\n      };\n    }).concat({\n      type: 'state_done',\n      actions: doneEvents.map(function (event) {\n        return raise(event);\n      })\n    });\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return {\n        type: 'exit',\n        actions: toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n          return stop(activity);\n        })), false), _this.machine.options.actions)\n      };\n    });\n    var actions = exitActions.concat({\n      type: 'transition',\n      actions: toActionObjects(transition.actions, this.machine.options.actions)\n    }).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return !isRaisableAction(action);\n      });\n      return actions.concat({\n        type: 'stop',\n        actions: stopActions\n      });\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var _c = (e_7 = void 0, __values(block.actions)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var action = _d.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _e = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _e[0],\n        updatedContext = _e[1];\n\n    var _f = __read(partition(resolvedActions, isRaisableAction), 2),\n        raisedEvents = _f[0],\n        nonRaisedActions = _f[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}