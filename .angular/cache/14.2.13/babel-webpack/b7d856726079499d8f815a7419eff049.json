{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (commandInput, instructionsSupplier, clientConfig, context) {\n    const endpointParams = yield resolveParams(commandInput, instructionsSupplier, clientConfig);\n\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n      throw new Error(\"config.endpointProvider is not set.\");\n    }\n\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n  });\n\n  return function getEndpointFromInstructions(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const resolveParams = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (commandInput, instructionsSupplier, clientConfig) {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n\n    for (const [name, instruction] of Object.entries(instructions)) {\n      switch (instruction.type) {\n        case \"staticContextParams\":\n          endpointParams[name] = instruction.value;\n          break;\n\n        case \"contextParams\":\n          endpointParams[name] = commandInput[instruction.name];\n          break;\n\n        case \"clientContextParams\":\n        case \"builtInParams\":\n          endpointParams[name] = yield createConfigValueProvider(instruction.name, name, clientConfig)();\n          break;\n\n        default:\n          throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n      }\n    }\n\n    if (Object.keys(instructions).length === 0) {\n      Object.assign(endpointParams, clientConfig);\n    }\n\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n      yield resolveParamsForS3(endpointParams);\n    }\n\n    return endpointParams;\n  });\n\n  return function resolveParams(_x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["resolveParamsForS3","createConfigValueProvider","getEndpointFromInstructions","commandInput","instructionsSupplier","clientConfig","context","endpointParams","resolveParams","endpointProvider","Error","endpoint","instructions","getEndpointParameterInstructions","name","instruction","Object","entries","type","value","JSON","stringify","keys","length","assign","String","serviceId","toLowerCase"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js"],"sourcesContent":["import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,2BAAnC;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,OAAO,MAAMC,2BAA2B;EAAA,6BAAG,WAAOC,YAAP,EAAqBC,oBAArB,EAA2CC,YAA3C,EAAyDC,OAAzD,EAAqE;IAC5G,MAAMC,cAAc,SAASC,aAAa,CAACL,YAAD,EAAeC,oBAAf,EAAqCC,YAArC,CAA1C;;IACA,IAAI,OAAOA,YAAY,CAACI,gBAApB,KAAyC,UAA7C,EAAyD;MACrD,MAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;IACH;;IACD,MAAMC,QAAQ,GAAGN,YAAY,CAACI,gBAAb,CAA8BF,cAA9B,EAA8CD,OAA9C,CAAjB;IACA,OAAOK,QAAP;EACH,CAPuC;;EAAA,gBAA3BT,2BAA2B;IAAA;EAAA;AAAA,GAAjC;AAQP,OAAO,MAAMM,aAAa;EAAA,8BAAG,WAAOL,YAAP,EAAqBC,oBAArB,EAA2CC,YAA3C,EAA4D;IACrF,MAAME,cAAc,GAAG,EAAvB;IACA,MAAMK,YAAY,GAAGR,oBAAoB,EAAES,gCAAtB,QAA8D,EAAnF;;IACA,KAAK,MAAM,CAACC,IAAD,EAAOC,WAAP,CAAX,IAAkCC,MAAM,CAACC,OAAP,CAAeL,YAAf,CAAlC,EAAgE;MAC5D,QAAQG,WAAW,CAACG,IAApB;QACI,KAAK,qBAAL;UACIX,cAAc,CAACO,IAAD,CAAd,GAAuBC,WAAW,CAACI,KAAnC;UACA;;QACJ,KAAK,eAAL;UACIZ,cAAc,CAACO,IAAD,CAAd,GAAuBX,YAAY,CAACY,WAAW,CAACD,IAAb,CAAnC;UACA;;QACJ,KAAK,qBAAL;QACA,KAAK,eAAL;UACIP,cAAc,CAACO,IAAD,CAAd,SAA6Bb,yBAAyB,CAACc,WAAW,CAACD,IAAb,EAAmBA,IAAnB,EAAyBT,YAAzB,CAAzB,EAA7B;UACA;;QACJ;UACI,MAAM,IAAIK,KAAJ,CAAU,kDAAkDU,IAAI,CAACC,SAAL,CAAeN,WAAf,CAA5D,CAAN;MAZR;IAcH;;IACD,IAAIC,MAAM,CAACM,IAAP,CAAYV,YAAZ,EAA0BW,MAA1B,KAAqC,CAAzC,EAA4C;MACxCP,MAAM,CAACQ,MAAP,CAAcjB,cAAd,EAA8BF,YAA9B;IACH;;IACD,IAAIoB,MAAM,CAACpB,YAAY,CAACqB,SAAd,CAAN,CAA+BC,WAA/B,OAAiD,IAArD,EAA2D;MACvD,MAAM3B,kBAAkB,CAACO,cAAD,CAAxB;IACH;;IACD,OAAOA,cAAP;EACH,CA1ByB;;EAAA,gBAAbC,aAAa;IAAA;EAAA;AAAA,GAAnB"},"metadata":{},"sourceType":"module"}