{"ast":null,"code":"import { __asyncValues, __awaiter, __extends, __generator, __read, __spread, __values } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { isPredicateObj, isPredicateGroup, OpType, QueryOne } from '../../types';\nimport { isPrivateMode, traverseModel, validatePredicate, inMemoryPagination, keysEqual, getStorename, isSafariCompatabilityMode } from '../../util';\nimport { StorageAdapterBase } from './StorageAdapterBase';\nvar logger = new Logger('DataStore');\n/**\n * The point after which queries composed of multiple simple OR conditions\n * should scan-and-filter instead of individual queries for each condition.\n *\n * At some point, this should be configurable and/or dynamic based on table\n * size and possibly even on observed average seek latency. For now, it's\n * based on an manual \"binary search\" for the breakpoint as measured in the\n * unit test suite. This isn't necessarily optimal. But, it's at least derived\n * empirically, rather than theoretically and without any verification!\n *\n * REMEMBER! If you run more realistic benchmarks and update this value, update\n * this comment so the validity and accuracy of future query tuning exercises\n * can be compared to the methods used to derive the current value. E.g.,\n *\n * 1. In browser benchmark > unit test benchmark\n * 2. Multi-browser benchmark > single browser benchmark\n * 3. Benchmarks of various table sizes > static table size benchmark\n *\n * etc...\n *\n */\n\nvar MULTI_OR_CONDITION_SCAN_BREAKPOINT = 7; //\n\nvar DB_VERSION = 3;\n\nvar IndexedDBAdapter =\n/** @class */\nfunction (_super) {\n  __extends(IndexedDBAdapter, _super);\n\n  function IndexedDBAdapter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.safariCompatabilityMode = false;\n    /**\n     * Checks the given path against the browser's IndexedDB implementation for\n     * necessary compatibility transformations, applying those transforms if needed.\n     *\n     * @param `keyArr` strings to compatibilize for browser-indexeddb index operations\n     * @returns An array or string, depending on and given key,\n     * that is ensured to be compatible with the IndexedDB implementation's nuances.\n     */\n\n    _this.canonicalKeyPath = function (keyArr) {\n      if (_this.safariCompatabilityMode) {\n        return keyArr.length > 1 ? keyArr : keyArr[0];\n      }\n\n      return keyArr;\n    };\n\n    return _this; //#endregion\n  } // checks are called by StorageAdapterBase class\n\n\n  IndexedDBAdapter.prototype.preSetUpChecks = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.setSafariCompatabilityMode()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.preOpCheck = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Initialize IndexedDB database\n   * Create new DB if one doesn't exist\n   * Upgrade outdated DB\n   *\n   * Called by `StorageAdapterBase.setUp()`\n   *\n   * @returns IDB Database instance\n   */\n\n\n  IndexedDBAdapter.prototype.initDb = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , idb.openDB(this.dbName, DB_VERSION, {\n              upgrade: function (db, oldVersion, newVersion, txn) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, _b, storeName, origStore, tmpName, _c, namespaceName, modelName, modelInCurrentSchema, newStore, cursor, count, e_1_1, error_1;\n\n                  var e_1, _d;\n\n                  var _this = this;\n\n                  return __generator(this, function (_e) {\n                    switch (_e.label) {\n                      case 0:\n                        // create new database\n                        if (oldVersion === 0) {\n                          Object.keys(this.schema.namespaces).forEach(function (namespaceName) {\n                            var namespace = _this.schema.namespaces[namespaceName];\n                            Object.keys(namespace.models).forEach(function (modelName) {\n                              var storeName = getStorename(namespaceName, modelName);\n\n                              _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                            });\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                        }\n\n                        if (!((oldVersion === 1 || oldVersion === 2) && newVersion === 3)) return [3\n                        /*break*/\n                        , 16];\n                        _e.label = 1;\n\n                      case 1:\n                        _e.trys.push([1, 14,, 15]);\n\n                        _e.label = 2;\n\n                      case 2:\n                        _e.trys.push([2, 11, 12, 13]);\n\n                        _a = __values(txn.objectStoreNames), _b = _a.next();\n                        _e.label = 3;\n\n                      case 3:\n                        if (!!_b.done) return [3\n                        /*break*/\n                        , 10];\n                        storeName = _b.value;\n                        origStore = txn.objectStore(storeName);\n                        tmpName = \"tmp_\" + storeName;\n                        origStore.name = tmpName;\n                        _c = this.getNamespaceAndModelFromStorename(storeName), namespaceName = _c.namespaceName, modelName = _c.modelName;\n                        modelInCurrentSchema = modelName in this.schema.namespaces[namespaceName].models;\n\n                        if (!modelInCurrentSchema) {\n                          // delete original\n                          db.deleteObjectStore(tmpName);\n                          return [3\n                          /*break*/\n                          , 9];\n                        }\n\n                        newStore = this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                        return [4\n                        /*yield*/\n                        , origStore.openCursor()];\n\n                      case 4:\n                        cursor = _e.sent();\n                        count = 0;\n                        _e.label = 5;\n\n                      case 5:\n                        if (!(cursor && cursor.value)) return [3\n                        /*break*/\n                        , 8]; // we don't pass key, since they are all new entries in the new store\n\n                        return [4\n                        /*yield*/\n                        , newStore.put(cursor.value)];\n\n                      case 6:\n                        // we don't pass key, since they are all new entries in the new store\n                        _e.sent();\n\n                        return [4\n                        /*yield*/\n                        , cursor.continue()];\n\n                      case 7:\n                        cursor = _e.sent();\n                        count++;\n                        return [3\n                        /*break*/\n                        , 5];\n\n                      case 8:\n                        // delete original\n                        db.deleteObjectStore(tmpName);\n                        logger.debug(count + \" \" + storeName + \" records migrated\");\n                        _e.label = 9;\n\n                      case 9:\n                        _b = _a.next();\n                        return [3\n                        /*break*/\n                        , 3];\n\n                      case 10:\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 11:\n                        e_1_1 = _e.sent();\n                        e_1 = {\n                          error: e_1_1\n                        };\n                        return [3\n                        /*break*/\n                        , 13];\n\n                      case 12:\n                        try {\n                          if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        } finally {\n                          if (e_1) throw e_1.error;\n                        }\n\n                        return [7\n                        /*endfinally*/\n                        ];\n\n                      case 13:\n                        // add new models created after IndexedDB, but before migration\n                        // this case may happen when a user has not opened an app for\n                        // some time and a new model is added during that time\n                        Object.keys(this.schema.namespaces).forEach(function (namespaceName) {\n                          var namespace = _this.schema.namespaces[namespaceName];\n                          var objectStoreNames = new Set(txn.objectStoreNames);\n                          Object.keys(namespace.models).map(function (modelName) {\n                            return [modelName, getStorename(namespaceName, modelName)];\n                          }).filter(function (_a) {\n                            var _b = __read(_a, 2),\n                                storeName = _b[1];\n\n                            return !objectStoreNames.has(storeName);\n                          }).forEach(function (_a) {\n                            var _b = __read(_a, 2),\n                                modelName = _b[0],\n                                storeName = _b[1];\n\n                            _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                          });\n                        });\n                        return [3\n                        /*break*/\n                        , 15];\n\n                      case 14:\n                        error_1 = _e.sent();\n                        logger.error('Error migrating IndexedDB data', error_1);\n                        txn.abort();\n                        throw error_1;\n\n                      case 15:\n                        return [2\n                        /*return*/\n                        ];\n\n                      case 16:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              }\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype._get = function (storeOrStoreName, keyArr) {\n    return __awaiter(this, void 0, void 0, function () {\n      var index, storeName, store, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typeof storeOrStoreName === 'string') {\n              storeName = storeOrStoreName;\n              index = this.db.transaction(storeName, 'readonly').store.index('byPk');\n            } else {\n              store = storeOrStoreName;\n              index = store.index('byPk');\n            }\n\n            return [4\n            /*yield*/\n            , index.get(this.canonicalKeyPath(keyArr))];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.clear = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            (_a = this.db) === null || _a === void 0 ? void 0 : _a.close();\n            return [4\n            /*yield*/\n            , idb.deleteDB(this.dbName)];\n\n          case 2:\n            _b.sent();\n\n            this.db = undefined;\n            this.initPromise = undefined;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.save = function (model, condition) {\n    var e_2, _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, storeName, set, connectionStoreNames, modelKeyValues, tx, store, fromDB, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, keys, store_1, itemKeyValues, fromDB_1, opType, key, e_2_1;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _c.sent();\n\n            _b = this.saveMetadata(model), storeName = _b.storeName, set = _b.set, connectionStoreNames = _b.connectionStoreNames, modelKeyValues = _b.modelKeyValues;\n            tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n            store = tx.objectStore(storeName);\n            return [4\n            /*yield*/\n            , this._get(store, modelKeyValues)];\n\n          case 2:\n            fromDB = _c.sent();\n            this.validateSaveCondition(condition, fromDB);\n            result = [];\n            _c.label = 3;\n\n          case 3:\n            _c.trys.push([3, 11, 12, 17]);\n\n            connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n            _c.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , connectionStoreNames_1.next()];\n\n          case 5:\n            if (!(connectionStoreNames_1_1 = _c.sent(), !connectionStoreNames_1_1.done)) return [3\n            /*break*/\n            , 10];\n            resItem = connectionStoreNames_1_1.value;\n            storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance, keys = resItem.keys;\n            store_1 = tx.objectStore(storeName_1);\n            itemKeyValues = keys.map(function (key) {\n              return item[key];\n            });\n            return [4\n            /*yield*/\n            , this._get(store_1, itemKeyValues)];\n\n          case 6:\n            fromDB_1 = _c.sent();\n            opType = fromDB_1 ? OpType.UPDATE : OpType.INSERT;\n            if (!(keysEqual(itemKeyValues, modelKeyValues) || opType === OpType.INSERT)) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , store_1.index('byPk').getKey(this.canonicalKeyPath(itemKeyValues))];\n\n          case 7:\n            key = _c.sent();\n            return [4\n            /*yield*/\n            , store_1.put(item, key)];\n\n          case 8:\n            _c.sent();\n\n            result.push([instance, opType]);\n            _c.label = 9;\n\n          case 9:\n            return [3\n            /*break*/\n            , 4];\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            e_2_1 = _c.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 12:\n            _c.trys.push([12,, 15, 16]);\n\n            if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , _a.call(connectionStoreNames_1)];\n\n          case 13:\n            _c.sent();\n\n            _c.label = 14;\n\n          case 14:\n            return [3\n            /*break*/\n            , 16];\n\n          case 15:\n            if (e_2) throw e_2.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 16:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [4\n            /*yield*/\n            , tx.done];\n\n          case 18:\n            _c.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, storeName, namespaceName, queryByKey, predicates, hasSort, hasPagination, records;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            _a = this.queryMetadata(modelConstructor, predicate, pagination), storeName = _a.storeName, namespaceName = _a.namespaceName, queryByKey = _a.queryByKey, predicates = _a.predicates, hasSort = _a.hasSort, hasPagination = _a.hasPagination;\n            return [4\n            /*yield*/\n            , function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var record, filtered, all;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!queryByKey) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , this.getByKey(storeName, queryByKey)];\n\n                    case 1:\n                      record = _a.sent();\n                      return [2\n                      /*return*/\n                      , record ? [record] : []];\n\n                    case 2:\n                      if (!predicates) return [3\n                      /*break*/\n                      , 4];\n                      return [4\n                      /*yield*/\n                      , this.filterOnPredicate(storeName, predicates)];\n\n                    case 3:\n                      filtered = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(filtered, pagination)];\n\n                    case 4:\n                      if (!hasSort) return [3\n                      /*break*/\n                      , 6];\n                      return [4\n                      /*yield*/\n                      , this.getAll(storeName)];\n\n                    case 5:\n                      all = _a.sent();\n                      return [2\n                      /*return*/\n                      , this.inMemoryPagination(all, pagination)];\n\n                    case 6:\n                      if (hasPagination) {\n                        return [2\n                        /*return*/\n                        , this.enginePagination(storeName, pagination)];\n                      }\n\n                      return [2\n                      /*return*/\n                      , this.getAll(storeName)];\n                  }\n                });\n              });\n            }()];\n\n          case 2:\n            records = _b.sent();\n            return [4\n            /*yield*/\n            , this.load(namespaceName, modelConstructor.name, records)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n    if (firstOrLast === void 0) {\n      firstOrLast = QueryOne.FIRST;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var storeName, cursor, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _a.sent();\n\n            storeName = this.getStorenameForModel(modelConstructor);\n            return [4\n            /*yield*/\n            , this.db.transaction([storeName], 'readonly').objectStore(storeName).openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n\n          case 2:\n            cursor = _a.sent();\n            result = cursor ? cursor.value : undefined;\n            return [2\n            /*return*/\n            , result && this.modelInstanceCreator(modelConstructor, result)];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var modelName, namespaceName, storeName, result, txn, store, _loop_1, this_1, items_1, items_1_1, item, e_3_1;\n\n      var e_3, _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPrivate()];\n\n          case 1:\n            _b.sent();\n\n            if (items.length === 0) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            modelName = modelConstructor.name;\n            namespaceName = this.namespaceResolver(modelConstructor);\n            storeName = this.getStorenameForModel(modelConstructor);\n            result = [];\n            txn = this.db.transaction(storeName, 'readwrite');\n            store = txn.store;\n\n            _loop_1 = function (item) {\n              var model, connectedModels, keyValues, _deleted, index, key, instance;\n\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    model = this_1.modelInstanceCreator(modelConstructor, item);\n                    connectedModels = traverseModel(modelName, model, this_1.schema.namespaces[namespaceName], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                    keyValues = this_1.getIndexKeyValuesFromModel(model);\n                    _deleted = item._deleted;\n                    index = store.index('byPk');\n                    return [4\n                    /*yield*/\n                    , index.getKey(this_1.canonicalKeyPath(keyValues))];\n\n                  case 1:\n                    key = _a.sent();\n                    if (!!_deleted) return [3\n                    /*break*/\n                    , 3];\n                    instance = connectedModels.find(function (_a) {\n                      var instance = _a.instance;\n\n                      var instanceKeyValues = _this.getIndexKeyValuesFromModel(instance);\n\n                      return keysEqual(instanceKeyValues, keyValues);\n                    }).instance;\n                    result.push([instance, key ? OpType.UPDATE : OpType.INSERT]);\n                    return [4\n                    /*yield*/\n                    , store.put(instance, key)];\n\n                  case 2:\n                    _a.sent();\n\n                    return [3\n                    /*break*/\n                    , 5];\n\n                  case 3:\n                    result.push([item, OpType.DELETE]);\n                    if (!key) return [3\n                    /*break*/\n                    , 5];\n                    return [4\n                    /*yield*/\n                    , store.delete(key)];\n\n                  case 4:\n                    _a.sent();\n\n                    _a.label = 5;\n\n                  case 5:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 7, 8, 9]);\n\n            items_1 = __values(items), items_1_1 = items_1.next();\n            _b.label = 3;\n\n          case 3:\n            if (!!items_1_1.done) return [3\n            /*break*/\n            , 6];\n            item = items_1_1.value;\n            return [5\n            /*yield**/\n            , _loop_1(item)];\n\n          case 4:\n            _b.sent();\n\n            _b.label = 5;\n\n          case 5:\n            items_1_1 = items_1.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            e_3_1 = _b.sent();\n            e_3 = {\n              error: e_3_1\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            try {\n              if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [4\n            /*yield*/\n            , txn.done];\n\n          case 10:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n    var e_4, _a, e_5, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var connectionStoreNames, tx, _c, _d, deleteItem, storeName, items, store, items_2, items_2_1, item, key, keyValues, itemKey, e_5_1, e_4_1;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            connectionStoreNames = deleteQueue.map(function (_a) {\n              var storeName = _a.storeName;\n              return storeName;\n            });\n            tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n            _e.label = 1;\n\n          case 1:\n            _e.trys.push([1, 22, 23, 28]);\n\n            _c = __asyncValues(deleteQueue);\n            _e.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , _c.next()];\n\n          case 3:\n            if (!(_d = _e.sent(), !_d.done)) return [3\n            /*break*/\n            , 21];\n            deleteItem = _d.value;\n            storeName = deleteItem.storeName, items = deleteItem.items;\n            store = tx.objectStore(storeName);\n            _e.label = 4;\n\n          case 4:\n            _e.trys.push([4, 14, 15, 20]);\n\n            items_2 = __asyncValues(items);\n            _e.label = 5;\n\n          case 5:\n            return [4\n            /*yield*/\n            , items_2.next()];\n\n          case 6:\n            if (!(items_2_1 = _e.sent(), !items_2_1.done)) return [3\n            /*break*/\n            , 13];\n            item = items_2_1.value;\n            if (!item) return [3\n            /*break*/\n            , 12];\n            key = void 0;\n            if (!(typeof item === 'object')) return [3\n            /*break*/\n            , 8];\n            keyValues = this.getIndexKeyValuesFromModel(item);\n            return [4\n            /*yield*/\n            , store.index('byPk').getKey(this.canonicalKeyPath(keyValues))];\n\n          case 7:\n            key = _e.sent();\n            return [3\n            /*break*/\n            , 10];\n\n          case 8:\n            itemKey = item.toString();\n            return [4\n            /*yield*/\n            , store.index('byPk').getKey(itemKey)];\n\n          case 9:\n            key = _e.sent();\n            _e.label = 10;\n\n          case 10:\n            if (!(key !== undefined)) return [3\n            /*break*/\n            , 12];\n            return [4\n            /*yield*/\n            , store.delete(key)];\n\n          case 11:\n            _e.sent();\n\n            _e.label = 12;\n\n          case 12:\n            return [3\n            /*break*/\n            , 5];\n\n          case 13:\n            return [3\n            /*break*/\n            , 20];\n\n          case 14:\n            e_5_1 = _e.sent();\n            e_5 = {\n              error: e_5_1\n            };\n            return [3\n            /*break*/\n            , 20];\n\n          case 15:\n            _e.trys.push([15,, 18, 19]);\n\n            if (!(items_2_1 && !items_2_1.done && (_b = items_2.return))) return [3\n            /*break*/\n            , 17];\n            return [4\n            /*yield*/\n            , _b.call(items_2)];\n\n          case 16:\n            _e.sent();\n\n            _e.label = 17;\n\n          case 17:\n            return [3\n            /*break*/\n            , 19];\n\n          case 18:\n            if (e_5) throw e_5.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 19:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 20:\n            return [3\n            /*break*/\n            , 2];\n\n          case 21:\n            return [3\n            /*break*/\n            , 28];\n\n          case 22:\n            e_4_1 = _e.sent();\n            e_4 = {\n              error: e_4_1\n            };\n            return [3\n            /*break*/\n            , 28];\n\n          case 23:\n            _e.trys.push([23,, 26, 27]);\n\n            if (!(_d && !_d.done && (_a = _c.return))) return [3\n            /*break*/\n            , 25];\n            return [4\n            /*yield*/\n            , _a.call(_c)];\n\n          case 24:\n            _e.sent();\n\n            _e.label = 25;\n\n          case 25:\n            return [3\n            /*break*/\n            , 27];\n\n          case 26:\n            if (e_4) throw e_4.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 27:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 28:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; //#region platform-specific helper methods\n\n\n  IndexedDBAdapter.prototype.checkPrivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isPrivate;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , isPrivateMode().then(function (isPrivate) {\n              return isPrivate;\n            })];\n\n          case 1:\n            isPrivate = _a.sent();\n\n            if (isPrivate) {\n              logger.error(\"IndexedDB not supported in this browser's private mode\");\n              return [2\n              /*return*/\n              , Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n            } else {\n              return [2\n              /*return*/\n              , Promise.resolve()];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Whether the browser's implementation of IndexedDB is coercing single-field\n   * indexes to a scalar key.\n   *\n   * If this returns `true`, we need to treat indexes containing a single field\n   * as scalars.\n   *\n   * See PR description for reference:\n   * https://github.com/aws-amplify/amplify-js/pull/10527\n   */\n\n\n  IndexedDBAdapter.prototype.setSafariCompatabilityMode = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , isSafariCompatabilityMode()];\n\n          case 1:\n            _a.safariCompatabilityMode = _b.sent();\n\n            if (this.safariCompatabilityMode === true) {\n              logger.debug('IndexedDB Adapter is running in Safari Compatability Mode');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getNamespaceAndModelFromStorename = function (storeName) {\n    var _a = __read(storeName.split('_')),\n        namespaceName = _a[0],\n        modelNameArr = _a.slice(1);\n\n    return {\n      namespaceName: namespaceName,\n      modelName: modelNameArr.join('_')\n    };\n  };\n\n  IndexedDBAdapter.prototype.createObjectStoreForModel = function (db, namespaceName, storeName, modelName) {\n    var store = db.createObjectStore(storeName, {\n      autoIncrement: true\n    });\n    var indexes = this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n    indexes.forEach(function (_a) {\n      var _b = __read(_a, 3),\n          idxName = _b[0],\n          keyPath = _b[1],\n          options = _b[2];\n\n      store.createIndex(idxName, keyPath, options);\n    });\n    return store;\n  };\n\n  IndexedDBAdapter.prototype.getByKey = function (storeName, keyValue) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._get(storeName, keyValue)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.getAll = function (storeName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Tries to generate an index fetcher for the given predicates. Assumes\n   * that the given predicate conditions are contained by an AND group and\n   * should therefore all match a single record.\n   *\n   * @param storeName The table to query.\n   * @param predicates The predicates to try to AND together.\n   * @param transaction\n   */\n\n\n  IndexedDBAdapter.prototype.matchingIndexQueries = function (storeName, predicates, transaction) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this; // could be expanded later to include `exec()` and a `cardinality` estimate?\n\n\n    var queries = [];\n    var predicateIndex = new Map();\n\n    try {\n      for (var predicates_1 = __values(predicates), predicates_1_1 = predicates_1.next(); !predicates_1_1.done; predicates_1_1 = predicates_1.next()) {\n        var predicate = predicates_1_1.value;\n        predicateIndex.set(String(predicate.field), predicate);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (predicates_1_1 && !predicates_1_1.done && (_a = predicates_1.return)) _a.call(predicates_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var store = transaction.objectStore(storeName);\n\n    var _loop_2 = function (name_1) {\n      var e_8, _a;\n\n      var idx = store.index(name_1);\n      var keypath = Array.isArray(idx.keyPath) ? idx.keyPath : [idx.keyPath];\n      var matchingPredicateValues = [];\n\n      try {\n        for (var keypath_1 = (e_8 = void 0, __values(keypath)), keypath_1_1 = keypath_1.next(); !keypath_1_1.done; keypath_1_1 = keypath_1.next()) {\n          var field = keypath_1_1.value;\n          var p = predicateIndex.get(field);\n\n          if (p && p.operand !== null && p.operand !== undefined) {\n            matchingPredicateValues.push(p.operand);\n          } else {\n            break;\n          }\n        }\n      } catch (e_8_1) {\n        e_8 = {\n          error: e_8_1\n        };\n      } finally {\n        try {\n          if (keypath_1_1 && !keypath_1_1.done && (_a = keypath_1.return)) _a.call(keypath_1);\n        } finally {\n          if (e_8) throw e_8.error;\n        }\n      } // if we have a matching predicate field for each component of this index,\n      // we can build a query for it. otherwise, we can't.\n\n\n      if (matchingPredicateValues.length === keypath.length) {\n        // re-create a transaction, because the transaction used to fetch the\n        // indexes may no longer be active.\n        queries.push(function () {\n          return _this.db.transaction(storeName).objectStore(storeName).index(name_1).getAll(_this.canonicalKeyPath(matchingPredicateValues));\n        });\n      }\n    };\n\n    try {\n      for (var _c = __values(store.indexNames), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var name_1 = _d.value;\n\n        _loop_2(name_1);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    return queries;\n  };\n\n  IndexedDBAdapter.prototype.baseQueryIndex = function (storeName, predicates, transaction) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, fieldPredicates, txn, result, groupQueries, objectQueries, indexedQueries;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type; // the predicate objects we care about tend to be nested at least\n            // one level down: `{and: {or: {and: { <the predicates we want> }}}}`\n            // so, we unpack and/or groups until we find a group with more than 1\n            // child OR a child that is not a group (and is therefore a predicate \"object\").\n\n            while (predicateObjs.length === 1 && isPredicateGroup(predicateObjs[0]) && predicateObjs[0].type !== 'not') {\n              type = predicateObjs[0].type;\n              predicateObjs = predicateObjs[0].predicates;\n            }\n\n            fieldPredicates = predicateObjs.filter(function (p) {\n              return isPredicateObj(p) && p.operator === 'eq';\n            });\n            txn = transaction || this.db.transaction(storeName);\n            result = {};\n            if (!(type === 'or')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , Promise.all(predicateObjs.filter(function (o) {\n              return isPredicateGroup(o) && o.type === 'and';\n            }).map(function (o) {\n              return _this.baseQueryIndex(storeName, o, txn);\n            })).then(function (queries) {\n              return queries.filter(function (q) {\n                return q.indexedQueries.length === 1;\n              }).map(function (i) {\n                return i.indexedQueries;\n              });\n            })];\n\n          case 1:\n            groupQueries = _a.sent();\n            objectQueries = predicateObjs.filter(function (o) {\n              return isPredicateObj(o);\n            }).map(function (o) {\n              return _this.matchingIndexQueries(storeName, [o], txn);\n            });\n            indexedQueries = __spread(groupQueries, objectQueries).map(function (q) {\n              return q[0];\n            }).filter(function (i) {\n              return i;\n            }); // if, after hunting for base queries, we don't have exactly 1 base query\n            // for each child group + object, stop trying to optimize. we're not dealing\n            // with a simple query that fits the intended optimization path.\n\n            if (predicateObjs.length > indexedQueries.length) {\n              result = {\n                groupType: null,\n                indexedQueries: []\n              };\n            } else {\n              result = {\n                groupType: 'or',\n                indexedQueries: indexedQueries\n              };\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            if (type === 'and') {\n              // our potential indexes or lacks thereof.\n              // note that we're only optimizing for `eq` right now.\n              result = {\n                groupType: type,\n                indexedQueries: this.matchingIndexQueries(storeName, fieldPredicates, txn)\n              };\n            } else {\n              result = {\n                groupType: null,\n                indexedQueries: []\n              };\n            }\n\n            _a.label = 3;\n\n          case 3:\n            if (!!transaction) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , txn.done];\n\n          case 4:\n            _a.sent();\n\n            _a.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var predicateObjs, type, _a, groupType, indexedQueries, candidateResults, distinctResults, indexedQueries_1, indexedQueries_1_1, query, resultGroup, resultGroup_1, resultGroup_1_1, item, distinctificationString, e_9_1, filtered;\n\n      var e_9, _b, e_10, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            predicateObjs = predicates.predicates, type = predicates.type;\n            return [4\n            /*yield*/\n            , this.baseQueryIndex(storeName, predicates)];\n\n          case 1:\n            _a = _d.sent(), groupType = _a.groupType, indexedQueries = _a.indexedQueries;\n            if (!(groupType === 'and' && indexedQueries.length > 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , indexedQueries[0]()];\n\n          case 2:\n            // each condition must be satsified, we can form a base set with any\n            // ONE of those conditions and then filter.\n            candidateResults = _d.sent();\n            return [3\n            /*break*/\n            , 14];\n\n          case 3:\n            if (!(groupType === 'or' && indexedQueries.length > 0 && indexedQueries.length <= MULTI_OR_CONDITION_SCAN_BREAKPOINT)) return [3\n            /*break*/\n            , 12];\n            distinctResults = new Map();\n            _d.label = 4;\n\n          case 4:\n            _d.trys.push([4, 9, 10, 11]);\n\n            indexedQueries_1 = __values(indexedQueries), indexedQueries_1_1 = indexedQueries_1.next();\n            _d.label = 5;\n\n          case 5:\n            if (!!indexedQueries_1_1.done) return [3\n            /*break*/\n            , 8];\n            query = indexedQueries_1_1.value;\n            return [4\n            /*yield*/\n            , query()];\n\n          case 6:\n            resultGroup = _d.sent();\n\n            try {\n              for (resultGroup_1 = (e_10 = void 0, __values(resultGroup)), resultGroup_1_1 = resultGroup_1.next(); !resultGroup_1_1.done; resultGroup_1_1 = resultGroup_1.next()) {\n                item = resultGroup_1_1.value;\n                distinctificationString = JSON.stringify(item);\n                distinctResults.set(distinctificationString, item);\n              }\n            } catch (e_10_1) {\n              e_10 = {\n                error: e_10_1\n              };\n            } finally {\n              try {\n                if (resultGroup_1_1 && !resultGroup_1_1.done && (_c = resultGroup_1.return)) _c.call(resultGroup_1);\n              } finally {\n                if (e_10) throw e_10.error;\n              }\n            }\n\n            _d.label = 7;\n\n          case 7:\n            indexedQueries_1_1 = indexedQueries_1.next();\n            return [3\n            /*break*/\n            , 5];\n\n          case 8:\n            return [3\n            /*break*/\n            , 11];\n\n          case 9:\n            e_9_1 = _d.sent();\n            e_9 = {\n              error: e_9_1\n            };\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            try {\n              if (indexedQueries_1_1 && !indexedQueries_1_1.done && (_b = indexedQueries_1.return)) _b.call(indexedQueries_1);\n            } finally {\n              if (e_9) throw e_9.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 11:\n            // we could conceivably check for special conditions and return early here.\n            // but, this is simpler and has not yet had a measurable performance impact.\n            candidateResults = Array.from(distinctResults.values());\n            return [3\n            /*break*/\n            , 14];\n\n          case 12:\n            return [4\n            /*yield*/\n            , this.getAll(storeName)];\n\n          case 13:\n            // nothing intelligent we can do with `not` groups unless or until we start\n            // smashing comparison operators against indexes -- at which point we could\n            // perform some reversal here.\n            candidateResults = _d.sent();\n            _d.label = 14;\n\n          case 14:\n            filtered = predicateObjs ? candidateResults.filter(function (m) {\n              return validatePredicate(m, type, predicateObjs);\n            }) : candidateResults;\n            return [2\n            /*return*/\n            , filtered];\n        }\n      });\n    });\n  };\n\n  IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n    return inMemoryPagination(records, pagination);\n  };\n\n  IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!pagination) return [3\n            /*break*/\n            , 7];\n            _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n            initialRecord = Math.max(0, page * limit) || 0;\n            return [4\n            /*yield*/\n            , this.db.transaction(storeName).objectStore(storeName).openCursor()];\n\n          case 1:\n            cursor = _c.sent();\n            if (!(cursor && initialRecord > 0)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , cursor.advance(initialRecord)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            pageResults = [];\n            hasLimit = typeof limit === 'number' && limit > 0;\n            _c.label = 4;\n\n          case 4:\n            if (!(cursor && cursor.value)) return [3\n            /*break*/\n            , 6];\n            pageResults.push(cursor.value);\n\n            if (hasLimit && pageResults.length === limit) {\n              return [3\n              /*break*/\n              , 6];\n            }\n\n            return [4\n            /*yield*/\n            , cursor.continue()];\n\n          case 5:\n            cursor = _c.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 6:\n            result = pageResults;\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            return [4\n            /*yield*/\n            , this.db.getAll(storeName)];\n\n          case 8:\n            result = _c.sent();\n            _c.label = 9;\n\n          case 9:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  return IndexedDBAdapter;\n}(StorageAdapterBase);\n\nexport default new IndexedDBAdapter();","map":{"version":3,"names":["__asyncValues","__awaiter","__extends","__generator","__read","__spread","__values","ConsoleLogger","Logger","idb","isPredicateObj","isPredicateGroup","OpType","QueryOne","isPrivateMode","traverseModel","validatePredicate","inMemoryPagination","keysEqual","getStorename","isSafariCompatabilityMode","StorageAdapterBase","logger","MULTI_OR_CONDITION_SCAN_BREAKPOINT","DB_VERSION","IndexedDBAdapter","_super","_this","apply","arguments","safariCompatabilityMode","canonicalKeyPath","keyArr","length","prototype","preSetUpChecks","_a","label","checkPrivate","sent","setSafariCompatabilityMode","preOpCheck","initDb","openDB","dbName","upgrade","db","oldVersion","newVersion","txn","_b","storeName","origStore","tmpName","_c","namespaceName","modelName","modelInCurrentSchema","newStore","cursor","count","e_1_1","error_1","e_1","_d","_e","Object","keys","schema","namespaces","forEach","namespace","models","createObjectStoreForModel","trys","push","objectStoreNames","next","done","value","objectStore","name","getNamespaceAndModelFromStorename","deleteObjectStore","openCursor","put","continue","debug","error","return","call","Set","map","filter","has","abort","_get","storeOrStoreName","index","store","result","transaction","get","clear","close","deleteDB","undefined","initPromise","save","model","condition","e_2","set","connectionStoreNames","modelKeyValues","tx","fromDB","connectionStoreNames_1","connectionStoreNames_1_1","resItem","storeName_1","item","instance","store_1","itemKeyValues","fromDB_1","opType","key","e_2_1","saveMetadata","Array","from","values","validateSaveCondition","UPDATE","INSERT","getKey","query","modelConstructor","predicate","pagination","queryByKey","predicates","hasSort","hasPagination","records","queryMetadata","record","filtered","all","getByKey","filterOnPredicate","getAll","enginePagination","load","queryOne","firstOrLast","FIRST","getStorenameForModel","modelInstanceCreator","batchSave","items","_loop_1","this_1","items_1","items_1_1","e_3_1","e_3","namespaceResolver","connectedModels","keyValues","_deleted","getModelConstructorByModelName","getIndexKeyValuesFromModel","find","instanceKeyValues","DELETE","delete","deleteItem","deleteQueue","e_4","e_5","items_2","items_2_1","itemKey","e_5_1","e_4_1","toString","isPrivate","then","Promise","reject","resolve","split","modelNameArr","slice","join","createObjectStore","autoIncrement","indexes","relationships","idxName","keyPath","options","createIndex","keyValue","matchingIndexQueries","e_6","e_7","queries","predicateIndex","Map","predicates_1","predicates_1_1","String","field","e_6_1","_loop_2","name_1","e_8","idx","keypath","isArray","matchingPredicateValues","keypath_1","keypath_1_1","p","operand","e_8_1","indexNames","e_7_1","baseQueryIndex","predicateObjs","type","fieldPredicates","groupQueries","objectQueries","indexedQueries","operator","o","q","i","groupType","candidateResults","distinctResults","indexedQueries_1","indexedQueries_1_1","resultGroup","resultGroup_1","resultGroup_1_1","distinctificationString","e_9_1","e_9","e_10","JSON","stringify","e_10_1","m","page","limit","initialRecord","pageResults","hasLimit","Math","max","advance"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/datastore/lib-esm/storage/adapter/IndexedDBAdapter.js"],"sourcesContent":["import { __asyncValues, __awaiter, __extends, __generator, __read, __spread, __values } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport * as idb from 'idb';\nimport { isPredicateObj, isPredicateGroup, OpType, QueryOne, } from '../../types';\nimport { isPrivateMode, traverseModel, validatePredicate, inMemoryPagination, keysEqual, getStorename, isSafariCompatabilityMode, } from '../../util';\nimport { StorageAdapterBase } from './StorageAdapterBase';\nvar logger = new Logger('DataStore');\n/**\n * The point after which queries composed of multiple simple OR conditions\n * should scan-and-filter instead of individual queries for each condition.\n *\n * At some point, this should be configurable and/or dynamic based on table\n * size and possibly even on observed average seek latency. For now, it's\n * based on an manual \"binary search\" for the breakpoint as measured in the\n * unit test suite. This isn't necessarily optimal. But, it's at least derived\n * empirically, rather than theoretically and without any verification!\n *\n * REMEMBER! If you run more realistic benchmarks and update this value, update\n * this comment so the validity and accuracy of future query tuning exercises\n * can be compared to the methods used to derive the current value. E.g.,\n *\n * 1. In browser benchmark > unit test benchmark\n * 2. Multi-browser benchmark > single browser benchmark\n * 3. Benchmarks of various table sizes > static table size benchmark\n *\n * etc...\n *\n */\nvar MULTI_OR_CONDITION_SCAN_BREAKPOINT = 7;\n//\nvar DB_VERSION = 3;\nvar IndexedDBAdapter = /** @class */ (function (_super) {\n    __extends(IndexedDBAdapter, _super);\n    function IndexedDBAdapter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.safariCompatabilityMode = false;\n        /**\n         * Checks the given path against the browser's IndexedDB implementation for\n         * necessary compatibility transformations, applying those transforms if needed.\n         *\n         * @param `keyArr` strings to compatibilize for browser-indexeddb index operations\n         * @returns An array or string, depending on and given key,\n         * that is ensured to be compatible with the IndexedDB implementation's nuances.\n         */\n        _this.canonicalKeyPath = function (keyArr) {\n            if (_this.safariCompatabilityMode) {\n                return keyArr.length > 1 ? keyArr : keyArr[0];\n            }\n            return keyArr;\n        };\n        return _this;\n        //#endregion\n    }\n    // checks are called by StorageAdapterBase class\n    IndexedDBAdapter.prototype.preSetUpChecks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.setSafariCompatabilityMode()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.preOpCheck = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Initialize IndexedDB database\n     * Create new DB if one doesn't exist\n     * Upgrade outdated DB\n     *\n     * Called by `StorageAdapterBase.setUp()`\n     *\n     * @returns IDB Database instance\n     */\n    IndexedDBAdapter.prototype.initDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, idb.openDB(this.dbName, DB_VERSION, {\n                            upgrade: function (db, oldVersion, newVersion, txn) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, _b, storeName, origStore, tmpName, _c, namespaceName, modelName, modelInCurrentSchema, newStore, cursor, count, e_1_1, error_1;\n                                var e_1, _d;\n                                var _this = this;\n                                return __generator(this, function (_e) {\n                                    switch (_e.label) {\n                                        case 0:\n                                            // create new database\n                                            if (oldVersion === 0) {\n                                                Object.keys(this.schema.namespaces).forEach(function (namespaceName) {\n                                                    var namespace = _this.schema.namespaces[namespaceName];\n                                                    Object.keys(namespace.models).forEach(function (modelName) {\n                                                        var storeName = getStorename(namespaceName, modelName);\n                                                        _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                                                    });\n                                                });\n                                                return [2 /*return*/];\n                                            }\n                                            if (!((oldVersion === 1 || oldVersion === 2) && newVersion === 3)) return [3 /*break*/, 16];\n                                            _e.label = 1;\n                                        case 1:\n                                            _e.trys.push([1, 14, , 15]);\n                                            _e.label = 2;\n                                        case 2:\n                                            _e.trys.push([2, 11, 12, 13]);\n                                            _a = __values(txn.objectStoreNames), _b = _a.next();\n                                            _e.label = 3;\n                                        case 3:\n                                            if (!!_b.done) return [3 /*break*/, 10];\n                                            storeName = _b.value;\n                                            origStore = txn.objectStore(storeName);\n                                            tmpName = \"tmp_\" + storeName;\n                                            origStore.name = tmpName;\n                                            _c = this.getNamespaceAndModelFromStorename(storeName), namespaceName = _c.namespaceName, modelName = _c.modelName;\n                                            modelInCurrentSchema = modelName in this.schema.namespaces[namespaceName].models;\n                                            if (!modelInCurrentSchema) {\n                                                // delete original\n                                                db.deleteObjectStore(tmpName);\n                                                return [3 /*break*/, 9];\n                                            }\n                                            newStore = this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                                            return [4 /*yield*/, origStore.openCursor()];\n                                        case 4:\n                                            cursor = _e.sent();\n                                            count = 0;\n                                            _e.label = 5;\n                                        case 5:\n                                            if (!(cursor && cursor.value)) return [3 /*break*/, 8];\n                                            // we don't pass key, since they are all new entries in the new store\n                                            return [4 /*yield*/, newStore.put(cursor.value)];\n                                        case 6:\n                                            // we don't pass key, since they are all new entries in the new store\n                                            _e.sent();\n                                            return [4 /*yield*/, cursor.continue()];\n                                        case 7:\n                                            cursor = _e.sent();\n                                            count++;\n                                            return [3 /*break*/, 5];\n                                        case 8:\n                                            // delete original\n                                            db.deleteObjectStore(tmpName);\n                                            logger.debug(count + \" \" + storeName + \" records migrated\");\n                                            _e.label = 9;\n                                        case 9:\n                                            _b = _a.next();\n                                            return [3 /*break*/, 3];\n                                        case 10: return [3 /*break*/, 13];\n                                        case 11:\n                                            e_1_1 = _e.sent();\n                                            e_1 = { error: e_1_1 };\n                                            return [3 /*break*/, 13];\n                                        case 12:\n                                            try {\n                                                if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                                            }\n                                            finally { if (e_1) throw e_1.error; }\n                                            return [7 /*endfinally*/];\n                                        case 13:\n                                            // add new models created after IndexedDB, but before migration\n                                            // this case may happen when a user has not opened an app for\n                                            // some time and a new model is added during that time\n                                            Object.keys(this.schema.namespaces).forEach(function (namespaceName) {\n                                                var namespace = _this.schema.namespaces[namespaceName];\n                                                var objectStoreNames = new Set(txn.objectStoreNames);\n                                                Object.keys(namespace.models)\n                                                    .map(function (modelName) {\n                                                    return [modelName, getStorename(namespaceName, modelName)];\n                                                })\n                                                    .filter(function (_a) {\n                                                    var _b = __read(_a, 2), storeName = _b[1];\n                                                    return !objectStoreNames.has(storeName);\n                                                })\n                                                    .forEach(function (_a) {\n                                                    var _b = __read(_a, 2), modelName = _b[0], storeName = _b[1];\n                                                    _this.createObjectStoreForModel(db, namespaceName, storeName, modelName);\n                                                });\n                                            });\n                                            return [3 /*break*/, 15];\n                                        case 14:\n                                            error_1 = _e.sent();\n                                            logger.error('Error migrating IndexedDB data', error_1);\n                                            txn.abort();\n                                            throw error_1;\n                                        case 15: return [2 /*return*/];\n                                        case 16: return [2 /*return*/];\n                                    }\n                                });\n                            }); },\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype._get = function (storeOrStoreName, keyArr) {\n        return __awaiter(this, void 0, void 0, function () {\n            var index, storeName, store, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof storeOrStoreName === 'string') {\n                            storeName = storeOrStoreName;\n                            index = this.db.transaction(storeName, 'readonly').store.index('byPk');\n                        }\n                        else {\n                            store = storeOrStoreName;\n                            index = store.index('byPk');\n                        }\n                        return [4 /*yield*/, index.get(this.canonicalKeyPath(keyArr))];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.clear = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        (_a = this.db) === null || _a === void 0 ? void 0 : _a.close();\n                        return [4 /*yield*/, idb.deleteDB(this.dbName)];\n                    case 2:\n                        _b.sent();\n                        this.db = undefined;\n                        this.initPromise = undefined;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.save = function (model, condition) {\n        var e_2, _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, storeName, set, connectionStoreNames, modelKeyValues, tx, store, fromDB, result, connectionStoreNames_1, connectionStoreNames_1_1, resItem, storeName_1, item, instance, keys, store_1, itemKeyValues, fromDB_1, opType, key, e_2_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _c.sent();\n                        _b = this.saveMetadata(model), storeName = _b.storeName, set = _b.set, connectionStoreNames = _b.connectionStoreNames, modelKeyValues = _b.modelKeyValues;\n                        tx = this.db.transaction(__spread([storeName], Array.from(set.values())), 'readwrite');\n                        store = tx.objectStore(storeName);\n                        return [4 /*yield*/, this._get(store, modelKeyValues)];\n                    case 2:\n                        fromDB = _c.sent();\n                        this.validateSaveCondition(condition, fromDB);\n                        result = [];\n                        _c.label = 3;\n                    case 3:\n                        _c.trys.push([3, 11, 12, 17]);\n                        connectionStoreNames_1 = __asyncValues(connectionStoreNames);\n                        _c.label = 4;\n                    case 4: return [4 /*yield*/, connectionStoreNames_1.next()];\n                    case 5:\n                        if (!(connectionStoreNames_1_1 = _c.sent(), !connectionStoreNames_1_1.done)) return [3 /*break*/, 10];\n                        resItem = connectionStoreNames_1_1.value;\n                        storeName_1 = resItem.storeName, item = resItem.item, instance = resItem.instance, keys = resItem.keys;\n                        store_1 = tx.objectStore(storeName_1);\n                        itemKeyValues = keys.map(function (key) { return item[key]; });\n                        return [4 /*yield*/, this._get(store_1, itemKeyValues)];\n                    case 6:\n                        fromDB_1 = _c.sent();\n                        opType = fromDB_1 ? OpType.UPDATE : OpType.INSERT;\n                        if (!(keysEqual(itemKeyValues, modelKeyValues) ||\n                            opType === OpType.INSERT)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, store_1\n                                .index('byPk')\n                                .getKey(this.canonicalKeyPath(itemKeyValues))];\n                    case 7:\n                        key = _c.sent();\n                        return [4 /*yield*/, store_1.put(item, key)];\n                    case 8:\n                        _c.sent();\n                        result.push([instance, opType]);\n                        _c.label = 9;\n                    case 9: return [3 /*break*/, 4];\n                    case 10: return [3 /*break*/, 17];\n                    case 11:\n                        e_2_1 = _c.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 17];\n                    case 12:\n                        _c.trys.push([12, , 15, 16]);\n                        if (!(connectionStoreNames_1_1 && !connectionStoreNames_1_1.done && (_a = connectionStoreNames_1.return))) return [3 /*break*/, 14];\n                        return [4 /*yield*/, _a.call(connectionStoreNames_1)];\n                    case 13:\n                        _c.sent();\n                        _c.label = 14;\n                    case 14: return [3 /*break*/, 16];\n                    case 15:\n                        if (e_2) throw e_2.error;\n                        return [7 /*endfinally*/];\n                    case 16: return [7 /*endfinally*/];\n                    case 17: return [4 /*yield*/, tx.done];\n                    case 18:\n                        _c.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.query = function (modelConstructor, predicate, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, storeName, namespaceName, queryByKey, predicates, hasSort, hasPagination, records;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        _a = this.queryMetadata(modelConstructor, predicate, pagination), storeName = _a.storeName, namespaceName = _a.namespaceName, queryByKey = _a.queryByKey, predicates = _a.predicates, hasSort = _a.hasSort, hasPagination = _a.hasPagination;\n                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\n                                var record, filtered, all;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!queryByKey) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.getByKey(storeName, queryByKey)];\n                                        case 1:\n                                            record = _a.sent();\n                                            return [2 /*return*/, record ? [record] : []];\n                                        case 2:\n                                            if (!predicates) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this.filterOnPredicate(storeName, predicates)];\n                                        case 3:\n                                            filtered = _a.sent();\n                                            return [2 /*return*/, this.inMemoryPagination(filtered, pagination)];\n                                        case 4:\n                                            if (!hasSort) return [3 /*break*/, 6];\n                                            return [4 /*yield*/, this.getAll(storeName)];\n                                        case 5:\n                                            all = _a.sent();\n                                            return [2 /*return*/, this.inMemoryPagination(all, pagination)];\n                                        case 6:\n                                            if (hasPagination) {\n                                                return [2 /*return*/, this.enginePagination(storeName, pagination)];\n                                            }\n                                            return [2 /*return*/, this.getAll(storeName)];\n                                    }\n                                });\n                            }); })()];\n                    case 2:\n                        records = (_b.sent());\n                        return [4 /*yield*/, this.load(namespaceName, modelConstructor.name, records)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.queryOne = function (modelConstructor, firstOrLast) {\n        if (firstOrLast === void 0) { firstOrLast = QueryOne.FIRST; }\n        return __awaiter(this, void 0, void 0, function () {\n            var storeName, cursor, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _a.sent();\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        return [4 /*yield*/, this.db\n                                .transaction([storeName], 'readonly')\n                                .objectStore(storeName)\n                                .openCursor(undefined, firstOrLast === QueryOne.FIRST ? 'next' : 'prev')];\n                    case 2:\n                        cursor = _a.sent();\n                        result = cursor ? cursor.value : undefined;\n                        return [2 /*return*/, result && this.modelInstanceCreator(modelConstructor, result)];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.batchSave = function (modelConstructor, items) {\n        return __awaiter(this, void 0, void 0, function () {\n            var modelName, namespaceName, storeName, result, txn, store, _loop_1, this_1, items_1, items_1_1, item, e_3_1;\n            var e_3, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.checkPrivate()];\n                    case 1:\n                        _b.sent();\n                        if (items.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        modelName = modelConstructor.name;\n                        namespaceName = this.namespaceResolver(modelConstructor);\n                        storeName = this.getStorenameForModel(modelConstructor);\n                        result = [];\n                        txn = this.db.transaction(storeName, 'readwrite');\n                        store = txn.store;\n                        _loop_1 = function (item) {\n                            var model, connectedModels, keyValues, _deleted, index, key, instance;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        model = this_1.modelInstanceCreator(modelConstructor, item);\n                                        connectedModels = traverseModel(modelName, model, this_1.schema.namespaces[namespaceName], this_1.modelInstanceCreator, this_1.getModelConstructorByModelName);\n                                        keyValues = this_1.getIndexKeyValuesFromModel(model);\n                                        _deleted = item._deleted;\n                                        index = store.index('byPk');\n                                        return [4 /*yield*/, index.getKey(this_1.canonicalKeyPath(keyValues))];\n                                    case 1:\n                                        key = _a.sent();\n                                        if (!!_deleted) return [3 /*break*/, 3];\n                                        instance = connectedModels.find(function (_a) {\n                                            var instance = _a.instance;\n                                            var instanceKeyValues = _this.getIndexKeyValuesFromModel(instance);\n                                            return keysEqual(instanceKeyValues, keyValues);\n                                        }).instance;\n                                        result.push([\n                                            instance,\n                                            key ? OpType.UPDATE : OpType.INSERT,\n                                        ]);\n                                        return [4 /*yield*/, store.put(instance, key)];\n                                    case 2:\n                                        _a.sent();\n                                        return [3 /*break*/, 5];\n                                    case 3:\n                                        result.push([item, OpType.DELETE]);\n                                        if (!key) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, store.delete(key)];\n                                    case 4:\n                                        _a.sent();\n                                        _a.label = 5;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 7, 8, 9]);\n                        items_1 = __values(items), items_1_1 = items_1.next();\n                        _b.label = 3;\n                    case 3:\n                        if (!!items_1_1.done) return [3 /*break*/, 6];\n                        item = items_1_1.value;\n                        return [5 /*yield**/, _loop_1(item)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        items_1_1 = items_1.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_3_1 = _b.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                        return [7 /*endfinally*/];\n                    case 9: return [4 /*yield*/, txn.done];\n                    case 10:\n                        _b.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.deleteItem = function (deleteQueue) {\n        var e_4, _a, e_5, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var connectionStoreNames, tx, _c, _d, deleteItem, storeName, items, store, items_2, items_2_1, item, key, keyValues, itemKey, e_5_1, e_4_1;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        connectionStoreNames = deleteQueue.map(function (_a) {\n                            var storeName = _a.storeName;\n                            return storeName;\n                        });\n                        tx = this.db.transaction(__spread(connectionStoreNames), 'readwrite');\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 22, 23, 28]);\n                        _c = __asyncValues(deleteQueue);\n                        _e.label = 2;\n                    case 2: return [4 /*yield*/, _c.next()];\n                    case 3:\n                        if (!(_d = _e.sent(), !_d.done)) return [3 /*break*/, 21];\n                        deleteItem = _d.value;\n                        storeName = deleteItem.storeName, items = deleteItem.items;\n                        store = tx.objectStore(storeName);\n                        _e.label = 4;\n                    case 4:\n                        _e.trys.push([4, 14, 15, 20]);\n                        items_2 = __asyncValues(items);\n                        _e.label = 5;\n                    case 5: return [4 /*yield*/, items_2.next()];\n                    case 6:\n                        if (!(items_2_1 = _e.sent(), !items_2_1.done)) return [3 /*break*/, 13];\n                        item = items_2_1.value;\n                        if (!item) return [3 /*break*/, 12];\n                        key = void 0;\n                        if (!(typeof item === 'object')) return [3 /*break*/, 8];\n                        keyValues = this.getIndexKeyValuesFromModel(item);\n                        return [4 /*yield*/, store\n                                .index('byPk')\n                                .getKey(this.canonicalKeyPath(keyValues))];\n                    case 7:\n                        key = _e.sent();\n                        return [3 /*break*/, 10];\n                    case 8:\n                        itemKey = item.toString();\n                        return [4 /*yield*/, store.index('byPk').getKey(itemKey)];\n                    case 9:\n                        key = _e.sent();\n                        _e.label = 10;\n                    case 10:\n                        if (!(key !== undefined)) return [3 /*break*/, 12];\n                        return [4 /*yield*/, store.delete(key)];\n                    case 11:\n                        _e.sent();\n                        _e.label = 12;\n                    case 12: return [3 /*break*/, 5];\n                    case 13: return [3 /*break*/, 20];\n                    case 14:\n                        e_5_1 = _e.sent();\n                        e_5 = { error: e_5_1 };\n                        return [3 /*break*/, 20];\n                    case 15:\n                        _e.trys.push([15, , 18, 19]);\n                        if (!(items_2_1 && !items_2_1.done && (_b = items_2.return))) return [3 /*break*/, 17];\n                        return [4 /*yield*/, _b.call(items_2)];\n                    case 16:\n                        _e.sent();\n                        _e.label = 17;\n                    case 17: return [3 /*break*/, 19];\n                    case 18:\n                        if (e_5) throw e_5.error;\n                        return [7 /*endfinally*/];\n                    case 19: return [7 /*endfinally*/];\n                    case 20: return [3 /*break*/, 2];\n                    case 21: return [3 /*break*/, 28];\n                    case 22:\n                        e_4_1 = _e.sent();\n                        e_4 = { error: e_4_1 };\n                        return [3 /*break*/, 28];\n                    case 23:\n                        _e.trys.push([23, , 26, 27]);\n                        if (!(_d && !_d.done && (_a = _c.return))) return [3 /*break*/, 25];\n                        return [4 /*yield*/, _a.call(_c)];\n                    case 24:\n                        _e.sent();\n                        _e.label = 25;\n                    case 25: return [3 /*break*/, 27];\n                    case 26:\n                        if (e_4) throw e_4.error;\n                        return [7 /*endfinally*/];\n                    case 27: return [7 /*endfinally*/];\n                    case 28: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    //#region platform-specific helper methods\n    IndexedDBAdapter.prototype.checkPrivate = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var isPrivate;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, isPrivateMode().then(function (isPrivate) {\n                            return isPrivate;\n                        })];\n                    case 1:\n                        isPrivate = _a.sent();\n                        if (isPrivate) {\n                            logger.error(\"IndexedDB not supported in this browser's private mode\");\n                            return [2 /*return*/, Promise.reject(\"IndexedDB not supported in this browser's private mode\")];\n                        }\n                        else {\n                            return [2 /*return*/, Promise.resolve()];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Whether the browser's implementation of IndexedDB is coercing single-field\n     * indexes to a scalar key.\n     *\n     * If this returns `true`, we need to treat indexes containing a single field\n     * as scalars.\n     *\n     * See PR description for reference:\n     * https://github.com/aws-amplify/amplify-js/pull/10527\n     */\n    IndexedDBAdapter.prototype.setSafariCompatabilityMode = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, isSafariCompatabilityMode()];\n                    case 1:\n                        _a.safariCompatabilityMode = _b.sent();\n                        if (this.safariCompatabilityMode === true) {\n                            logger.debug('IndexedDB Adapter is running in Safari Compatability Mode');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.getNamespaceAndModelFromStorename = function (storeName) {\n        var _a = __read(storeName.split('_')), namespaceName = _a[0], modelNameArr = _a.slice(1);\n        return {\n            namespaceName: namespaceName,\n            modelName: modelNameArr.join('_'),\n        };\n    };\n    IndexedDBAdapter.prototype.createObjectStoreForModel = function (db, namespaceName, storeName, modelName) {\n        var store = db.createObjectStore(storeName, {\n            autoIncrement: true,\n        });\n        var indexes = this.schema.namespaces[namespaceName].relationships[modelName].indexes;\n        indexes.forEach(function (_a) {\n            var _b = __read(_a, 3), idxName = _b[0], keyPath = _b[1], options = _b[2];\n            store.createIndex(idxName, keyPath, options);\n        });\n        return store;\n    };\n    IndexedDBAdapter.prototype.getByKey = function (storeName, keyValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._get(storeName, keyValue)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.getAll = function (storeName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.db.getAll(storeName)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Tries to generate an index fetcher for the given predicates. Assumes\n     * that the given predicate conditions are contained by an AND group and\n     * should therefore all match a single record.\n     *\n     * @param storeName The table to query.\n     * @param predicates The predicates to try to AND together.\n     * @param transaction\n     */\n    IndexedDBAdapter.prototype.matchingIndexQueries = function (storeName, predicates, transaction) {\n        var e_6, _a, e_7, _b;\n        var _this = this;\n        // could be expanded later to include `exec()` and a `cardinality` estimate?\n        var queries = [];\n        var predicateIndex = new Map();\n        try {\n            for (var predicates_1 = __values(predicates), predicates_1_1 = predicates_1.next(); !predicates_1_1.done; predicates_1_1 = predicates_1.next()) {\n                var predicate = predicates_1_1.value;\n                predicateIndex.set(String(predicate.field), predicate);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (predicates_1_1 && !predicates_1_1.done && (_a = predicates_1.return)) _a.call(predicates_1);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n        var store = transaction.objectStore(storeName);\n        var _loop_2 = function (name_1) {\n            var e_8, _a;\n            var idx = store.index(name_1);\n            var keypath = Array.isArray(idx.keyPath) ? idx.keyPath : [idx.keyPath];\n            var matchingPredicateValues = [];\n            try {\n                for (var keypath_1 = (e_8 = void 0, __values(keypath)), keypath_1_1 = keypath_1.next(); !keypath_1_1.done; keypath_1_1 = keypath_1.next()) {\n                    var field = keypath_1_1.value;\n                    var p = predicateIndex.get(field);\n                    if (p && p.operand !== null && p.operand !== undefined) {\n                        matchingPredicateValues.push(p.operand);\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (keypath_1_1 && !keypath_1_1.done && (_a = keypath_1.return)) _a.call(keypath_1);\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n            // if we have a matching predicate field for each component of this index,\n            // we can build a query for it. otherwise, we can't.\n            if (matchingPredicateValues.length === keypath.length) {\n                // re-create a transaction, because the transaction used to fetch the\n                // indexes may no longer be active.\n                queries.push(function () {\n                    return _this.db\n                        .transaction(storeName)\n                        .objectStore(storeName)\n                        .index(name_1)\n                        .getAll(_this.canonicalKeyPath(matchingPredicateValues));\n                });\n            }\n        };\n        try {\n            for (var _c = __values(store.indexNames), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var name_1 = _d.value;\n                _loop_2(name_1);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return queries;\n    };\n    IndexedDBAdapter.prototype.baseQueryIndex = function (storeName, predicates, transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var predicateObjs, type, fieldPredicates, txn, result, groupQueries, objectQueries, indexedQueries;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        predicateObjs = predicates.predicates, type = predicates.type;\n                        // the predicate objects we care about tend to be nested at least\n                        // one level down: `{and: {or: {and: { <the predicates we want> }}}}`\n                        // so, we unpack and/or groups until we find a group with more than 1\n                        // child OR a child that is not a group (and is therefore a predicate \"object\").\n                        while (predicateObjs.length === 1 &&\n                            isPredicateGroup(predicateObjs[0]) &&\n                            predicateObjs[0].type !== 'not') {\n                            type = predicateObjs[0].type;\n                            predicateObjs = predicateObjs[0].predicates;\n                        }\n                        fieldPredicates = predicateObjs.filter(function (p) { return isPredicateObj(p) && p.operator === 'eq'; });\n                        txn = transaction || this.db.transaction(storeName);\n                        result = {};\n                        if (!(type === 'or')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(predicateObjs\n                                .filter(function (o) { return isPredicateGroup(o) && o.type === 'and'; })\n                                .map(function (o) {\n                                return _this.baseQueryIndex(storeName, o, txn);\n                            })).then(function (queries) {\n                                return queries\n                                    .filter(function (q) { return q.indexedQueries.length === 1; })\n                                    .map(function (i) { return i.indexedQueries; });\n                            })];\n                    case 1:\n                        groupQueries = _a.sent();\n                        objectQueries = predicateObjs\n                            .filter(function (o) { return isPredicateObj(o); })\n                            .map(function (o) {\n                            return _this.matchingIndexQueries(storeName, [o], txn);\n                        });\n                        indexedQueries = __spread(groupQueries, objectQueries).map(function (q) { return q[0]; })\n                            .filter(function (i) { return i; });\n                        // if, after hunting for base queries, we don't have exactly 1 base query\n                        // for each child group + object, stop trying to optimize. we're not dealing\n                        // with a simple query that fits the intended optimization path.\n                        if (predicateObjs.length > indexedQueries.length) {\n                            result = {\n                                groupType: null,\n                                indexedQueries: [],\n                            };\n                        }\n                        else {\n                            result = {\n                                groupType: 'or',\n                                indexedQueries: indexedQueries,\n                            };\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (type === 'and') {\n                            // our potential indexes or lacks thereof.\n                            // note that we're only optimizing for `eq` right now.\n                            result = {\n                                groupType: type,\n                                indexedQueries: this.matchingIndexQueries(storeName, fieldPredicates, txn),\n                            };\n                        }\n                        else {\n                            result = {\n                                groupType: null,\n                                indexedQueries: [],\n                            };\n                        }\n                        _a.label = 3;\n                    case 3:\n                        if (!!transaction) return [3 /*break*/, 5];\n                        return [4 /*yield*/, txn.done];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.filterOnPredicate = function (storeName, predicates) {\n        return __awaiter(this, void 0, void 0, function () {\n            var predicateObjs, type, _a, groupType, indexedQueries, candidateResults, distinctResults, indexedQueries_1, indexedQueries_1_1, query, resultGroup, resultGroup_1, resultGroup_1_1, item, distinctificationString, e_9_1, filtered;\n            var e_9, _b, e_10, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        predicateObjs = predicates.predicates, type = predicates.type;\n                        return [4 /*yield*/, this.baseQueryIndex(storeName, predicates)];\n                    case 1:\n                        _a = _d.sent(), groupType = _a.groupType, indexedQueries = _a.indexedQueries;\n                        if (!(groupType === 'and' && indexedQueries.length > 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, indexedQueries[0]()];\n                    case 2:\n                        // each condition must be satsified, we can form a base set with any\n                        // ONE of those conditions and then filter.\n                        candidateResults = _d.sent();\n                        return [3 /*break*/, 14];\n                    case 3:\n                        if (!(groupType === 'or' &&\n                            indexedQueries.length > 0 &&\n                            indexedQueries.length <= MULTI_OR_CONDITION_SCAN_BREAKPOINT)) return [3 /*break*/, 12];\n                        distinctResults = new Map();\n                        _d.label = 4;\n                    case 4:\n                        _d.trys.push([4, 9, 10, 11]);\n                        indexedQueries_1 = __values(indexedQueries), indexedQueries_1_1 = indexedQueries_1.next();\n                        _d.label = 5;\n                    case 5:\n                        if (!!indexedQueries_1_1.done) return [3 /*break*/, 8];\n                        query = indexedQueries_1_1.value;\n                        return [4 /*yield*/, query()];\n                    case 6:\n                        resultGroup = _d.sent();\n                        try {\n                            for (resultGroup_1 = (e_10 = void 0, __values(resultGroup)), resultGroup_1_1 = resultGroup_1.next(); !resultGroup_1_1.done; resultGroup_1_1 = resultGroup_1.next()) {\n                                item = resultGroup_1_1.value;\n                                distinctificationString = JSON.stringify(item);\n                                distinctResults.set(distinctificationString, item);\n                            }\n                        }\n                        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                        finally {\n                            try {\n                                if (resultGroup_1_1 && !resultGroup_1_1.done && (_c = resultGroup_1.return)) _c.call(resultGroup_1);\n                            }\n                            finally { if (e_10) throw e_10.error; }\n                        }\n                        _d.label = 7;\n                    case 7:\n                        indexedQueries_1_1 = indexedQueries_1.next();\n                        return [3 /*break*/, 5];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_9_1 = _d.sent();\n                        e_9 = { error: e_9_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (indexedQueries_1_1 && !indexedQueries_1_1.done && (_b = indexedQueries_1.return)) _b.call(indexedQueries_1);\n                        }\n                        finally { if (e_9) throw e_9.error; }\n                        return [7 /*endfinally*/];\n                    case 11:\n                        // we could conceivably check for special conditions and return early here.\n                        // but, this is simpler and has not yet had a measurable performance impact.\n                        candidateResults = Array.from(distinctResults.values());\n                        return [3 /*break*/, 14];\n                    case 12: return [4 /*yield*/, this.getAll(storeName)];\n                    case 13:\n                        // nothing intelligent we can do with `not` groups unless or until we start\n                        // smashing comparison operators against indexes -- at which point we could\n                        // perform some reversal here.\n                        candidateResults = (_d.sent());\n                        _d.label = 14;\n                    case 14:\n                        filtered = predicateObjs\n                            ? candidateResults.filter(function (m) { return validatePredicate(m, type, predicateObjs); })\n                            : candidateResults;\n                        return [2 /*return*/, filtered];\n                }\n            });\n        });\n    };\n    IndexedDBAdapter.prototype.inMemoryPagination = function (records, pagination) {\n        return inMemoryPagination(records, pagination);\n    };\n    IndexedDBAdapter.prototype.enginePagination = function (storeName, pagination) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, _a, page, _b, limit, initialRecord, cursor, pageResults, hasLimit;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!pagination) return [3 /*break*/, 7];\n                        _a = pagination.page, page = _a === void 0 ? 0 : _a, _b = pagination.limit, limit = _b === void 0 ? 0 : _b;\n                        initialRecord = Math.max(0, page * limit) || 0;\n                        return [4 /*yield*/, this.db\n                                .transaction(storeName)\n                                .objectStore(storeName)\n                                .openCursor()];\n                    case 1:\n                        cursor = _c.sent();\n                        if (!(cursor && initialRecord > 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, cursor.advance(initialRecord)];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        pageResults = [];\n                        hasLimit = typeof limit === 'number' && limit > 0;\n                        _c.label = 4;\n                    case 4:\n                        if (!(cursor && cursor.value)) return [3 /*break*/, 6];\n                        pageResults.push(cursor.value);\n                        if (hasLimit && pageResults.length === limit) {\n                            return [3 /*break*/, 6];\n                        }\n                        return [4 /*yield*/, cursor.continue()];\n                    case 5:\n                        cursor = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 6:\n                        result = pageResults;\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, this.db.getAll(storeName)];\n                    case 8:\n                        result = (_c.sent());\n                        _c.label = 9;\n                    case 9: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return IndexedDBAdapter;\n}(StorageAdapterBase));\nexport default new IndexedDBAdapter();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}