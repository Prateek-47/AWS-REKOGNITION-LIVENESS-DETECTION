{"ast":null,"code":"import { Children as $iqq3r$Children, cloneElement as $iqq3r$cloneElement, useState as $iqq3r$useState, useRef as $iqq3r$useRef, useEffect as $iqq3r$useEffect, useCallback as $iqq3r$useCallback, useReducer as $iqq3r$useReducer } from \"react\";\nimport { flushSync as $iqq3r$flushSync } from \"react-dom\";\nimport { useComposedRefs as $iqq3r$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useLayoutEffect as $iqq3r$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\n\nfunction $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {\n  return $iqq3r$useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState !== null && nextState !== void 0 ? nextState : state;\n  }, initialState);\n}\n\nconst $921a889cee6df7e8$export$99c2b779aa4e8b8b = props => {\n  const {\n    present: present,\n    children: children\n  } = props;\n  const presence = $921a889cee6df7e8$var$usePresence(present);\n  const child = typeof children === 'function' ? children({\n    present: presence.isPresent\n  }) : $iqq3r$Children.only(children);\n  const ref = $iqq3r$useComposedRefs(presence.ref, child.ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? /*#__PURE__*/$iqq3r$cloneElement(child, {\n    ref: ref\n  }) : null;\n};\n\n$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = 'Presence';\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction $921a889cee6df7e8$var$usePresence(present) {\n  const [node1, setNode] = $iqq3r$useState();\n  const stylesRef = $iqq3r$useRef({});\n  const prevPresentRef = $iqq3r$useRef(present);\n  const prevAnimationNameRef = $iqq3r$useRef('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended'\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted'\n    },\n    unmounted: {\n      MOUNT: 'mounted'\n    }\n  });\n  $iqq3r$useEffect(() => {\n    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n  $iqq3r$useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);\n      if (present) send('MOUNT');else if (currentAnimationName === 'none' || (styles === null || styles === void 0 ? void 0 : styles.display) === 'none') // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');else {\n        /**\n        * When `present` changes to `false`, we check changes to animation-name to\n        * determine whether an animation has started. We chose this approach (reading\n        * computed styles) because there is no `animationrun` event and `animationstart`\n        * fires after `animation-delay` has expired which would be too late.\n        */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n        if (wasPresent && isAnimating) send('ANIMATION_OUT');else send('UNMOUNT');\n      }\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n  $iqq3r$useLayoutEffect(() => {\n    if (node1) {\n      /**\n      * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n      * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n      * make sure we only trigger ANIMATION_END for the currently active animation.\n      */\n      const handleAnimationEnd = event => {\n        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node1 && isCurrentAnimation) // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          $iqq3r$flushSync(() => send('ANIMATION_END'));\n      };\n\n      const handleAnimationStart = event => {\n        if (event.target === node1) // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n      };\n\n      node1.addEventListener('animationstart', handleAnimationStart);\n      node1.addEventListener('animationcancel', handleAnimationEnd);\n      node1.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node1.removeEventListener('animationstart', handleAnimationStart);\n        node1.removeEventListener('animationcancel', handleAnimationEnd);\n        node1.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n  }, [node1, send]);\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: $iqq3r$useCallback(node => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, [])\n  };\n}\n/* -----------------------------------------------------------------------------------------------*/\n\n\nfunction $921a889cee6df7e8$var$getAnimationName(styles) {\n  return (styles === null || styles === void 0 ? void 0 : styles.animationName) || 'none';\n}\n\nexport { $921a889cee6df7e8$export$99c2b779aa4e8b8b as Presence };","map":{"version":3,"names":["Children","$iqq3r$Children","cloneElement","$iqq3r$cloneElement","useState","$iqq3r$useState","useRef","$iqq3r$useRef","useEffect","$iqq3r$useEffect","useCallback","$iqq3r$useCallback","useReducer","$iqq3r$useReducer","flushSync","$iqq3r$flushSync","useComposedRefs","$iqq3r$useComposedRefs","useLayoutEffect","$iqq3r$useLayoutEffect","$fe963b355347cc68$export$3e6543de14f8614f","initialState","machine","state","event","nextState","$921a889cee6df7e8$export$99c2b779aa4e8b8b","props","present","children","presence","$921a889cee6df7e8$var$usePresence","child","isPresent","only","ref","forceMount","displayName","node1","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","send","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","$921a889cee6df7e8$var$getAnimationName","current","styles","wasPresent","hasPresentChanged","prevAnimationName","display","isAnimating","handleAnimationEnd","isCurrentAnimation","includes","animationName","target","handleAnimationStart","addEventListener","removeEventListener","node","getComputedStyle","Presence"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@radix-ui/react-presence/dist/index.module.js"],"sourcesContent":["import {Children as $iqq3r$Children, cloneElement as $iqq3r$cloneElement, useState as $iqq3r$useState, useRef as $iqq3r$useRef, useEffect as $iqq3r$useEffect, useCallback as $iqq3r$useCallback, useReducer as $iqq3r$useReducer} from \"react\";\nimport {flushSync as $iqq3r$flushSync} from \"react-dom\";\nimport {useComposedRefs as $iqq3r$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {useLayoutEffect as $iqq3r$useLayoutEffect} from \"@radix-ui/react-use-layout-effect\";\n\n\n\n\n\n\nfunction $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {\n    return $iqq3r$useReducer((state, event)=>{\n        const nextState = machine[state][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state;\n    }, initialState);\n}\n\n\nconst $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props)=>{\n    const { present: present , children: children  } = props;\n    const presence = $921a889cee6df7e8$var$usePresence(present);\n    const child = typeof children === 'function' ? children({\n        present: presence.isPresent\n    }) : $iqq3r$Children.only(children);\n    const ref = $iqq3r$useComposedRefs(presence.ref, child.ref);\n    const forceMount = typeof children === 'function';\n    return forceMount || presence.isPresent ? /*#__PURE__*/ $iqq3r$cloneElement(child, {\n        ref: ref\n    }) : null;\n};\n$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = 'Presence';\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$usePresence(present) {\n    const [node1, setNode] = $iqq3r$useState();\n    const stylesRef = $iqq3r$useRef({});\n    const prevPresentRef = $iqq3r$useRef(present);\n    const prevAnimationNameRef = $iqq3r$useRef('none');\n    const initialState = present ? 'mounted' : 'unmounted';\n    const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {\n        mounted: {\n            UNMOUNT: 'unmounted',\n            ANIMATION_OUT: 'unmountSuspended'\n        },\n        unmountSuspended: {\n            MOUNT: 'mounted',\n            ANIMATION_END: 'unmounted'\n        },\n        unmounted: {\n            MOUNT: 'mounted'\n        }\n    });\n    $iqq3r$useEffect(()=>{\n        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n        prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n    }, [\n        state\n    ]);\n    $iqq3r$useLayoutEffect(()=>{\n        const styles = stylesRef.current;\n        const wasPresent = prevPresentRef.current;\n        const hasPresentChanged = wasPresent !== present;\n        if (hasPresentChanged) {\n            const prevAnimationName = prevAnimationNameRef.current;\n            const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);\n            if (present) send('MOUNT');\n            else if (currentAnimationName === 'none' || (styles === null || styles === void 0 ? void 0 : styles.display) === 'none') // If there is no exit animation or the element is hidden, animations won't run\n            // so we unmount instantly\n            send('UNMOUNT');\n            else {\n                /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */ const isAnimating = prevAnimationName !== currentAnimationName;\n                if (wasPresent && isAnimating) send('ANIMATION_OUT');\n                else send('UNMOUNT');\n            }\n            prevPresentRef.current = present;\n        }\n    }, [\n        present,\n        send\n    ]);\n    $iqq3r$useLayoutEffect(()=>{\n        if (node1) {\n            /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */ const handleAnimationEnd = (event)=>{\n                const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                if (event.target === node1 && isCurrentAnimation) // With React 18 concurrency this update is applied\n                // a frame after the animation ends, creating a flash of visible content.\n                // By manually flushing we ensure they sync within a frame, removing the flash.\n                $iqq3r$flushSync(()=>send('ANIMATION_END')\n                );\n            };\n            const handleAnimationStart = (event)=>{\n                if (event.target === node1) // if animation occurred, store its name as the previous animation.\n                prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n            };\n            node1.addEventListener('animationstart', handleAnimationStart);\n            node1.addEventListener('animationcancel', handleAnimationEnd);\n            node1.addEventListener('animationend', handleAnimationEnd);\n            return ()=>{\n                node1.removeEventListener('animationstart', handleAnimationStart);\n                node1.removeEventListener('animationcancel', handleAnimationEnd);\n                node1.removeEventListener('animationend', handleAnimationEnd);\n            };\n        } else // Transition to the unmounted state if the node is removed prematurely.\n        // We avoid doing so during cleanup as the node may change but still exist.\n        send('ANIMATION_END');\n    }, [\n        node1,\n        send\n    ]);\n    return {\n        isPresent: [\n            'mounted',\n            'unmountSuspended'\n        ].includes(state),\n        ref: $iqq3r$useCallback((node)=>{\n            if (node) stylesRef.current = getComputedStyle(node);\n            setNode(node);\n        }, [])\n    };\n}\n/* -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || 'none';\n}\n\n\n\n\nexport {$921a889cee6df7e8$export$99c2b779aa4e8b8b as Presence};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}