{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ListLexiconsInput, ListLexiconsOutput } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListLexiconsCommand, serializeAws_restJson1ListLexiconsCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns a list of pronunciation lexicons stored in an AWS Region. For more information,\n *       see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing\n *         Lexicons</a>.</p>\n */\n\nvar ListLexiconsCommand =\n/** @class */\nfunction (_super) {\n  __extends(ListLexiconsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function ListLexiconsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  ListLexiconsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PollyClient\";\n    var commandName = \"ListLexiconsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListLexiconsInput.filterSensitiveLog,\n      outputFilterSensitiveLog: ListLexiconsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListLexiconsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1ListLexiconsCommand(input, context);\n  };\n\n  ListLexiconsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1ListLexiconsCommand(output, context);\n  };\n\n  return ListLexiconsCommand;\n}($Command);\n\nexport { ListLexiconsCommand };","map":{"version":3,"names":["__extends","ListLexiconsInput","ListLexiconsOutput","deserializeAws_restJson1ListLexiconsCommand","serializeAws_restJson1ListLexiconsCommand","getSerdePlugin","Command","$Command","ListLexiconsCommand","_super","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-polly/dist/es/commands/ListLexiconsCommand.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { ListLexiconsInput, ListLexiconsOutput } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListLexiconsCommand, serializeAws_restJson1ListLexiconsCommand, } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns a list of pronunciation lexicons stored in an AWS Region. For more information,\n *       see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing\n *         Lexicons</a>.</p>\n */\nvar ListLexiconsCommand = /** @class */ (function (_super) {\n    __extends(ListLexiconsCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function ListLexiconsCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    ListLexiconsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"PollyClient\";\n        var commandName = \"ListLexiconsCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: ListLexiconsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: ListLexiconsOutput.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    ListLexiconsCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1ListLexiconsCommand(input, context);\n    };\n    ListLexiconsCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1ListLexiconsCommand(output, context);\n    };\n    return ListLexiconsCommand;\n}($Command));\nexport { ListLexiconsCommand };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,oBAAtD;AACA,SAASC,2CAAT,EAAsDC,yCAAtD,QAAwG,4BAAxG;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACvDT,SAAS,CAACQ,mBAAD,EAAsBC,MAAtB,CAAT,CADuD,CAEvD;EACA;;;EACA,SAASD,mBAAT,CAA6BE,KAA7B,EAAoC;IAChC,IAAIC,KAAK,GACT;IACAF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACD,KAAN,GAAcA,KAAd;IACA,OAAOC,KAAP,CALgC,CAMhC;EACH;EACD;AACJ;AACA;;;EACIH,mBAAmB,CAACK,SAApB,CAA8BC,iBAA9B,GAAkD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;IAC7F,KAAKC,eAAL,CAAqBC,GAArB,CAAyBd,cAAc,CAACW,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,IAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;IACA,IAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;IACA,IAAIC,UAAU,GAAG,aAAjB;IACA,IAAIC,WAAW,GAAG,qBAAlB;IACA,IAAIC,uBAAuB,GAAG;MAC1BH,MAAM,EAAEA,MADkB;MAE1BC,UAAU,EAAEA,UAFc;MAG1BC,WAAW,EAAEA,WAHa;MAI1BE,uBAAuB,EAAE3B,iBAAiB,CAAC4B,kBAJjB;MAK1BC,wBAAwB,EAAE5B,kBAAkB,CAAC2B;IALnB,CAA9B;IAOA,IAAIE,cAAc,GAAGf,aAAa,CAACe,cAAnC;IACA,OAAOT,KAAK,CAACU,OAAN,CAAc,UAAUC,OAAV,EAAmB;MACpC,OAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuChB,OAAO,IAAI,EAAlD,CAAP;IACH,CAFM,EAEJU,uBAFI,CAAP;EAGH,CAjBD;;EAkBAnB,mBAAmB,CAACK,SAApB,CAA8BO,SAA9B,GAA0C,UAAUV,KAAV,EAAiByB,OAAjB,EAA0B;IAChE,OAAO/B,yCAAyC,CAACM,KAAD,EAAQyB,OAAR,CAAhD;EACH,CAFD;;EAGA3B,mBAAmB,CAACK,SAApB,CAA8BQ,WAA9B,GAA4C,UAAUe,MAAV,EAAkBD,OAAlB,EAA2B;IACnE,OAAOhC,2CAA2C,CAACiC,MAAD,EAASD,OAAT,CAAlD;EACH,CAFD;;EAGA,OAAO3B,mBAAP;AACH,CAxCwC,CAwCvCD,QAxCuC,CAAzC;;AAyCA,SAASC,mBAAT"},"metadata":{},"sourceType":"module"}