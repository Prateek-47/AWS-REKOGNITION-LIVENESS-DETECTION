{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom, hasCustomState } from './types';\nimport { Amplify, ConsoleLogger as Logger, Credentials, Hub, StorageHelper, Platform, browserOrNode, parseAWSExports, UniversalStorage, urlSafeDecode } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken } from 'amazon-cognito-identity-js';\nimport { addAuthCategoryToCognitoUserAgent, addFrameworkToCognitoUserAgent } from 'amazon-cognito-identity-js/internals';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes, CognitoHostedUIIdentityProvider } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin'; // 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\n\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAuthEvent = function (event, data, message) {\n  Hub.dispatch('auth', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Auth', AMPLIFY_SYMBOL);\n}; // Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\n\n\nvar MAX_DEVICES = 60;\nvar MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n/**\n * Provide authentication steps\n */\n\nvar AuthClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Auth with AWS configurations\n   * @param {Object} config - Configuration of the Auth\n   */\n  function AuthClass(config) {\n    var _this = this;\n\n    this.userPool = null;\n    this.user = null;\n    this.oAuthFlowInProgress = false;\n    this.autoSignInInitiated = false;\n    this.inflightSessionPromise = null;\n    this.inflightSessionPromiseCounter = 0;\n    this.Credentials = Credentials;\n\n    this.wrapRefreshSessionCallback = function (callback) {\n      var wrapped = function (error, data) {\n        if (data) {\n          dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n        } else {\n          dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n        }\n\n        return callback(error, data);\n      };\n\n      return wrapped;\n    }; // prettier-ignore\n\n\n    this.configure(config);\n    this.currentCredentials = this.currentCredentials.bind(this);\n    this.currentUserCredentials = this.currentUserCredentials.bind(this);\n    Hub.listen('auth', function (_a) {\n      var payload = _a.payload;\n      var event = payload.event;\n\n      switch (event) {\n        case 'verify':\n        case 'signIn':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\n          break;\n\n        case 'signOut':\n          _this._storage.removeItem('amplify-signin-with-hostedUI');\n\n          break;\n\n        case 'cognitoHostedUI':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\n          break;\n      }\n    });\n    addAuthCategoryToCognitoUserAgent();\n    addFrameworkToCognitoUserAgent(Platform.framework);\n    Platform.observeFrameworkChanges(function () {\n      addFrameworkToCognitoUserAgent(Platform.framework);\n    });\n  }\n\n  AuthClass.prototype.getModuleName = function () {\n    return 'Auth';\n  };\n\n  AuthClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config || {};\n    logger.debug('configure Auth');\n    var conf = Object.assign({}, this._config, parseAWSExports(config).Auth, config);\n    this._config = conf;\n    var _a = this._config,\n        userPoolId = _a.userPoolId,\n        userPoolWebClientId = _a.userPoolWebClientId,\n        cookieStorage = _a.cookieStorage,\n        oauth = _a.oauth,\n        region = _a.region,\n        identityPoolId = _a.identityPoolId,\n        mandatorySignIn = _a.mandatorySignIn,\n        refreshHandlers = _a.refreshHandlers,\n        identityPoolRegion = _a.identityPoolRegion,\n        clientMetadata = _a.clientMetadata,\n        endpoint = _a.endpoint,\n        storage = _a.storage;\n\n    if (!storage) {\n      // backward compatability\n      if (cookieStorage) this._storage = new CookieStorage(cookieStorage);else {\n        this._storage = config.ssr ? new UniversalStorage() : new StorageHelper().getStorage();\n      }\n    } else {\n      if (!this._isValidAuthStorage(storage)) {\n        logger.error('The storage in the Auth config is not valid!');\n        throw new Error('Empty storage object');\n      }\n\n      this._storage = storage;\n    }\n\n    this._storageSync = Promise.resolve();\n\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n\n    if (userPoolId) {\n      var userPoolData = {\n        UserPoolId: userPoolId,\n        ClientId: userPoolWebClientId,\n        endpoint: endpoint\n      };\n      userPoolData.Storage = this._storage;\n      this.userPool = new CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n    }\n\n    this.Credentials.configure({\n      mandatorySignIn: mandatorySignIn,\n      region: region,\n      userPoolId: userPoolId,\n      identityPoolId: identityPoolId,\n      refreshHandlers: refreshHandlers,\n      storage: this._storage,\n      identityPoolRegion: identityPoolRegion\n    }); // initialize cognitoauth client if hosted ui options provided\n    // to keep backward compatibility:\n\n    var cognitoHostedUIConfig = oauth ? isCognitoHostedOpts(this._config.oauth) ? oauth : oauth.awsCognito : undefined;\n\n    if (cognitoHostedUIConfig) {\n      var cognitoAuthParams = Object.assign({\n        cognitoClientId: userPoolWebClientId,\n        UserPoolId: userPoolId,\n        domain: cognitoHostedUIConfig['domain'],\n        scopes: cognitoHostedUIConfig['scope'],\n        redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n        redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n        responseType: cognitoHostedUIConfig['responseType'],\n        Storage: this._storage,\n        urlOpener: cognitoHostedUIConfig['urlOpener'],\n        clientMetadata: clientMetadata\n      }, cognitoHostedUIConfig['options']);\n      this._oAuthHandler = new OAuth({\n        scopes: cognitoAuthParams.scopes,\n        config: cognitoAuthParams,\n        cognitoClientId: cognitoAuthParams.cognitoClientId\n      }); // **NOTE** - Remove this in a future major release as it is a breaking change\n      // Prevents _handleAuthResponse from being called multiple times in Expo\n      // See https://github.com/aws-amplify/amplify-js/issues/4388\n\n      var usedResponseUrls_1 = {};\n      urlListener(function (_a) {\n        var url = _a.url;\n\n        if (usedResponseUrls_1[url]) {\n          return;\n        }\n\n        usedResponseUrls_1[url] = true;\n\n        _this._handleAuthResponse(url);\n      });\n    }\n\n    dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n\n    if (!this.autoSignInInitiated && typeof this._storage['getItem'] === 'function') {\n      var pollingInitiated = this.isTrueStorageValue('amplify-polling-started');\n\n      if (pollingInitiated) {\n        dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n\n        this._storage.removeItem('amplify-auto-sign-in');\n      }\n\n      this._storage.removeItem('amplify-polling-started');\n    }\n\n    return this._config;\n  };\n  /**\n   * Sign up with username, password and other attributes like phone, email\n   * @param {String | object} params - The user attributes used for signin\n   * @param {String[]} restOfAttrs - for the backward compatability\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.signUp = function (params) {\n    var _this = this;\n\n    var restOfAttrs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      restOfAttrs[_i - 1] = arguments[_i];\n    }\n\n    var _a, _b, _c;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var attributes = [];\n    var validationData = null;\n    var clientMetadata;\n    var autoSignIn = {\n      enabled: false\n    };\n    var autoSignInValidationData = {};\n    var autoSignInClientMetaData = {};\n\n    if (params && typeof params === 'string') {\n      username = params;\n      password = restOfAttrs ? restOfAttrs[0] : null;\n      var email = restOfAttrs ? restOfAttrs[1] : null;\n      var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n      if (email) attributes.push(new CognitoUserAttribute({\n        Name: 'email',\n        Value: email\n      }));\n      if (phone_number) attributes.push(new CognitoUserAttribute({\n        Name: 'phone_number',\n        Value: phone_number\n      }));\n    } else if (params && typeof params === 'object') {\n      username = params['username'];\n      password = params['password'];\n\n      if (params && params.clientMetadata) {\n        clientMetadata = params.clientMetadata;\n      } else if (this._config.clientMetadata) {\n        clientMetadata = this._config.clientMetadata;\n      }\n\n      var attrs_1 = params['attributes'];\n\n      if (attrs_1) {\n        Object.keys(attrs_1).map(function (key) {\n          attributes.push(new CognitoUserAttribute({\n            Name: key,\n            Value: attrs_1[key]\n          }));\n        });\n      }\n\n      var validationDataObject_1 = params['validationData'];\n\n      if (validationDataObject_1) {\n        validationData = [];\n        Object.keys(validationDataObject_1).map(function (key) {\n          validationData.push(new CognitoUserAttribute({\n            Name: key,\n            Value: validationDataObject_1[key]\n          }));\n        });\n      }\n\n      autoSignIn = (_a = params.autoSignIn) !== null && _a !== void 0 ? _a : {\n        enabled: false\n      };\n\n      if (autoSignIn.enabled) {\n        this._storage.setItem('amplify-auto-sign-in', 'true');\n\n        autoSignInValidationData = (_b = autoSignIn.validationData) !== null && _b !== void 0 ? _b : {};\n        autoSignInClientMetaData = (_c = autoSignIn.clientMetaData) !== null && _c !== void 0 ? _c : {};\n      }\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.SignUpError);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    logger.debug('signUp attrs:', attributes);\n    logger.debug('signUp validation data:', validationData);\n    return new Promise(function (resolve, reject) {\n      _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n        if (err) {\n          dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n          reject(err);\n        } else {\n          dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n\n          if (autoSignIn.enabled) {\n            _this.handleAutoSignIn(username, password, autoSignInValidationData, autoSignInClientMetaData, data);\n          }\n\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.handleAutoSignIn = function (username, password, validationData, clientMetadata, data) {\n    this.autoSignInInitiated = true;\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (data.userConfirmed) {\n      this.signInAfterUserConfirmed(authDetails);\n    } else if (this._config.signUpVerificationMethod === 'link') {\n      this.handleLinkAutoSignIn(authDetails);\n    } else {\n      this.handleCodeAutoSignIn(authDetails);\n    }\n  };\n\n  AuthClass.prototype.handleCodeAutoSignIn = function (authDetails) {\n    var _this = this;\n\n    var listenEvent = function (_a) {\n      var payload = _a.payload;\n\n      if (payload.event === 'confirmSignUp') {\n        _this.signInAfterUserConfirmed(authDetails, listenEvent);\n      }\n    };\n\n    Hub.listen('auth', listenEvent);\n  };\n\n  AuthClass.prototype.handleLinkAutoSignIn = function (authDetails) {\n    var _this = this;\n\n    this._storage.setItem('amplify-polling-started', 'true');\n\n    var start = Date.now();\n    var autoSignInPollingIntervalId = setInterval(function () {\n      if (Date.now() - start > MAX_AUTOSIGNIN_POLLING_MS) {\n        clearInterval(autoSignInPollingIntervalId);\n        dispatchAuthEvent('autoSignIn_failure', null, 'Please confirm your account and use your credentials to sign in.');\n\n        _this._storage.removeItem('amplify-auto-sign-in');\n      } else {\n        _this.signInAfterUserConfirmed(authDetails, null, autoSignInPollingIntervalId);\n      }\n    }, 5000);\n  };\n\n  AuthClass.prototype.signInAfterUserConfirmed = function (authDetails, listenEvent, autoSignInPollingIntervalId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            user = this.createCognitoUser(authDetails.getUsername());\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , user.authenticateUser(authDetails, this.authCallbacks(user, function (value) {\n              dispatchAuthEvent('autoSignIn', value, authDetails.getUsername() + \" has signed in successfully\");\n\n              if (listenEvent) {\n                Hub.remove('auth', listenEvent);\n              }\n\n              if (autoSignInPollingIntervalId) {\n                clearInterval(autoSignInPollingIntervalId);\n\n                _this._storage.removeItem('amplify-polling-started');\n              }\n\n              _this._storage.removeItem('amplify-auto-sign-in');\n            }, function (error) {\n              logger.error(error);\n\n              _this._storage.removeItem('amplify-auto-sign-in');\n            }))];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            logger.error(error_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Send the verification code to confirm sign up\n   * @param {String} username - The username to be confirmed\n   * @param {String} code - The verification code\n   * @param {ConfirmSignUpOptions} options - other options for confirm signup\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.confirmSignUp = function (username, code, options) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var user = this.createCognitoUser(username);\n    var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean' ? options.forceAliasCreation : true;\n    var clientMetadata;\n\n    if (options && options.clientMetadata) {\n      clientMetadata = options.clientMetadata;\n    } else if (this._config.clientMetadata) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          dispatchAuthEvent('confirmSignUp', data, username + \" has been confirmed successfully\");\n\n          var autoSignIn = _this.isTrueStorageValue('amplify-auto-sign-in');\n\n          if (autoSignIn && !_this.autoSignInInitiated) {\n            dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n\n            _this._storage.removeItem('amplify-auto-sign-in');\n          }\n\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.isTrueStorageValue = function (value) {\n    var item = this._storage.getItem(value);\n\n    return item ? item === 'true' : false;\n  };\n  /**\n   * Resend the verification code\n   * @param {String} username - The username to be confirmed\n   * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n   * @return - A promise resolves code delivery details if successful\n   */\n\n\n  AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.resendConfirmationCode(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Sign in\n   * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n   * @param {String} pw - The password of the username\n   * @param {ClientMetaData} clientMetadata - Client metadata for custom workflows\n   * @return - A promise resolves the CognitoUser\n   */\n\n\n  AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var validationData = {}; // for backward compatibility\n\n    if (typeof usernameOrSignInOpts === 'string') {\n      username = usernameOrSignInOpts;\n      password = pw;\n    } else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n      if (typeof pw !== 'undefined') {\n        logger.warn('The password should be defined under the first parameter object!');\n      }\n\n      username = usernameOrSignInOpts.username;\n      password = usernameOrSignInOpts.password;\n      validationData = usernameOrSignInOpts.validationData;\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (password) {\n      return this.signInWithPassword(authDetails);\n    } else {\n      return this.signInWithoutPassword(authDetails);\n    }\n  };\n  /**\n   * Return an object with the authentication callbacks\n   * @param {CognitoUser} user - the cognito user object\n   * @param {} resolve - function called when resolving the current step\n   * @param {} reject - function called when rejecting the current step\n   * @return - an object with the callback methods for user authentication\n   */\n\n\n  AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n    var _this = this;\n\n    var that = this;\n    return {\n      onSuccess: function (session) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cred, e_1, currentUser, e_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug(session);\n                delete user['challengeName'];\n                delete user['challengeParam'];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 4, 5, 9]);\n\n                return [4\n                /*yield*/\n                , this.Credentials.clear()];\n\n              case 2:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , this.Credentials.set(session, 'session')];\n\n              case 3:\n                cred = _a.sent();\n                logger.debug('succeed to get cognito credentials', cred);\n                return [3\n                /*break*/\n                , 9];\n\n              case 4:\n                e_1 = _a.sent();\n                logger.debug('cannot get cognito credentials', e_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 5:\n                _a.trys.push([5, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , this.currentUserPoolUser()];\n\n              case 6:\n                currentUser = _a.sent();\n                that.user = currentUser;\n                dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                resolve(currentUser);\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                e_2 = _a.sent();\n                logger.error('Failed to get the signed in user', e_2);\n                reject(e_2);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [7\n                /*endfinally*/\n                ];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      },\n      onFailure: function (err) {\n        logger.debug('signIn failure', err);\n        dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n        reject(err);\n      },\n      customChallenge: function (challengeParam) {\n        logger.debug('signIn custom challenge answer required');\n        user['challengeName'] = 'CUSTOM_CHALLENGE';\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn MFA required');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaSetup: function (challengeName, challengeParam) {\n        logger.debug('signIn mfa setup', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      newPasswordRequired: function (userAttributes, requiredAttributes) {\n        logger.debug('signIn new password');\n        user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n        user['challengeParam'] = {\n          userAttributes: userAttributes,\n          requiredAttributes: requiredAttributes\n        };\n        resolve(user);\n      },\n      totpRequired: function (challengeName, challengeParam) {\n        logger.debug('signIn totpRequired');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      selectMFAType: function (challengeName, challengeParam) {\n        logger.debug('signIn selectMFAType', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      }\n    };\n  };\n  /**\n   * Sign in with a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithPassword = function (authDetails) {\n    var _this = this;\n\n    if (this.pendingSignIn) {\n      throw new Error('Pending sign-in attempt already in progress');\n    }\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    this.pendingSignIn = new Promise(function (resolve, reject) {\n      user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n        _this.pendingSignIn = null;\n        resolve(value);\n      }, function (error) {\n        _this.pendingSignIn = null;\n        reject(error);\n      }));\n    });\n    return this.pendingSignIn;\n  };\n  /**\n   * Sign in without a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n    var _this = this;\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    user.setAuthenticationFlowType('CUSTOM_AUTH');\n    return new Promise(function (resolve, reject) {\n      user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n    });\n  };\n  /**\n   * This was previously used by an authenticated user to get MFAOptions,\n   * but no longer returns a meaningful response. Refer to the documentation for\n   * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves the current preferred mfa option if success\n   */\n\n\n  AuthClass.prototype.getMFAOptions = function (user) {\n    return new Promise(function (res, rej) {\n      user.getMFAOptions(function (err, mfaOptions) {\n        if (err) {\n          logger.debug('get MFA Options failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('get MFA options success', mfaOptions);\n        res(mfaOptions);\n        return;\n      });\n    });\n  };\n  /**\n   * get preferred mfa method\n   * @param {CognitoUser} user - the current cognito user\n   * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n   */\n\n\n  AuthClass.prototype.getPreferredMFA = function (user, params) {\n    var _this = this;\n\n    var that = this;\n    return new Promise(function (res, rej) {\n      var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n      var bypassCache = params ? params.bypassCache : false;\n      user.getUserData(function (err, data) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cleanUpError_1, mfaType;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!err) return [3\n                /*break*/\n                , 5];\n                logger.debug('getting preferred mfa failed', err);\n                if (!this.isSessionInvalid(err)) return [3\n                /*break*/\n                , 4];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.cleanUpInvalidSession(user)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                cleanUpError_1 = _a.sent();\n                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_1.message));\n                return [2\n                /*return*/\n                ];\n\n              case 4:\n                rej(err);\n                return [2\n                /*return*/\n                ];\n\n              case 5:\n                mfaType = that._getMfaTypeFromUserData(data);\n\n                if (!mfaType) {\n                  rej('invalid MFA Type');\n                  return [2\n                  /*return*/\n                  ];\n                } else {\n                  res(mfaType);\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, {\n        bypassCache: bypassCache,\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n\n  AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n    var ret = null;\n    var preferredMFA = data.PreferredMfaSetting; // if the user has used Auth.setPreferredMFA() to setup the mfa type\n    // then the \"PreferredMfaSetting\" would exist in the response\n\n    if (preferredMFA) {\n      ret = preferredMFA;\n    } else {\n      // if mfaList exists but empty, then its noMFA\n      var mfaList = data.UserMFASettingList;\n\n      if (!mfaList) {\n        // if SMS was enabled by using Auth.enableSMS(),\n        // the response would contain MFAOptions\n        // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n        // if it does not exist, then it should be NOMFA\n        var MFAOptions = data.MFAOptions;\n\n        if (MFAOptions) {\n          ret = 'SMS_MFA';\n        } else {\n          ret = 'NOMFA';\n        }\n      } else if (mfaList.length === 0) {\n        ret = 'NOMFA';\n      } else {\n        logger.debug('invalid case for getPreferredMFA', data);\n      }\n    }\n\n    return ret;\n  };\n\n  AuthClass.prototype._getUserData = function (user, params) {\n    var _this = this;\n\n    return new Promise(function (res, rej) {\n      user.getUserData(function (err, data) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cleanUpError_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!err) return [3\n                /*break*/\n                , 5];\n                logger.debug('getting user data failed', err);\n                if (!this.isSessionInvalid(err)) return [3\n                /*break*/\n                , 4];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , this.cleanUpInvalidSession(user)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                cleanUpError_2 = _a.sent();\n                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_2.message));\n                return [2\n                /*return*/\n                ];\n\n              case 4:\n                rej(err);\n                return [2\n                /*return*/\n                ];\n\n              case 5:\n                res(data);\n                _a.label = 6;\n\n              case 6:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }, params);\n    });\n  };\n  /**\n   * set preferred MFA method\n   * @param {CognitoUser} user - the current Cognito user\n   * @param {string} mfaMethod - preferred mfa method\n   * @return - A promise resolve if success\n   */\n\n\n  AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            clientMetadata = this._config.clientMetadata;\n            return [4\n            /*yield*/\n            , this._getUserData(user, {\n              bypassCache: true,\n              clientMetadata: clientMetadata\n            })];\n\n          case 1:\n            userData = _b.sent();\n            smsMfaSettings = null;\n            totpMfaSettings = null;\n            _a = mfaMethod;\n\n            switch (_a) {\n              case 'TOTP':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SOFTWARE_TOKEN_MFA':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SMS':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'SMS_MFA':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'NOMFA':\n                return [3\n                /*break*/\n                , 4];\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 2:\n            totpMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 3:\n            smsMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 4:\n            mfaList = userData['UserMFASettingList'];\n            return [4\n            /*yield*/\n            , this._getMfaTypeFromUserData(userData)];\n\n          case 5:\n            currentMFAType = _b.sent();\n\n            if (currentMFAType === 'NOMFA') {\n              return [2\n              /*return*/\n              , Promise.resolve('No change for mfa type')];\n            } else if (currentMFAType === 'SMS_MFA') {\n              smsMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n              totpMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else {\n              return [2\n              /*return*/\n              , this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n            } // if there is a UserMFASettingList in the response\n            // we need to disable every mfa type in that list\n\n\n            if (mfaList && mfaList.length !== 0) {\n              // to disable SMS or TOTP if exists in that list\n              mfaList.forEach(function (mfaType) {\n                if (mfaType === 'SMS_MFA') {\n                  smsMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                } else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                  totpMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                }\n              });\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            logger.debug('no validmfa method provided');\n            return [2\n            /*return*/\n            , this.rejectAuthError(AuthErrorTypes.NoMFA)];\n\n          case 7:\n            that = this;\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                if (err) {\n                  logger.debug('Set user mfa preference error', err);\n                  return rej(err);\n                }\n\n                logger.debug('Set user mfa success', result);\n                logger.debug('Caching the latest user data into local'); // cache the latest result into user data\n\n                user.getUserData(function (err, data) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_3;\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('getting user data failed', err);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _a.label = 1;\n\n                        case 1:\n                          _a.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _a.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_3 = _a.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_3.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          return [2\n                          /*return*/\n                          , rej(err)];\n\n                        case 5:\n                          return [2\n                          /*return*/\n                          , res(result)];\n                      }\n                    });\n                  });\n                }, {\n                  bypassCache: true,\n                  clientMetadata: clientMetadata\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * disable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.disableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.disableMFA(function (err, data) {\n        if (err) {\n          logger.debug('disable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('disable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * enable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.enableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.enableMFA(function (err, data) {\n        if (err) {\n          logger.debug('enable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('enable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * Setup TOTP\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves with the secret code if success\n   */\n\n\n  AuthClass.prototype.setupTOTP = function (user) {\n    return new Promise(function (res, rej) {\n      user.associateSoftwareToken({\n        onFailure: function (err) {\n          logger.debug('associateSoftwareToken failed', err);\n          rej(err);\n          return;\n        },\n        associateSecretCode: function (secretCode) {\n          logger.debug('associateSoftwareToken success', secretCode);\n          res(secretCode);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * verify TOTP setup\n   * @param {CognitoUser} user - the current user\n   * @param {string} challengeAnswer - challenge answer\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n    logger.debug('verification totp token', user, challengeAnswer);\n    var signInUserSession;\n\n    if (user && typeof user.getSignInUserSession === 'function') {\n      signInUserSession = user.getSignInUserSession();\n    }\n\n    var isLoggedIn = signInUserSession === null || signInUserSession === void 0 ? void 0 : signInUserSession.isValid();\n    return new Promise(function (res, rej) {\n      user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n        onFailure: function (err) {\n          logger.debug('verifyTotpToken failed', err);\n          rej(err);\n          return;\n        },\n        onSuccess: function (data) {\n          if (!isLoggedIn) {\n            dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n          }\n\n          dispatchAuthEvent('verify', user, \"A user \" + user.getUsername() + \" has been verified\");\n          logger.debug('verifyTotpToken success', data);\n          res(data);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * Send MFA code to confirm sign in\n   * @param {Object} user - The CognitoUser object\n   * @param {String} code - The confirmation code\n   */\n\n\n  AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendMFACode(code, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_3, currentUser, e_4;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 10]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 10];\n\n                case 4:\n                  e_3 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_3);\n                  return [3\n                  /*break*/\n                  , 10];\n\n                case 5:\n                  that.user = user;\n                  _a.label = 6;\n\n                case 6:\n                  _a.trys.push([6, 8,, 9]);\n\n                  return [4\n                  /*yield*/\n                  , this.currentUserPoolUser()];\n\n                case 7:\n                  currentUser = _a.sent();\n                  user.attributes = currentUser.attributes;\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 8:\n                  e_4 = _a.sent();\n                  logger.debug('cannot get updated Cognito User', e_4);\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 9:\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 10:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('confirm signIn failure', err);\n          reject(err);\n        }\n      }, mfaType, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n    var _this = this;\n\n    if (requiredAttributes === void 0) {\n      requiredAttributes = {};\n    }\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.completeNewPasswordChallenge(password, requiredAttributes, {\n        onSuccess: function (session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_5;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_5 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_5);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function (err) {\n          logger.debug('completeNewPassword failure', err);\n          dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n          reject(err);\n        },\n        mfaRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn MFA required');\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        mfaSetup: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        totpRequired: function (challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the answer to a custom challenge\n   * @param {CognitoUser} user - The CognitoUser object\n   * @param {String} challengeResponses - The confirmation code\n   */\n\n\n  AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!challengeResponses) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n    });\n  };\n  /**\n   * Delete an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        user.deleteAttributes(attributeNames, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Delete the current authenticated user\n   * @return {Promise}\n   **/\n  // TODO: Check return type void\n\n\n  AuthClass.prototype.deleteUser = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_6, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_6 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_6);\n            throw new Error(e_6);\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var user_1;\n\n                var _this = this;\n\n                return __generator(this, function (_a) {\n                  if (this.userPool) {\n                    user_1 = this.userPool.getCurrentUser();\n\n                    if (!user_1) {\n                      logger.debug('Failed to get user from user pool');\n                      return [2\n                      /*return*/\n                      , rej(new Error('No current user.'))];\n                    } else {\n                      user_1.getSession(function (err, session) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var cleanUpError_4;\n\n                          var _this = this;\n\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                if (!err) return [3\n                                /*break*/\n                                , 5];\n                                logger.debug('Failed to get the user session', err);\n                                if (!this.isSessionInvalid(err)) return [3\n                                /*break*/\n                                , 4];\n                                _a.label = 1;\n\n                              case 1:\n                                _a.trys.push([1, 3,, 4]);\n\n                                return [4\n                                /*yield*/\n                                , this.cleanUpInvalidSession(user_1)];\n\n                              case 2:\n                                _a.sent();\n\n                                return [3\n                                /*break*/\n                                , 4];\n\n                              case 3:\n                                cleanUpError_4 = _a.sent();\n                                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_4.message));\n                                return [2\n                                /*return*/\n                                ];\n\n                              case 4:\n                                return [2\n                                /*return*/\n                                , rej(err)];\n\n                              case 5:\n                                user_1.deleteUser(function (err, result) {\n                                  if (err) {\n                                    rej(err);\n                                  } else {\n                                    dispatchAuthEvent('userDeleted', result, 'The authenticated user has been deleted.');\n                                    user_1.signOut();\n                                    _this.user = null;\n\n                                    try {\n                                      _this.cleanCachedItems(); // clean aws credentials\n\n                                    } catch (e) {\n                                      // TODO: change to rejects in refactor\n                                      logger.debug('failed to clear cached items');\n                                    }\n\n                                    if (isSignedInHostedUI) {\n                                      _this.oAuthSignOutRedirect(res, rej);\n                                    } else {\n                                      dispatchAuthEvent('signOut', _this.user, \"A user has been signed out\");\n                                      res(result);\n                                    }\n                                  }\n                                });\n                                _a.label = 6;\n\n                              case 6:\n                                return [2\n                                /*return*/\n                                ];\n                            }\n                          });\n                        });\n                      });\n                    }\n                  } else {\n                    logger.debug('no Congito User pool');\n                    rej(new Error('Cognito User pool does not exist'));\n                  }\n\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Update an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    var attributeList = [];\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        for (var key in attributes) {\n          if (key !== 'sub' && key.indexOf('_verified') < 0) {\n            var attr = {\n              Name: key,\n              Value: attributes[key]\n            };\n            attributeList.push(attr);\n          }\n        }\n\n        user.updateAttributes(attributeList, function (err, result, details) {\n          if (err) {\n            dispatchAuthEvent('updateUserAttributes_failure', err, 'Failed to update attributes');\n            return reject(err);\n          } else {\n            var attrs = _this.createUpdateAttributesResultList(attributes, details === null || details === void 0 ? void 0 : details.CodeDeliveryDetailsList);\n\n            dispatchAuthEvent('updateUserAttributes', attrs, 'Attributes successfully updated');\n            return resolve(result);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n\n  AuthClass.prototype.createUpdateAttributesResultList = function (attributes, codeDeliveryDetailsList) {\n    var attrs = {};\n    Object.keys(attributes).forEach(function (key) {\n      attrs[key] = {\n        isUpdated: true\n      };\n      var codeDeliveryDetails = codeDeliveryDetailsList === null || codeDeliveryDetailsList === void 0 ? void 0 : codeDeliveryDetailsList.find(function (value) {\n        return value.AttributeName === key;\n      });\n\n      if (codeDeliveryDetails) {\n        attrs[key].isUpdated = false;\n        attrs[key].codeDeliveryDetails = codeDeliveryDetails;\n      }\n    });\n    return attrs;\n  };\n  /**\n   * Return user attributes\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to user attributes if success\n   */\n\n\n  AuthClass.prototype.userAttributes = function (user) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.getUserAttributes(function (err, attributes) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(attributes);\n          }\n        });\n      });\n    });\n  };\n\n  AuthClass.prototype.verifiedContact = function (user) {\n    var that = this;\n    return this.userAttributes(user).then(function (attributes) {\n      var attrs = that.attributesToObject(attributes);\n      var unverified = {};\n      var verified = {};\n\n      if (attrs['email']) {\n        if (attrs['email_verified']) {\n          verified['email'] = attrs['email'];\n        } else {\n          unverified['email'] = attrs['email'];\n        }\n      }\n\n      if (attrs['phone_number']) {\n        if (attrs['phone_number_verified']) {\n          verified['phone_number'] = attrs['phone_number'];\n        } else {\n          unverified['phone_number'] = attrs['phone_number'];\n        }\n      }\n\n      return {\n        verified: verified,\n        unverified: unverified\n      };\n    });\n  };\n\n  AuthClass.prototype.isErrorWithMessage = function (err) {\n    return typeof err === 'object' && Object.prototype.hasOwnProperty.call(err, 'message');\n  }; // Session revoked by another app\n\n\n  AuthClass.prototype.isTokenRevokedError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Access Token has been revoked';\n  };\n\n  AuthClass.prototype.isRefreshTokenRevokedError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Refresh Token has been revoked';\n  };\n\n  AuthClass.prototype.isUserDisabledError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'User is disabled.';\n  };\n\n  AuthClass.prototype.isUserDoesNotExistError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'User does not exist.';\n  };\n\n  AuthClass.prototype.isRefreshTokenExpiredError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Refresh Token has expired';\n  };\n\n  AuthClass.prototype.isPasswordResetRequiredError = function (err) {\n    return this.isErrorWithMessage(err) && err.message === 'Password reset required for the user';\n  };\n\n  AuthClass.prototype.isSignedInHostedUI = function () {\n    return this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n  };\n\n  AuthClass.prototype.isSessionInvalid = function (err) {\n    return this.isUserDisabledError(err) || this.isUserDoesNotExistError(err) || this.isTokenRevokedError(err) || this.isRefreshTokenRevokedError(err) || this.isRefreshTokenExpiredError(err) || this.isPasswordResetRequiredError(err);\n  };\n\n  AuthClass.prototype.cleanUpInvalidSession = function (user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_7;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            user.signOut();\n            this.user = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 2:\n            _a.sent(); // clean aws credentials\n\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_7 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            if (this.isSignedInHostedUI()) {\n              return [2\n              /*return*/\n              , new Promise(function (res, rej) {\n                _this.oAuthSignOutRedirect(res, rej);\n              })];\n            } else {\n              dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentUserPoolUser = function (params) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    return new Promise(function (res, rej) {\n      _this._storageSync.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, session, bypassCache, clientMetadata, _a, scope, err_1;\n\n          var _this = this;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!this.isOAuthInProgress()) return [3\n                /*break*/\n                , 2];\n                logger.debug('OAuth signIn in progress, waiting for resolution...');\n                return [4\n                /*yield*/\n                , new Promise(function (res) {\n                  var timeoutId = setTimeout(function () {\n                    logger.debug('OAuth signIn in progress timeout');\n                    Hub.remove('auth', hostedUISignCallback);\n                    res();\n                  }, OAUTH_FLOW_MS_TIMEOUT);\n                  Hub.listen('auth', hostedUISignCallback);\n\n                  function hostedUISignCallback(_a) {\n                    var payload = _a.payload;\n                    var event = payload.event;\n\n                    if (event === 'cognitoHostedUI' || event === 'cognitoHostedUI_failure') {\n                      logger.debug(\"OAuth signIn resolved: \" + event);\n                      clearTimeout(timeoutId);\n                      Hub.remove('auth', hostedUISignCallback);\n                      res();\n                    }\n                  }\n                })];\n\n              case 1:\n                _b.sent();\n\n                _b.label = 2;\n\n              case 2:\n                user = this.userPool.getCurrentUser();\n\n                if (!user) {\n                  logger.debug('Failed to get user from user pool');\n                  rej('No current user');\n                  return [2\n                  /*return*/\n                  ];\n                }\n\n                _b.label = 3;\n\n              case 3:\n                _b.trys.push([3, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , this._userSession(user)];\n\n              case 4:\n                session = _b.sent();\n                bypassCache = params ? params.bypassCache : false;\n                if (!bypassCache) return [3\n                /*break*/\n                , 6];\n                return [4\n                /*yield*/\n                , this.Credentials.clear()];\n\n              case 5:\n                _b.sent();\n\n                _b.label = 6;\n\n              case 6:\n                clientMetadata = this._config.clientMetadata;\n                _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n\n                if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                  user.getUserData(function (err, data) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var cleanUpError_5, preferredMFA, attributeList, i, attribute, userAttribute, attributes;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            if (!err) return [3\n                            /*break*/\n                            , 7];\n                            logger.debug('getting user data failed', err);\n                            if (!this.isSessionInvalid(err)) return [3\n                            /*break*/\n                            , 5];\n                            _a.label = 1;\n\n                          case 1:\n                            _a.trys.push([1, 3,, 4]);\n\n                            return [4\n                            /*yield*/\n                            , this.cleanUpInvalidSession(user)];\n\n                          case 2:\n                            _a.sent();\n\n                            return [3\n                            /*break*/\n                            , 4];\n\n                          case 3:\n                            cleanUpError_5 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_5.message));\n                            return [2\n                            /*return*/\n                            ];\n\n                          case 4:\n                            rej(err);\n                            return [3\n                            /*break*/\n                            , 6];\n\n                          case 5:\n                            res(user);\n                            _a.label = 6;\n\n                          case 6:\n                            return [2\n                            /*return*/\n                            ];\n\n                          case 7:\n                            preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                            attributeList = [];\n\n                            for (i = 0; i < data.UserAttributes.length; i++) {\n                              attribute = {\n                                Name: data.UserAttributes[i].Name,\n                                Value: data.UserAttributes[i].Value\n                              };\n                              userAttribute = new CognitoUserAttribute(attribute);\n                              attributeList.push(userAttribute);\n                            }\n\n                            attributes = this.attributesToObject(attributeList);\n                            Object.assign(user, {\n                              attributes: attributes,\n                              preferredMFA: preferredMFA\n                            });\n                            return [2\n                            /*return*/\n                            , res(user)];\n                        }\n                      });\n                    });\n                  }, {\n                    bypassCache: bypassCache,\n                    clientMetadata: clientMetadata\n                  });\n                } else {\n                  logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" + \"is not in the scopes of the access token\");\n                  return [2\n                  /*return*/\n                  , res(user)];\n                }\n\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                err_1 = _b.sent();\n                rej(err_1);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to sync cache info into memory', e);\n        return rej(e);\n      });\n    });\n  };\n\n  AuthClass.prototype.isOAuthInProgress = function () {\n    return this.oAuthFlowInProgress;\n  };\n  /**\n   * Get current authenticated user\n   * @param {CurrentUserOpts} - options for getting the current user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentAuthenticatedUser = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var federatedUser, e_8, federatedInfo, user, e_9;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting current authenticated user');\n            federatedUser = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_8 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_8);\n            throw e_8;\n\n          case 4:\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n\n              if (federatedInfo) {\n                federatedUser = __assign(__assign({}, federatedInfo.user), {\n                  token: federatedInfo.token\n                });\n              }\n            } catch (e) {\n              logger.debug('cannot load federated user from auth storage');\n            }\n\n            if (!federatedUser) return [3\n            /*break*/\n            , 5];\n            this.user = federatedUser;\n            logger.debug('get current authenticated federated user', this.user);\n            return [2\n            /*return*/\n            , this.user];\n\n          case 5:\n            logger.debug('get current authenticated userpool user');\n            user = null;\n            _a.label = 6;\n\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser(params)];\n\n          case 7:\n            user = _a.sent();\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_9 = _a.sent();\n\n            if (e_9 === 'No userPool') {\n              logger.error('Cannot get the current user because the user pool is missing. ' + 'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n            }\n\n            logger.debug('The user is not authenticated by the error', e_9);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 9:\n            this.user = user;\n            return [2\n            /*return*/\n            , this.user];\n        }\n      });\n    });\n  };\n  /**\n   * Get current user's session\n   * @return - A promise resolves to session object if success\n   */\n\n\n  AuthClass.prototype.currentSession = function () {\n    var that = this;\n    logger.debug('Getting current session'); // Purposely not calling the reject method here because we don't need a console error\n\n    if (!this.userPool) {\n      return Promise.reject(new Error('No User Pool in the configuration.'));\n    }\n\n    return new Promise(function (res, rej) {\n      that.currentUserPoolUser().then(function (user) {\n        that.userSession(user).then(function (session) {\n          res(session);\n          return;\n        }).catch(function (e) {\n          logger.debug('Failed to get the current session', e);\n          rej(e);\n          return;\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to get the current user', e);\n        rej(e);\n        return;\n      });\n    });\n  };\n\n  AuthClass.prototype._userSession = function (user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var clientMetadata, userSession;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!user) {\n              logger.debug('the user is null');\n              return [2\n              /*return*/\n              , this.rejectAuthError(AuthErrorTypes.NoUserSession)];\n            }\n\n            clientMetadata = this._config.clientMetadata; // Debouncing the concurrent userSession calls by caching the promise.\n            // This solution assumes users will always call this function with the same CognitoUser instance.\n\n            if (this.inflightSessionPromiseCounter === 0) {\n              this.inflightSessionPromise = new Promise(function (res, rej) {\n                user.getSession(function (err, session) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_6;\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('Failed to get the session from user', user);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _a.label = 1;\n\n                        case 1:\n                          _a.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _a.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_6 = _a.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_6.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          rej(err);\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 5:\n                          logger.debug('Succeed to get the user session', session);\n                          res(session);\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n              });\n            }\n\n            this.inflightSessionPromiseCounter++;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n\n            return [4\n            /*yield*/\n            , this.inflightSessionPromise];\n\n          case 2:\n            userSession = _a.sent(); // Set private member. Avoid user.setSignInUserSession() to prevent excessive localstorage refresh.\n            // @ts-ignore\n\n            user.signInUserSession = userSession;\n            return [2\n            /*return*/\n            , userSession];\n\n          case 3:\n            this.inflightSessionPromiseCounter--;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get the corresponding user session\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to the session\n   */\n\n\n  AuthClass.prototype.userSession = function (user) {\n    return this._userSession(user);\n  };\n  /**\n   * Get authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n\n\n  AuthClass.prototype.currentUserCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_10, federatedInfo;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('Getting current user credentials');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_10 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_10);\n            throw e_10;\n\n          case 4:\n            federatedInfo = null;\n\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n            } catch (e) {\n              logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n            }\n\n            if (federatedInfo) {\n              // refresh the jwt token here if necessary\n              return [2\n              /*return*/\n              , this.Credentials.refreshFederatedToken(federatedInfo)];\n            } else {\n              return [2\n              /*return*/\n              , this.currentSession().then(function (session) {\n                logger.debug('getting session success', session);\n                return _this.Credentials.set(session, 'session');\n              }).catch(function () {\n                logger.debug('getting guest credentials');\n                return _this.Credentials.set(null, 'guest');\n              })];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.currentCredentials = function () {\n    logger.debug('getting current credentials');\n    return this.Credentials.get();\n  };\n  /**\n   * Initiate an attribute confirmation request\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attributes to be verified\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.getAttributeVerificationCode(attr, {\n        onSuccess: function (success) {\n          return resolve(success);\n        },\n        onFailure: function (err) {\n          return reject(err);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm an attribute using a confirmation code\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.verifyAttribute(attr, code, {\n        onSuccess: function (data) {\n          resolve(data);\n          return;\n        },\n        onFailure: function (err) {\n          reject(err);\n          return;\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttribute(user, attr);\n    });\n  };\n  /**\n   * Confirm current user's attribute using a confirmation code\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttributeSubmit(user, attr, code);\n    });\n  };\n\n  AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_11, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_11 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_11);\n            throw e_11;\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              if (opts && opts.global) {\n                logger.debug('user global sign out', user); // in order to use global signout\n                // we must validate the user as an authenticated user by using getSession\n\n                var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n                user.getSession(function (err, result) {\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var cleanUpError_7;\n\n                    var _this = this;\n\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          if (!err) return [3\n                          /*break*/\n                          , 5];\n                          logger.debug('failed to get the user session', err);\n                          if (!this.isSessionInvalid(err)) return [3\n                          /*break*/\n                          , 4];\n                          _a.label = 1;\n\n                        case 1:\n                          _a.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.cleanUpInvalidSession(user)];\n\n                        case 2:\n                          _a.sent();\n\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          cleanUpError_7 = _a.sent();\n                          rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_7.message));\n                          return [2\n                          /*return*/\n                          ];\n\n                        case 4:\n                          return [2\n                          /*return*/\n                          , rej(err)];\n\n                        case 5:\n                          user.globalSignOut({\n                            onSuccess: function (data) {\n                              logger.debug('global sign out success');\n\n                              if (isSignedInHostedUI) {\n                                _this.oAuthSignOutRedirect(res, rej);\n                              } else {\n                                return res();\n                              }\n                            },\n                            onFailure: function (err) {\n                              logger.debug('global sign out failed', err);\n                              return rej(err);\n                            }\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                }, {\n                  clientMetadata: clientMetadata\n                });\n              } else {\n                logger.debug('user sign out', user);\n                user.signOut(function () {\n                  if (isSignedInHostedUI) {\n                    _this.oAuthSignOutRedirect(res, rej);\n                  } else {\n                    return res();\n                  }\n                });\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n    var isBrowser = browserOrNode().isBrowser;\n\n    if (isBrowser) {\n      this.oAuthSignOutRedirectOrReject(reject);\n    } else {\n      this.oAuthSignOutAndResolve(resolve);\n    }\n  };\n\n  AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n    this._oAuthHandler.signOut();\n\n    resolve();\n  };\n\n  AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n    this._oAuthHandler.signOut(); // this method redirects url\n    // App should be redirected to another url otherwise it will reject\n\n\n    setTimeout(function () {\n      return reject(Error('Signout timeout fail'));\n    }, 3000);\n  };\n  /**\n   * Sign out method\n   * @\n   * @return - A promise resolved if success\n   */\n\n\n  AuthClass.prototype.signOut = function (opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_12, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_12 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            if (!this.userPool) return [3\n            /*break*/\n            , 7];\n            user = this.userPool.getCurrentUser();\n            if (!user) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.cognitoIdentitySignOut(opts, user)];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            logger.debug('no current Cognito user');\n            _a.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            logger.debug('no Cognito User pool');\n            _a.label = 8;\n\n          case 8:\n            /**\n             * Note for future refactor - no reliable way to get username with\n             * Cognito User Pools vs Identity when federating with Social Providers\n             * This is why we need a well structured session object that can be inspected\n             * and information passed back in the message below for Hub dispatch\n             */\n            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            this.user = null;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.cleanCachedItems = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // clear cognito cached item\n            return [4\n            /*yield*/\n            , this.Credentials.clear()];\n\n          case 1:\n            // clear cognito cached item\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Change a password for an authenticated user\n   * @param {Object} user - The CognitoUser object\n   * @param {String} oldPassword - the current password\n   * @param {String} newPassword - the requested new password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.changePassword(oldPassword, newPassword, function (err, data) {\n          if (err) {\n            logger.debug('change password failure', err);\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Initiate a forgot password request\n   * @param {String} username - the username to change password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.forgotPassword({\n        onSuccess: function () {\n          resolve();\n          return;\n        },\n        onFailure: function (err) {\n          logger.debug('forgot password failure', err);\n          dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n          reject(err);\n          return;\n        },\n        inputVerificationCode: function (data) {\n          dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n          resolve(data);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm a new password using a confirmation Code\n   * @param {String} username - The username\n   * @param {String} code - The confirmation code\n   * @param {String} password - The new password\n   * @return - A promise that resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.confirmPassword(code, password, {\n        onSuccess: function (success) {\n          dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n          resolve(success);\n          return;\n        },\n        onFailure: function (err) {\n          dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n          reject(err);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Get user information\n   * @async\n   * @return {Object }- current User's information\n   */\n\n\n  AuthClass.prototype.currentUserInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var source, user, attributes, userAttrs, credentials, e_13, info, err_2, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            source = this.Credentials.getCredSource();\n            if (!(!source || source === 'aws' || source === 'userPool')) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser().catch(function (err) {\n              return logger.error(err);\n            })];\n\n          case 1:\n            user = _a.sent();\n\n            if (!user) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.userAttributes(user)];\n\n          case 3:\n            attributes = _a.sent();\n            userAttrs = this.attributesToObject(attributes);\n            credentials = null;\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this.currentCredentials()];\n\n          case 5:\n            credentials = _a.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_13 = _a.sent();\n            logger.debug('Failed to retrieve credentials while getting current user info', e_13);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            info = {\n              id: credentials ? credentials.identityId : undefined,\n              username: user.getUsername(),\n              attributes: userAttrs\n            };\n            return [2\n            /*return*/\n            , info];\n\n          case 8:\n            err_2 = _a.sent();\n            logger.error('currentUserInfo error', err_2);\n            return [2\n            /*return*/\n            , {}];\n\n          case 9:\n            if (source === 'federated') {\n              user = this.user;\n              return [2\n              /*return*/\n              , user ? user : {}];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._config.identityPoolId && !this._config.userPoolId) {\n              throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n            } // Ensure backwards compatability\n\n\n            if (typeof providerOrOptions === 'undefined') {\n              if (this._config.identityPoolId && !this._config.userPoolId) {\n                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n              }\n            }\n\n            if (!(isFederatedSignInOptions(providerOrOptions) || isFederatedSignInOptionsCustom(providerOrOptions) || hasCustomState(providerOrOptions) || typeof providerOrOptions === 'undefined')) return [3\n            /*break*/\n            , 1];\n            options = providerOrOptions || {\n              provider: CognitoHostedUIIdentityProvider.Cognito\n            };\n            provider = isFederatedSignInOptions(options) ? options.provider : options.customProvider;\n            customState = isFederatedSignInOptions(options) ? options.customState : options.customState;\n\n            if (this._config.userPoolId) {\n              client_id = isCognitoHostedOpts(this._config.oauth) ? this._config.userPoolWebClientId : this._config.oauth.clientID;\n              redirect_uri = isCognitoHostedOpts(this._config.oauth) ? this._config.oauth.redirectSignIn : this._config.oauth.redirectUri;\n\n              this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            provider = providerOrOptions; // To check if the user is already logged in\n\n            try {\n              loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n\n              if (loggedInUser) {\n                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n              }\n            } catch (e) {}\n\n            token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n            return [4\n            /*yield*/\n            , this.Credentials.set({\n              provider: provider,\n              token: token,\n              identity_id: identity_id,\n              user: user,\n              expires_at: expires_at\n            }, 'federation')];\n\n          case 2:\n            credentials = _a.sent();\n            return [4\n            /*yield*/\n            , this.currentAuthenticatedUser()];\n\n          case 3:\n            currentUser = _a.sent();\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n            logger.debug('federated sign in credentials', credentials);\n            return [2\n            /*return*/\n            , credentials];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Used to complete the OAuth flow with or without the Cognito Hosted UI\n   * @param {String} URL - optional parameter for customers to pass in the response URL\n   */\n\n\n  AuthClass.prototype._handleAuthResponse = function (URL) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.oAuthFlowInProgress) {\n              logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 8, 9]);\n\n            this.oAuthFlowInProgress = true;\n\n            if (!this._config.userPoolId) {\n              throw new Error(\"OAuth responses require a User Pool defined in config\");\n            }\n\n            dispatchAuthEvent('parsingCallbackUrl', {\n              url: URL\n            }, \"The callback url is being parsed\");\n            currentUrl = URL || (browserOrNode().isBrowser ? window.location.href : '');\n            hasCodeOrError = !!(parse(currentUrl).query || '').split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'code' || k === 'error';\n            });\n            hasTokenOrError = !!(parse(currentUrl).hash || '#').substr(1).split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var _b = __read(_a, 1),\n                  k = _b[0];\n\n              return k === 'access_token' || k === 'error';\n            });\n            if (!(hasCodeOrError || hasTokenOrError)) return [3\n            /*break*/\n            , 7];\n\n            this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this._oAuthHandler.handleAuthResponse(currentUrl)];\n\n          case 3:\n            _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n            session = new CognitoUserSession({\n              IdToken: new CognitoIdToken({\n                IdToken: idToken\n              }),\n              RefreshToken: new CognitoRefreshToken({\n                RefreshToken: refreshToken\n              }),\n              AccessToken: new CognitoAccessToken({\n                AccessToken: accessToken\n              })\n            });\n            credentials = void 0;\n            if (!this._config.identityPoolId) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.Credentials.set(session, 'session')];\n\n          case 4:\n            credentials = _b.sent();\n            logger.debug('AWS credentials', credentials);\n            _b.label = 5;\n\n          case 5:\n            isCustomStateIncluded = /-/.test(state);\n            currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']); // This calls cacheTokens() in Cognito SDK\n\n            currentUser.setSignInUserSession(session);\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState(window.history.state, '', this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n            dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n\n            if (isCustomStateIncluded) {\n              customState = state.split('-').splice(1).join('-');\n              dispatchAuthEvent('customOAuthState', urlSafeDecode(customState), \"State for user \" + currentUser.getUsername());\n            } //#endregion\n\n\n            return [2\n            /*return*/\n            , credentials];\n\n          case 6:\n            err_3 = _b.sent();\n            logger.debug('Error in cognito hosted auth response', err_3); // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n            // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState(window.history.state, '', this._config.oauth.redirectSignIn);\n            }\n\n            dispatchAuthEvent('signIn_failure', err_3, \"The OAuth response flow failed\");\n            dispatchAuthEvent('cognitoHostedUI_failure', err_3, \"A failure occurred when returning to the Cognito Hosted UI\");\n            dispatchAuthEvent('customState_failure', err_3, \"A failure occurred when returning state\");\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            this.oAuthFlowInProgress = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n\n\n  AuthClass.prototype.essentialCredentials = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n\n  AuthClass.prototype.attributesToObject = function (attributes) {\n    var _this = this;\n\n    var obj = {};\n\n    if (attributes) {\n      attributes.map(function (attribute) {\n        if (attribute.Name === 'email_verified' || attribute.Name === 'phone_number_verified') {\n          obj[attribute.Name] = _this.isTruthyString(attribute.Value) || attribute.Value === true;\n        } else {\n          obj[attribute.Name] = attribute.Value;\n        }\n      });\n    }\n\n    return obj;\n  };\n\n  AuthClass.prototype.isTruthyString = function (value) {\n    return typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true';\n  };\n\n  AuthClass.prototype.createCognitoUser = function (username) {\n    var userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    userData.Storage = this._storage;\n    var authenticationFlowType = this._config.authenticationFlowType;\n    var user = new CognitoUser(userData);\n\n    if (authenticationFlowType) {\n      user.setAuthenticationFlowType(authenticationFlowType);\n    }\n\n    return user;\n  };\n\n  AuthClass.prototype._isValidAuthStorage = function (obj) {\n    // We need to check if the obj has the functions of Storage\n    return !!obj && typeof obj.getItem === 'function' && typeof obj.setItem === 'function' && typeof obj.removeItem === 'function' && typeof obj.clear === 'function';\n  };\n\n  AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n    if (config) {\n      if (!config.userPoolId || !config.identityPoolId) {\n        return AuthErrorTypes.MissingAuthConfig;\n      }\n    }\n\n    return AuthErrorTypes.NoConfig;\n  };\n\n  AuthClass.prototype.rejectAuthError = function (type) {\n    return Promise.reject(new AuthError(type));\n  };\n\n  AuthClass.prototype.rejectNoUserPool = function () {\n    var type = this.noUserPoolErrorHandler(this._config);\n    return Promise.reject(new NoUserPoolError(type));\n  };\n\n  AuthClass.prototype.rememberDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_2 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_2);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.setDeviceStatusRemembered({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.forgetDevice = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_3 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_3);\n            return [2\n            /*return*/\n            , Promise.reject('The user is not authenticated')];\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              currUser.forgetDevice({\n                onSuccess: function (data) {\n                  res(data);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.fetchDevices = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var currUser, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser()];\n\n          case 1:\n            currUser = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_4 = _a.sent();\n            logger.debug('The user is not authenticated by the error', error_4);\n            throw new Error('The user is not authenticated');\n\n          case 3:\n            currUser.getCachedDeviceKeyAndPassword();\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              var cb = {\n                onSuccess: function (data) {\n                  var deviceList = data.Devices.map(function (device) {\n                    var deviceName = device.DeviceAttributes.find(function (_a) {\n                      var Name = _a.Name;\n                      return Name === 'device_name';\n                    }) || {};\n                    var deviceInfo = {\n                      id: device.DeviceKey,\n                      name: deviceName.Value\n                    };\n                    return deviceInfo;\n                  });\n                  res(deviceList);\n                },\n                onFailure: function (err) {\n                  if (err.code === 'InvalidParameterException') {\n                    rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                  } else if (err.code === 'NetworkError') {\n                    rej(new AuthError(AuthErrorTypes.NetworkError));\n                  } else {\n                    rej(err);\n                  }\n                }\n              };\n              currUser.listDevices(MAX_DEVICES, null, cb);\n            })];\n        }\n      });\n    });\n  };\n\n  return AuthClass;\n}();\n\nexport { AuthClass };\nexport var Auth = new AuthClass(null);\nAmplify.register(Auth);","map":{"version":3,"names":["__assign","__awaiter","__generator","__read","isUsernamePasswordOpts","isCognitoHostedOpts","isFederatedSignInOptions","isFederatedSignInOptionsCustom","hasCustomState","Amplify","ConsoleLogger","Logger","Credentials","Hub","StorageHelper","Platform","browserOrNode","parseAWSExports","UniversalStorage","urlSafeDecode","CookieStorage","CognitoUserPool","AuthenticationDetails","CognitoUser","CognitoUserSession","CognitoUserAttribute","CognitoIdToken","CognitoRefreshToken","CognitoAccessToken","addAuthCategoryToCognitoUserAgent","addFrameworkToCognitoUserAgent","parse","OAuth","default","urlListener","AuthError","NoUserPoolError","AuthErrorTypes","CognitoHostedUIIdentityProvider","logger","USER_ADMIN_SCOPE","OAUTH_FLOW_MS_TIMEOUT","AMPLIFY_SYMBOL","Symbol","for","dispatchAuthEvent","event","data","message","dispatch","MAX_DEVICES","MAX_AUTOSIGNIN_POLLING_MS","AuthClass","config","_this","userPool","user","oAuthFlowInProgress","autoSignInInitiated","inflightSessionPromise","inflightSessionPromiseCounter","wrapRefreshSessionCallback","callback","wrapped","error","undefined","configure","currentCredentials","bind","currentUserCredentials","listen","_a","payload","_storage","setItem","removeItem","framework","observeFrameworkChanges","prototype","getModuleName","_config","debug","conf","Object","assign","Auth","userPoolId","userPoolWebClientId","cookieStorage","oauth","region","identityPoolId","mandatorySignIn","refreshHandlers","identityPoolRegion","clientMetadata","endpoint","storage","ssr","getStorage","_isValidAuthStorage","Error","_storageSync","Promise","resolve","userPoolData","UserPoolId","ClientId","Storage","cognitoHostedUIConfig","awsCognito","cognitoAuthParams","cognitoClientId","domain","scopes","redirectSignIn","redirectSignOut","responseType","urlOpener","_oAuthHandler","usedResponseUrls_1","url","_handleAuthResponse","pollingInitiated","isTrueStorageValue","AutoSignInError","signUp","params","restOfAttrs","_i","arguments","length","_b","_c","rejectNoUserPool","username","password","attributes","validationData","autoSignIn","enabled","autoSignInValidationData","autoSignInClientMetaData","email","phone_number","push","Name","Value","attrs_1","keys","map","key","validationDataObject_1","clientMetaData","rejectAuthError","SignUpError","EmptyUsername","EmptyPassword","reject","err","handleAutoSignIn","authDetails","Username","Password","ValidationData","ClientMetadata","userConfirmed","signInAfterUserConfirmed","signUpVerificationMethod","handleLinkAutoSignIn","handleCodeAutoSignIn","listenEvent","start","Date","now","autoSignInPollingIntervalId","setInterval","clearInterval","error_1","label","createCognitoUser","getUsername","trys","authenticateUser","authCallbacks","value","remove","sent","confirmSignUp","code","options","EmptyCode","forceAliasCreation","confirmRegistration","item","getItem","resendSignUp","resendConfirmationCode","signIn","usernameOrSignInOpts","pw","warn","InvalidUsername","signInWithPassword","signInWithoutPassword","that","onSuccess","session","cred","e_1","currentUser","e_2","clear","set","currentUserPoolUser","onFailure","customChallenge","challengeParam","mfaRequired","challengeName","mfaSetup","newPasswordRequired","userAttributes","requiredAttributes","totpRequired","selectMFAType","pendingSignIn","setAuthenticationFlowType","initiateAuth","getMFAOptions","res","rej","mfaOptions","getPreferredMFA","bypassCache","getUserData","cleanUpError_1","mfaType","isSessionInvalid","cleanUpInvalidSession","_getMfaTypeFromUserData","ret","preferredMFA","PreferredMfaSetting","mfaList","UserMFASettingList","MFAOptions","_getUserData","cleanUpError_2","setPreferredMFA","mfaMethod","userData","smsMfaSettings","totpMfaSettings","currentMFAType","PreferredMfa","Enabled","InvalidMFA","forEach","NoMFA","setUserMfaPreference","result","cleanUpError_3","disableSMS","disableMFA","enableSMS","enableMFA","setupTOTP","associateSoftwareToken","associateSecretCode","secretCode","verifyTotpToken","challengeAnswer","signInUserSession","getSignInUserSession","isLoggedIn","isValid","verifySoftwareToken","confirmSignIn","sendMFACode","e_3","e_4","completeNewPassword","completeNewPasswordChallenge","e_5","sendCustomChallengeAnswer","challengeResponses","EmptyChallengeResponse","deleteUserAttributes","attributeNames","userSession","then","deleteAttributes","deleteUser","e_6","isSignedInHostedUI","user_1","getCurrentUser","getSession","cleanUpError_4","signOut","cleanCachedItems","e","oAuthSignOutRedirect","updateUserAttributes","attributeList","indexOf","attr","updateAttributes","details","attrs","createUpdateAttributesResultList","CodeDeliveryDetailsList","codeDeliveryDetailsList","isUpdated","codeDeliveryDetails","find","AttributeName","getUserAttributes","verifiedContact","attributesToObject","unverified","verified","isErrorWithMessage","hasOwnProperty","call","isTokenRevokedError","isRefreshTokenRevokedError","isUserDisabledError","isUserDoesNotExistError","isRefreshTokenExpiredError","isPasswordResetRequiredError","e_7","scope","err_1","isOAuthInProgress","timeoutId","setTimeout","hostedUISignCallback","clearTimeout","_userSession","getAccessToken","decodePayload","split","includes","cleanUpError_5","i","attribute","userAttribute","UserAttributes","catch","currentAuthenticatedUser","federatedUser","e_8","federatedInfo","e_9","JSON","token","currentSession","NoUserSession","cleanUpError_6","e_10","refreshFederatedToken","get","verifyUserAttribute","getAttributeVerificationCode","success","verifyUserAttributeSubmit","verifyAttribute","verifyCurrentUserAttribute","verifyCurrentUserAttributeSubmit","cognitoIdentitySignOut","opts","e_11","global","cleanUpError_7","globalSignOut","isBrowser","oAuthSignOutRedirectOrReject","oAuthSignOutAndResolve","e_12","changePassword","oldPassword","newPassword","forgotPassword","inputVerificationCode","forgotPasswordSubmit","confirmPassword","currentUserInfo","source","userAttrs","credentials","e_13","info","err_2","getCredSource","id","identityId","federatedSignIn","providerOrOptions","response","provider","customState","client_id","redirect_uri","loggedInUser","identity_id","expires_at","Cognito","customProvider","clientID","redirectUri","oauthSignIn","stringify","URL","currentUrl","hasCodeOrError","hasTokenOrError","accessToken","idToken","refreshToken","state","isCustomStateIncluded","err_3","window","location","href","query","entry","k","hash","substr","handleAuthResponse","IdToken","RefreshToken","AccessToken","test","getIdToken","setSignInUserSession","history","replaceState","splice","join","essentialCredentials","accessKeyId","sessionToken","secretAccessKey","authenticated","obj","isTruthyString","toLowerCase","Pool","authenticationFlowType","noUserPoolErrorHandler","MissingAuthConfig","NoConfig","type","rememberDevice","currUser","error_2","getCachedDeviceKeyAndPassword","setDeviceStatusRemembered","DeviceConfig","NetworkError","forgetDevice","error_3","fetchDevices","error_4","cb","deviceList","Devices","device","deviceName","DeviceAttributes","deviceInfo","DeviceKey","name","listDevices","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/auth/lib-esm/Auth.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom, hasCustomState, } from './types';\nimport { Amplify, ConsoleLogger as Logger, Credentials, Hub, StorageHelper, Platform, browserOrNode, parseAWSExports, UniversalStorage, urlSafeDecode, } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken, } from 'amazon-cognito-identity-js';\nimport { addAuthCategoryToCognitoUserAgent, addFrameworkToCognitoUserAgent, } from 'amazon-cognito-identity-js/internals';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes, CognitoHostedUIIdentityProvider, } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\n// 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\nvar OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAuthEvent = function (event, data, message) {\n    Hub.dispatch('auth', { event: event, data: data, message: message }, 'Auth', AMPLIFY_SYMBOL);\n};\n// Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nvar MAX_DEVICES = 60;\nvar MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n/**\n * Provide authentication steps\n */\nvar AuthClass = /** @class */ (function () {\n    /**\n     * Initialize Auth with AWS configurations\n     * @param {Object} config - Configuration of the Auth\n     */\n    function AuthClass(config) {\n        var _this = this;\n        this.userPool = null;\n        this.user = null;\n        this.oAuthFlowInProgress = false;\n        this.autoSignInInitiated = false;\n        this.inflightSessionPromise = null;\n        this.inflightSessionPromiseCounter = 0;\n        this.Credentials = Credentials;\n        this.wrapRefreshSessionCallback = function (callback) {\n            var wrapped = function (error, data) {\n                if (data) {\n                    dispatchAuthEvent('tokenRefresh', undefined, \"New token retrieved\");\n                }\n                else {\n                    dispatchAuthEvent('tokenRefresh_failure', error, \"Failed to retrieve new token\");\n                }\n                return callback(error, data);\n            };\n            return wrapped;\n        }; // prettier-ignore\n        this.configure(config);\n        this.currentCredentials = this.currentCredentials.bind(this);\n        this.currentUserCredentials = this.currentUserCredentials.bind(this);\n        Hub.listen('auth', function (_a) {\n            var payload = _a.payload;\n            var event = payload.event;\n            switch (event) {\n                case 'verify':\n                case 'signIn':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n                    break;\n                case 'signOut':\n                    _this._storage.removeItem('amplify-signin-with-hostedUI');\n                    break;\n                case 'cognitoHostedUI':\n                    _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n                    break;\n            }\n        });\n        addAuthCategoryToCognitoUserAgent();\n        addFrameworkToCognitoUserAgent(Platform.framework);\n        Platform.observeFrameworkChanges(function () {\n            addFrameworkToCognitoUserAgent(Platform.framework);\n        });\n    }\n    AuthClass.prototype.getModuleName = function () {\n        return 'Auth';\n    };\n    AuthClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config || {};\n        logger.debug('configure Auth');\n        var conf = Object.assign({}, this._config, parseAWSExports(config).Auth, config);\n        this._config = conf;\n        var _a = this._config, userPoolId = _a.userPoolId, userPoolWebClientId = _a.userPoolWebClientId, cookieStorage = _a.cookieStorage, oauth = _a.oauth, region = _a.region, identityPoolId = _a.identityPoolId, mandatorySignIn = _a.mandatorySignIn, refreshHandlers = _a.refreshHandlers, identityPoolRegion = _a.identityPoolRegion, clientMetadata = _a.clientMetadata, endpoint = _a.endpoint, storage = _a.storage;\n        if (!storage) {\n            // backward compatability\n            if (cookieStorage)\n                this._storage = new CookieStorage(cookieStorage);\n            else {\n                this._storage = config.ssr\n                    ? new UniversalStorage()\n                    : new StorageHelper().getStorage();\n            }\n        }\n        else {\n            if (!this._isValidAuthStorage(storage)) {\n                logger.error('The storage in the Auth config is not valid!');\n                throw new Error('Empty storage object');\n            }\n            this._storage = storage;\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        if (userPoolId) {\n            var userPoolData = {\n                UserPoolId: userPoolId,\n                ClientId: userPoolWebClientId,\n                endpoint: endpoint,\n            };\n            userPoolData.Storage = this._storage;\n            this.userPool = new CognitoUserPool(userPoolData, this.wrapRefreshSessionCallback);\n        }\n        this.Credentials.configure({\n            mandatorySignIn: mandatorySignIn,\n            region: region,\n            userPoolId: userPoolId,\n            identityPoolId: identityPoolId,\n            refreshHandlers: refreshHandlers,\n            storage: this._storage,\n            identityPoolRegion: identityPoolRegion,\n        });\n        // initialize cognitoauth client if hosted ui options provided\n        // to keep backward compatibility:\n        var cognitoHostedUIConfig = oauth\n            ? isCognitoHostedOpts(this._config.oauth)\n                ? oauth\n                : oauth.awsCognito\n            : undefined;\n        if (cognitoHostedUIConfig) {\n            var cognitoAuthParams = Object.assign({\n                cognitoClientId: userPoolWebClientId,\n                UserPoolId: userPoolId,\n                domain: cognitoHostedUIConfig['domain'],\n                scopes: cognitoHostedUIConfig['scope'],\n                redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n                redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n                responseType: cognitoHostedUIConfig['responseType'],\n                Storage: this._storage,\n                urlOpener: cognitoHostedUIConfig['urlOpener'],\n                clientMetadata: clientMetadata,\n            }, cognitoHostedUIConfig['options']);\n            this._oAuthHandler = new OAuth({\n                scopes: cognitoAuthParams.scopes,\n                config: cognitoAuthParams,\n                cognitoClientId: cognitoAuthParams.cognitoClientId,\n            });\n            // **NOTE** - Remove this in a future major release as it is a breaking change\n            // Prevents _handleAuthResponse from being called multiple times in Expo\n            // See https://github.com/aws-amplify/amplify-js/issues/4388\n            var usedResponseUrls_1 = {};\n            urlListener(function (_a) {\n                var url = _a.url;\n                if (usedResponseUrls_1[url]) {\n                    return;\n                }\n                usedResponseUrls_1[url] = true;\n                _this._handleAuthResponse(url);\n            });\n        }\n        dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n        if (!this.autoSignInInitiated &&\n            typeof this._storage['getItem'] === 'function') {\n            var pollingInitiated = this.isTrueStorageValue('amplify-polling-started');\n            if (pollingInitiated) {\n                dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n                this._storage.removeItem('amplify-auto-sign-in');\n            }\n            this._storage.removeItem('amplify-polling-started');\n        }\n        return this._config;\n    };\n    /**\n     * Sign up with username, password and other attributes like phone, email\n     * @param {String | object} params - The user attributes used for signin\n     * @param {String[]} restOfAttrs - for the backward compatability\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.signUp = function (params) {\n        var _this = this;\n        var restOfAttrs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            restOfAttrs[_i - 1] = arguments[_i];\n        }\n        var _a, _b, _c;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var attributes = [];\n        var validationData = null;\n        var clientMetadata;\n        var autoSignIn = { enabled: false };\n        var autoSignInValidationData = {};\n        var autoSignInClientMetaData = {};\n        if (params && typeof params === 'string') {\n            username = params;\n            password = restOfAttrs ? restOfAttrs[0] : null;\n            var email = restOfAttrs ? restOfAttrs[1] : null;\n            var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n            if (email)\n                attributes.push(new CognitoUserAttribute({ Name: 'email', Value: email }));\n            if (phone_number)\n                attributes.push(new CognitoUserAttribute({\n                    Name: 'phone_number',\n                    Value: phone_number,\n                }));\n        }\n        else if (params && typeof params === 'object') {\n            username = params['username'];\n            password = params['password'];\n            if (params && params.clientMetadata) {\n                clientMetadata = params.clientMetadata;\n            }\n            else if (this._config.clientMetadata) {\n                clientMetadata = this._config.clientMetadata;\n            }\n            var attrs_1 = params['attributes'];\n            if (attrs_1) {\n                Object.keys(attrs_1).map(function (key) {\n                    attributes.push(new CognitoUserAttribute({ Name: key, Value: attrs_1[key] }));\n                });\n            }\n            var validationDataObject_1 = params['validationData'];\n            if (validationDataObject_1) {\n                validationData = [];\n                Object.keys(validationDataObject_1).map(function (key) {\n                    validationData.push(new CognitoUserAttribute({\n                        Name: key,\n                        Value: validationDataObject_1[key],\n                    }));\n                });\n            }\n            autoSignIn = (_a = params.autoSignIn) !== null && _a !== void 0 ? _a : { enabled: false };\n            if (autoSignIn.enabled) {\n                this._storage.setItem('amplify-auto-sign-in', 'true');\n                autoSignInValidationData = (_b = autoSignIn.validationData) !== null && _b !== void 0 ? _b : {};\n                autoSignInClientMetaData = (_c = autoSignIn.clientMetaData) !== null && _c !== void 0 ? _c : {};\n            }\n        }\n        else {\n            return this.rejectAuthError(AuthErrorTypes.SignUpError);\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        logger.debug('signUp attrs:', attributes);\n        logger.debug('signUp validation data:', validationData);\n        return new Promise(function (resolve, reject) {\n            _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n                if (err) {\n                    dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n                    reject(err);\n                }\n                else {\n                    dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n                    if (autoSignIn.enabled) {\n                        _this.handleAutoSignIn(username, password, autoSignInValidationData, autoSignInClientMetaData, data);\n                    }\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    AuthClass.prototype.handleAutoSignIn = function (username, password, validationData, clientMetadata, data) {\n        this.autoSignInInitiated = true;\n        var authDetails = new AuthenticationDetails({\n            Username: username,\n            Password: password,\n            ValidationData: validationData,\n            ClientMetadata: clientMetadata,\n        });\n        if (data.userConfirmed) {\n            this.signInAfterUserConfirmed(authDetails);\n        }\n        else if (this._config.signUpVerificationMethod === 'link') {\n            this.handleLinkAutoSignIn(authDetails);\n        }\n        else {\n            this.handleCodeAutoSignIn(authDetails);\n        }\n    };\n    AuthClass.prototype.handleCodeAutoSignIn = function (authDetails) {\n        var _this = this;\n        var listenEvent = function (_a) {\n            var payload = _a.payload;\n            if (payload.event === 'confirmSignUp') {\n                _this.signInAfterUserConfirmed(authDetails, listenEvent);\n            }\n        };\n        Hub.listen('auth', listenEvent);\n    };\n    AuthClass.prototype.handleLinkAutoSignIn = function (authDetails) {\n        var _this = this;\n        this._storage.setItem('amplify-polling-started', 'true');\n        var start = Date.now();\n        var autoSignInPollingIntervalId = setInterval(function () {\n            if (Date.now() - start > MAX_AUTOSIGNIN_POLLING_MS) {\n                clearInterval(autoSignInPollingIntervalId);\n                dispatchAuthEvent('autoSignIn_failure', null, 'Please confirm your account and use your credentials to sign in.');\n                _this._storage.removeItem('amplify-auto-sign-in');\n            }\n            else {\n                _this.signInAfterUserConfirmed(authDetails, null, autoSignInPollingIntervalId);\n            }\n        }, 5000);\n    };\n    AuthClass.prototype.signInAfterUserConfirmed = function (authDetails, listenEvent, autoSignInPollingIntervalId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        user = this.createCognitoUser(authDetails.getUsername());\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, user.authenticateUser(authDetails, this.authCallbacks(user, function (value) {\n                                dispatchAuthEvent('autoSignIn', value, authDetails.getUsername() + \" has signed in successfully\");\n                                if (listenEvent) {\n                                    Hub.remove('auth', listenEvent);\n                                }\n                                if (autoSignInPollingIntervalId) {\n                                    clearInterval(autoSignInPollingIntervalId);\n                                    _this._storage.removeItem('amplify-polling-started');\n                                }\n                                _this._storage.removeItem('amplify-auto-sign-in');\n                            }, function (error) {\n                                logger.error(error);\n                                _this._storage.removeItem('amplify-auto-sign-in');\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        logger.error(error_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send the verification code to confirm sign up\n     * @param {String} username - The username to be confirmed\n     * @param {String} code - The verification code\n     * @param {ConfirmSignUpOptions} options - other options for confirm signup\n     * @return - A promise resolves callback data if success\n     */\n    AuthClass.prototype.confirmSignUp = function (username, code, options) {\n        var _this = this;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        var user = this.createCognitoUser(username);\n        var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean'\n            ? options.forceAliasCreation\n            : true;\n        var clientMetadata;\n        if (options && options.clientMetadata) {\n            clientMetadata = options.clientMetadata;\n        }\n        else if (this._config.clientMetadata) {\n            clientMetadata = this._config.clientMetadata;\n        }\n        return new Promise(function (resolve, reject) {\n            user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    dispatchAuthEvent('confirmSignUp', data, username + \" has been confirmed successfully\");\n                    var autoSignIn = _this.isTrueStorageValue('amplify-auto-sign-in');\n                    if (autoSignIn && !_this.autoSignInInitiated) {\n                        dispatchAuthEvent('autoSignIn_failure', null, AuthErrorTypes.AutoSignInError);\n                        _this._storage.removeItem('amplify-auto-sign-in');\n                    }\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    AuthClass.prototype.isTrueStorageValue = function (value) {\n        var item = this._storage.getItem(value);\n        return item ? item === 'true' : false;\n    };\n    /**\n     * Resend the verification code\n     * @param {String} username - The username to be confirmed\n     * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n     * @return - A promise resolves code delivery details if successful\n     */\n    AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.resendConfirmationCode(function (err, data) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(data);\n                }\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Sign in\n     * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n     * @param {String} pw - The password of the username\n     * @param {ClientMetaData} clientMetadata - Client metadata for custom workflows\n     * @return - A promise resolves the CognitoUser\n     */\n    AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        var username = null;\n        var password = null;\n        var validationData = {};\n        // for backward compatibility\n        if (typeof usernameOrSignInOpts === 'string') {\n            username = usernameOrSignInOpts;\n            password = pw;\n        }\n        else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n            if (typeof pw !== 'undefined') {\n                logger.warn('The password should be defined under the first parameter object!');\n            }\n            username = usernameOrSignInOpts.username;\n            password = usernameOrSignInOpts.password;\n            validationData = usernameOrSignInOpts.validationData;\n        }\n        else {\n            return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var authDetails = new AuthenticationDetails({\n            Username: username,\n            Password: password,\n            ValidationData: validationData,\n            ClientMetadata: clientMetadata,\n        });\n        if (password) {\n            return this.signInWithPassword(authDetails);\n        }\n        else {\n            return this.signInWithoutPassword(authDetails);\n        }\n    };\n    /**\n     * Return an object with the authentication callbacks\n     * @param {CognitoUser} user - the cognito user object\n     * @param {} resolve - function called when resolving the current step\n     * @param {} reject - function called when rejecting the current step\n     * @return - an object with the callback methods for user authentication\n     */\n    AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n        var _this = this;\n        var that = this;\n        return {\n            onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                var cred, e_1, currentUser, e_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug(session);\n                            delete user['challengeName'];\n                            delete user['challengeParam'];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 4, 5, 9]);\n                            return [4 /*yield*/, this.Credentials.clear()];\n                        case 2:\n                            _a.sent();\n                            return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                        case 3:\n                            cred = _a.sent();\n                            logger.debug('succeed to get cognito credentials', cred);\n                            return [3 /*break*/, 9];\n                        case 4:\n                            e_1 = _a.sent();\n                            logger.debug('cannot get cognito credentials', e_1);\n                            return [3 /*break*/, 9];\n                        case 5:\n                            _a.trys.push([5, 7, , 8]);\n                            return [4 /*yield*/, this.currentUserPoolUser()];\n                        case 6:\n                            currentUser = _a.sent();\n                            that.user = currentUser;\n                            dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                            resolve(currentUser);\n                            return [3 /*break*/, 8];\n                        case 7:\n                            e_2 = _a.sent();\n                            logger.error('Failed to get the signed in user', e_2);\n                            reject(e_2);\n                            return [3 /*break*/, 8];\n                        case 8: return [7 /*endfinally*/];\n                        case 9: return [2 /*return*/];\n                    }\n                });\n            }); },\n            onFailure: function (err) {\n                logger.debug('signIn failure', err);\n                dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n                reject(err);\n            },\n            customChallenge: function (challengeParam) {\n                logger.debug('signIn custom challenge answer required');\n                user['challengeName'] = 'CUSTOM_CHALLENGE';\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn MFA required');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            mfaSetup: function (challengeName, challengeParam) {\n                logger.debug('signIn mfa setup', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            newPasswordRequired: function (userAttributes, requiredAttributes) {\n                logger.debug('signIn new password');\n                user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n                user['challengeParam'] = {\n                    userAttributes: userAttributes,\n                    requiredAttributes: requiredAttributes,\n                };\n                resolve(user);\n            },\n            totpRequired: function (challengeName, challengeParam) {\n                logger.debug('signIn totpRequired');\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n            selectMFAType: function (challengeName, challengeParam) {\n                logger.debug('signIn selectMFAType', challengeName);\n                user['challengeName'] = challengeName;\n                user['challengeParam'] = challengeParam;\n                resolve(user);\n            },\n        };\n    };\n    /**\n     * Sign in with a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithPassword = function (authDetails) {\n        var _this = this;\n        if (this.pendingSignIn) {\n            throw new Error('Pending sign-in attempt already in progress');\n        }\n        var user = this.createCognitoUser(authDetails.getUsername());\n        this.pendingSignIn = new Promise(function (resolve, reject) {\n            user.authenticateUser(authDetails, _this.authCallbacks(user, function (value) {\n                _this.pendingSignIn = null;\n                resolve(value);\n            }, function (error) {\n                _this.pendingSignIn = null;\n                reject(error);\n            }));\n        });\n        return this.pendingSignIn;\n    };\n    /**\n     * Sign in without a password\n     * @private\n     * @param {AuthenticationDetails} authDetails - the user sign in data\n     * @return - A promise resolves the CognitoUser object if success or mfa required\n     */\n    AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n        var _this = this;\n        var user = this.createCognitoUser(authDetails.getUsername());\n        user.setAuthenticationFlowType('CUSTOM_AUTH');\n        return new Promise(function (resolve, reject) {\n            user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n        });\n    };\n    /**\n     * This was previously used by an authenticated user to get MFAOptions,\n     * but no longer returns a meaningful response. Refer to the documentation for\n     * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves the current preferred mfa option if success\n     */\n    AuthClass.prototype.getMFAOptions = function (user) {\n        return new Promise(function (res, rej) {\n            user.getMFAOptions(function (err, mfaOptions) {\n                if (err) {\n                    logger.debug('get MFA Options failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('get MFA options success', mfaOptions);\n                res(mfaOptions);\n                return;\n            });\n        });\n    };\n    /**\n     * get preferred mfa method\n     * @param {CognitoUser} user - the current cognito user\n     * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n     */\n    AuthClass.prototype.getPreferredMFA = function (user, params) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n            var bypassCache = params ? params.bypassCache : false;\n            user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                var cleanUpError_1, mfaType;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!err) return [3 /*break*/, 5];\n                            logger.debug('getting preferred mfa failed', err);\n                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            cleanUpError_1 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_1.message));\n                            return [2 /*return*/];\n                        case 4:\n                            rej(err);\n                            return [2 /*return*/];\n                        case 5:\n                            mfaType = that._getMfaTypeFromUserData(data);\n                            if (!mfaType) {\n                                rej('invalid MFA Type');\n                                return [2 /*return*/];\n                            }\n                            else {\n                                res(mfaType);\n                                return [2 /*return*/];\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n        });\n    };\n    AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n        var ret = null;\n        var preferredMFA = data.PreferredMfaSetting;\n        // if the user has used Auth.setPreferredMFA() to setup the mfa type\n        // then the \"PreferredMfaSetting\" would exist in the response\n        if (preferredMFA) {\n            ret = preferredMFA;\n        }\n        else {\n            // if mfaList exists but empty, then its noMFA\n            var mfaList = data.UserMFASettingList;\n            if (!mfaList) {\n                // if SMS was enabled by using Auth.enableSMS(),\n                // the response would contain MFAOptions\n                // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n                // if it does not exist, then it should be NOMFA\n                var MFAOptions = data.MFAOptions;\n                if (MFAOptions) {\n                    ret = 'SMS_MFA';\n                }\n                else {\n                    ret = 'NOMFA';\n                }\n            }\n            else if (mfaList.length === 0) {\n                ret = 'NOMFA';\n            }\n            else {\n                logger.debug('invalid case for getPreferredMFA', data);\n            }\n        }\n        return ret;\n    };\n    AuthClass.prototype._getUserData = function (user, params) {\n        var _this = this;\n        return new Promise(function (res, rej) {\n            user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                var cleanUpError_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!err) return [3 /*break*/, 5];\n                            logger.debug('getting user data failed', err);\n                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            cleanUpError_2 = _a.sent();\n                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_2.message));\n                            return [2 /*return*/];\n                        case 4:\n                            rej(err);\n                            return [2 /*return*/];\n                        case 5:\n                            res(data);\n                            _a.label = 6;\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            }); }, params);\n        });\n    };\n    /**\n     * set preferred MFA method\n     * @param {CognitoUser} user - the current Cognito user\n     * @param {string} mfaMethod - preferred mfa method\n     * @return - A promise resolve if success\n     */\n    AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n        return __awaiter(this, void 0, void 0, function () {\n            var clientMetadata, userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        clientMetadata = this._config.clientMetadata;\n                        return [4 /*yield*/, this._getUserData(user, {\n                                bypassCache: true,\n                                clientMetadata: clientMetadata,\n                            })];\n                    case 1:\n                        userData = _b.sent();\n                        smsMfaSettings = null;\n                        totpMfaSettings = null;\n                        _a = mfaMethod;\n                        switch (_a) {\n                            case 'TOTP': return [3 /*break*/, 2];\n                            case 'SOFTWARE_TOKEN_MFA': return [3 /*break*/, 2];\n                            case 'SMS': return [3 /*break*/, 3];\n                            case 'SMS_MFA': return [3 /*break*/, 3];\n                            case 'NOMFA': return [3 /*break*/, 4];\n                        }\n                        return [3 /*break*/, 6];\n                    case 2:\n                        totpMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 3:\n                        smsMfaSettings = {\n                            PreferredMfa: true,\n                            Enabled: true,\n                        };\n                        return [3 /*break*/, 7];\n                    case 4:\n                        mfaList = userData['UserMFASettingList'];\n                        return [4 /*yield*/, this._getMfaTypeFromUserData(userData)];\n                    case 5:\n                        currentMFAType = _b.sent();\n                        if (currentMFAType === 'NOMFA') {\n                            return [2 /*return*/, Promise.resolve('No change for mfa type')];\n                        }\n                        else if (currentMFAType === 'SMS_MFA') {\n                            smsMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n                            totpMfaSettings = {\n                                PreferredMfa: false,\n                                Enabled: false,\n                            };\n                        }\n                        else {\n                            return [2 /*return*/, this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n                        }\n                        // if there is a UserMFASettingList in the response\n                        // we need to disable every mfa type in that list\n                        if (mfaList && mfaList.length !== 0) {\n                            // to disable SMS or TOTP if exists in that list\n                            mfaList.forEach(function (mfaType) {\n                                if (mfaType === 'SMS_MFA') {\n                                    smsMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                                else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                                    totpMfaSettings = {\n                                        PreferredMfa: false,\n                                        Enabled: false,\n                                    };\n                                }\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        logger.debug('no validmfa method provided');\n                        return [2 /*return*/, this.rejectAuthError(AuthErrorTypes.NoMFA)];\n                    case 7:\n                        that = this;\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                                    if (err) {\n                                        logger.debug('Set user mfa preference error', err);\n                                        return rej(err);\n                                    }\n                                    logger.debug('Set user mfa success', result);\n                                    logger.debug('Caching the latest user data into local');\n                                    // cache the latest result into user data\n                                    user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                                        var cleanUpError_3;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (!err) return [3 /*break*/, 5];\n                                                    logger.debug('getting user data failed', err);\n                                                    if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                                case 2:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    cleanUpError_3 = _a.sent();\n                                                    rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_3.message));\n                                                    return [2 /*return*/];\n                                                case 4: return [2 /*return*/, rej(err)];\n                                                case 5: return [2 /*return*/, res(result)];\n                                            }\n                                        });\n                                    }); }, {\n                                        bypassCache: true,\n                                        clientMetadata: clientMetadata,\n                                    });\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * disable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.disableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.disableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('disable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('disable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * enable SMS\n     * @deprecated\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.enableSMS = function (user) {\n        return new Promise(function (res, rej) {\n            user.enableMFA(function (err, data) {\n                if (err) {\n                    logger.debug('enable mfa failed', err);\n                    rej(err);\n                    return;\n                }\n                logger.debug('enable mfa succeed', data);\n                res(data);\n                return;\n            });\n        });\n    };\n    /**\n     * Setup TOTP\n     * @param {CognitoUser} user - the current user\n     * @return - A promise resolves with the secret code if success\n     */\n    AuthClass.prototype.setupTOTP = function (user) {\n        return new Promise(function (res, rej) {\n            user.associateSoftwareToken({\n                onFailure: function (err) {\n                    logger.debug('associateSoftwareToken failed', err);\n                    rej(err);\n                    return;\n                },\n                associateSecretCode: function (secretCode) {\n                    logger.debug('associateSoftwareToken success', secretCode);\n                    res(secretCode);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * verify TOTP setup\n     * @param {CognitoUser} user - the current user\n     * @param {string} challengeAnswer - challenge answer\n     * @return - A promise resolves is success\n     */\n    AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n        logger.debug('verification totp token', user, challengeAnswer);\n        var signInUserSession;\n        if (user && typeof user.getSignInUserSession === 'function') {\n            signInUserSession = user.getSignInUserSession();\n        }\n        var isLoggedIn = signInUserSession === null || signInUserSession === void 0 ? void 0 : signInUserSession.isValid();\n        return new Promise(function (res, rej) {\n            user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n                onFailure: function (err) {\n                    logger.debug('verifyTotpToken failed', err);\n                    rej(err);\n                    return;\n                },\n                onSuccess: function (data) {\n                    if (!isLoggedIn) {\n                        dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                    }\n                    dispatchAuthEvent('verify', user, \"A user \" + user.getUsername() + \" has been verified\");\n                    logger.debug('verifyTotpToken success', data);\n                    res(data);\n                    return;\n                },\n            });\n        });\n    };\n    /**\n     * Send MFA code to confirm sign in\n     * @param {Object} user - The CognitoUser object\n     * @param {String} code - The confirmation code\n     */\n    AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendMFACode(code, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_3, currentUser, e_4;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 10]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 10];\n                            case 4:\n                                e_3 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_3);\n                                return [3 /*break*/, 10];\n                            case 5:\n                                that.user = user;\n                                _a.label = 6;\n                            case 6:\n                                _a.trys.push([6, 8, , 9]);\n                                return [4 /*yield*/, this.currentUserPoolUser()];\n                            case 7:\n                                currentUser = _a.sent();\n                                user.attributes = currentUser.attributes;\n                                return [3 /*break*/, 9];\n                            case 8:\n                                e_4 = _a.sent();\n                                logger.debug('cannot get updated Cognito User', e_4);\n                                return [3 /*break*/, 9];\n                            case 9:\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 10: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('confirm signIn failure', err);\n                    reject(err);\n                },\n            }, mfaType, clientMetadata);\n        });\n    };\n    AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n        var _this = this;\n        if (requiredAttributes === void 0) { requiredAttributes = {}; }\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.completeNewPasswordChallenge(password, requiredAttributes, {\n                onSuccess: function (session) { return __awaiter(_this, void 0, void 0, function () {\n                    var cred, e_5;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                logger.debug(session);\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 4, 5, 6]);\n                                return [4 /*yield*/, this.Credentials.clear()];\n                            case 2:\n                                _a.sent();\n                                return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                            case 3:\n                                cred = _a.sent();\n                                logger.debug('succeed to get cognito credentials', cred);\n                                return [3 /*break*/, 6];\n                            case 4:\n                                e_5 = _a.sent();\n                                logger.debug('cannot get cognito credentials', e_5);\n                                return [3 /*break*/, 6];\n                            case 5:\n                                that.user = user;\n                                dispatchAuthEvent('signIn', user, \"A user \" + user.getUsername() + \" has been signed in\");\n                                resolve(user);\n                                return [7 /*endfinally*/];\n                            case 6: return [2 /*return*/];\n                        }\n                    });\n                }); },\n                onFailure: function (err) {\n                    logger.debug('completeNewPassword failure', err);\n                    dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n                    reject(err);\n                },\n                mfaRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn MFA required');\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                mfaSetup: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n                totpRequired: function (challengeName, challengeParam) {\n                    logger.debug('signIn mfa setup', challengeName);\n                    user['challengeName'] = challengeName;\n                    user['challengeParam'] = challengeParam;\n                    resolve(user);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Send the answer to a custom challenge\n     * @param {CognitoUser} user - The CognitoUser object\n     * @param {String} challengeResponses - The confirmation code\n     */\n    AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!challengeResponses) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n        }\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n        });\n    };\n    /**\n     * Delete an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.deleteUserAttributes = function (user, attributeNames) {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                user.deleteAttributes(attributeNames, function (err, result) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(result);\n                    }\n                });\n            });\n        });\n    };\n    /**\n     * Delete the current authenticated user\n     * @return {Promise}\n     **/\n    // TODO: Check return type void\n    AuthClass.prototype.deleteUser = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_6, isSignedInHostedUI;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_6 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_6);\n                        throw new Error(e_6);\n                    case 3:\n                        isSignedInHostedUI = this._oAuthHandler &&\n                            this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n                        return [2 /*return*/, new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n                                var user_1;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    if (this.userPool) {\n                                        user_1 = this.userPool.getCurrentUser();\n                                        if (!user_1) {\n                                            logger.debug('Failed to get user from user pool');\n                                            return [2 /*return*/, rej(new Error('No current user.'))];\n                                        }\n                                        else {\n                                            user_1.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                                                var cleanUpError_4;\n                                                var _this = this;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            if (!err) return [3 /*break*/, 5];\n                                                            logger.debug('Failed to get the user session', err);\n                                                            if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                            _a.label = 1;\n                                                        case 1:\n                                                            _a.trys.push([1, 3, , 4]);\n                                                            return [4 /*yield*/, this.cleanUpInvalidSession(user_1)];\n                                                        case 2:\n                                                            _a.sent();\n                                                            return [3 /*break*/, 4];\n                                                        case 3:\n                                                            cleanUpError_4 = _a.sent();\n                                                            rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_4.message));\n                                                            return [2 /*return*/];\n                                                        case 4: return [2 /*return*/, rej(err)];\n                                                        case 5:\n                                                            user_1.deleteUser(function (err, result) {\n                                                                if (err) {\n                                                                    rej(err);\n                                                                }\n                                                                else {\n                                                                    dispatchAuthEvent('userDeleted', result, 'The authenticated user has been deleted.');\n                                                                    user_1.signOut();\n                                                                    _this.user = null;\n                                                                    try {\n                                                                        _this.cleanCachedItems(); // clean aws credentials\n                                                                    }\n                                                                    catch (e) {\n                                                                        // TODO: change to rejects in refactor\n                                                                        logger.debug('failed to clear cached items');\n                                                                    }\n                                                                    if (isSignedInHostedUI) {\n                                                                        _this.oAuthSignOutRedirect(res, rej);\n                                                                    }\n                                                                    else {\n                                                                        dispatchAuthEvent('signOut', _this.user, \"A user has been signed out\");\n                                                                        res(result);\n                                                                    }\n                                                                }\n                                                            });\n                                                            _a.label = 6;\n                                                        case 6: return [2 /*return*/];\n                                                    }\n                                                });\n                                            }); });\n                                        }\n                                    }\n                                    else {\n                                        logger.debug('no Congito User pool');\n                                        rej(new Error('Cognito User pool does not exist'));\n                                    }\n                                    return [2 /*return*/];\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    /**\n     * Update an authenticated users' attributes\n     * @param {CognitoUser} - The currently logged in user object\n     * @return {Promise}\n     **/\n    AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        var attributeList = [];\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            that.userSession(user).then(function (session) {\n                for (var key in attributes) {\n                    if (key !== 'sub' && key.indexOf('_verified') < 0) {\n                        var attr = {\n                            Name: key,\n                            Value: attributes[key],\n                        };\n                        attributeList.push(attr);\n                    }\n                }\n                user.updateAttributes(attributeList, function (err, result, details) {\n                    if (err) {\n                        dispatchAuthEvent('updateUserAttributes_failure', err, 'Failed to update attributes');\n                        return reject(err);\n                    }\n                    else {\n                        var attrs = _this.createUpdateAttributesResultList(attributes, details === null || details === void 0 ? void 0 : details.CodeDeliveryDetailsList);\n                        dispatchAuthEvent('updateUserAttributes', attrs, 'Attributes successfully updated');\n                        return resolve(result);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    AuthClass.prototype.createUpdateAttributesResultList = function (attributes, codeDeliveryDetailsList) {\n        var attrs = {};\n        Object.keys(attributes).forEach(function (key) {\n            attrs[key] = {\n                isUpdated: true,\n            };\n            var codeDeliveryDetails = codeDeliveryDetailsList === null || codeDeliveryDetailsList === void 0 ? void 0 : codeDeliveryDetailsList.find(function (value) { return value.AttributeName === key; });\n            if (codeDeliveryDetails) {\n                attrs[key].isUpdated = false;\n                attrs[key].codeDeliveryDetails = codeDeliveryDetails;\n            }\n        });\n        return attrs;\n    };\n    /**\n     * Return user attributes\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to user attributes if success\n     */\n    AuthClass.prototype.userAttributes = function (user) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.getUserAttributes(function (err, attributes) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(attributes);\n                    }\n                });\n            });\n        });\n    };\n    AuthClass.prototype.verifiedContact = function (user) {\n        var that = this;\n        return this.userAttributes(user).then(function (attributes) {\n            var attrs = that.attributesToObject(attributes);\n            var unverified = {};\n            var verified = {};\n            if (attrs['email']) {\n                if (attrs['email_verified']) {\n                    verified['email'] = attrs['email'];\n                }\n                else {\n                    unverified['email'] = attrs['email'];\n                }\n            }\n            if (attrs['phone_number']) {\n                if (attrs['phone_number_verified']) {\n                    verified['phone_number'] = attrs['phone_number'];\n                }\n                else {\n                    unverified['phone_number'] = attrs['phone_number'];\n                }\n            }\n            return {\n                verified: verified,\n                unverified: unverified,\n            };\n        });\n    };\n    AuthClass.prototype.isErrorWithMessage = function (err) {\n        return (typeof err === 'object' &&\n            Object.prototype.hasOwnProperty.call(err, 'message'));\n    };\n    // Session revoked by another app\n    AuthClass.prototype.isTokenRevokedError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Access Token has been revoked');\n    };\n    AuthClass.prototype.isRefreshTokenRevokedError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Refresh Token has been revoked');\n    };\n    AuthClass.prototype.isUserDisabledError = function (err) {\n        return this.isErrorWithMessage(err) && err.message === 'User is disabled.';\n    };\n    AuthClass.prototype.isUserDoesNotExistError = function (err) {\n        return (this.isErrorWithMessage(err) && err.message === 'User does not exist.');\n    };\n    AuthClass.prototype.isRefreshTokenExpiredError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Refresh Token has expired');\n    };\n    AuthClass.prototype.isPasswordResetRequiredError = function (err) {\n        return (this.isErrorWithMessage(err) &&\n            err.message === 'Password reset required for the user');\n    };\n    AuthClass.prototype.isSignedInHostedUI = function () {\n        return (this._oAuthHandler &&\n            this._storage.getItem('amplify-signin-with-hostedUI') === 'true');\n    };\n    AuthClass.prototype.isSessionInvalid = function (err) {\n        return (this.isUserDisabledError(err) ||\n            this.isUserDoesNotExistError(err) ||\n            this.isTokenRevokedError(err) ||\n            this.isRefreshTokenRevokedError(err) ||\n            this.isRefreshTokenExpiredError(err) ||\n            this.isPasswordResetRequiredError(err));\n    };\n    AuthClass.prototype.cleanUpInvalidSession = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_7;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        user.signOut();\n                        this.user = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.cleanCachedItems()];\n                    case 2:\n                        _a.sent(); // clean aws credentials\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_7 = _a.sent();\n                        logger.debug('failed to clear cached items');\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (this.isSignedInHostedUI()) {\n                            return [2 /*return*/, new Promise(function (res, rej) {\n                                    _this.oAuthSignOutRedirect(res, rej);\n                                })];\n                        }\n                        else {\n                            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get current authenticated user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentUserPoolUser = function (params) {\n        var _this = this;\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        return new Promise(function (res, rej) {\n            _this._storageSync\n                .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                var user, session, bypassCache, clientMetadata, _a, scope, err_1;\n                var _this = this;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (!this.isOAuthInProgress()) return [3 /*break*/, 2];\n                            logger.debug('OAuth signIn in progress, waiting for resolution...');\n                            return [4 /*yield*/, new Promise(function (res) {\n                                    var timeoutId = setTimeout(function () {\n                                        logger.debug('OAuth signIn in progress timeout');\n                                        Hub.remove('auth', hostedUISignCallback);\n                                        res();\n                                    }, OAUTH_FLOW_MS_TIMEOUT);\n                                    Hub.listen('auth', hostedUISignCallback);\n                                    function hostedUISignCallback(_a) {\n                                        var payload = _a.payload;\n                                        var event = payload.event;\n                                        if (event === 'cognitoHostedUI' ||\n                                            event === 'cognitoHostedUI_failure') {\n                                            logger.debug(\"OAuth signIn resolved: \" + event);\n                                            clearTimeout(timeoutId);\n                                            Hub.remove('auth', hostedUISignCallback);\n                                            res();\n                                        }\n                                    }\n                                })];\n                        case 1:\n                            _b.sent();\n                            _b.label = 2;\n                        case 2:\n                            user = this.userPool.getCurrentUser();\n                            if (!user) {\n                                logger.debug('Failed to get user from user pool');\n                                rej('No current user');\n                                return [2 /*return*/];\n                            }\n                            _b.label = 3;\n                        case 3:\n                            _b.trys.push([3, 7, , 8]);\n                            return [4 /*yield*/, this._userSession(user)];\n                        case 4:\n                            session = _b.sent();\n                            bypassCache = params ? params.bypassCache : false;\n                            if (!bypassCache) return [3 /*break*/, 6];\n                            return [4 /*yield*/, this.Credentials.clear()];\n                        case 5:\n                            _b.sent();\n                            _b.label = 6;\n                        case 6:\n                            clientMetadata = this._config.clientMetadata;\n                            _a = session.getAccessToken().decodePayload().scope, scope = _a === void 0 ? '' : _a;\n                            if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n                                user.getUserData(function (err, data) { return __awaiter(_this, void 0, void 0, function () {\n                                    var cleanUpError_5, preferredMFA, attributeList, i, attribute, userAttribute, attributes;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                if (!err) return [3 /*break*/, 7];\n                                                logger.debug('getting user data failed', err);\n                                                if (!this.isSessionInvalid(err)) return [3 /*break*/, 5];\n                                                _a.label = 1;\n                                            case 1:\n                                                _a.trys.push([1, 3, , 4]);\n                                                return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                            case 2:\n                                                _a.sent();\n                                                return [3 /*break*/, 4];\n                                            case 3:\n                                                cleanUpError_5 = _a.sent();\n                                                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_5.message));\n                                                return [2 /*return*/];\n                                            case 4:\n                                                rej(err);\n                                                return [3 /*break*/, 6];\n                                            case 5:\n                                                res(user);\n                                                _a.label = 6;\n                                            case 6: return [2 /*return*/];\n                                            case 7:\n                                                preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n                                                attributeList = [];\n                                                for (i = 0; i < data.UserAttributes.length; i++) {\n                                                    attribute = {\n                                                        Name: data.UserAttributes[i].Name,\n                                                        Value: data.UserAttributes[i].Value,\n                                                    };\n                                                    userAttribute = new CognitoUserAttribute(attribute);\n                                                    attributeList.push(userAttribute);\n                                                }\n                                                attributes = this.attributesToObject(attributeList);\n                                                Object.assign(user, { attributes: attributes, preferredMFA: preferredMFA });\n                                                return [2 /*return*/, res(user)];\n                                        }\n                                    });\n                                }); }, { bypassCache: bypassCache, clientMetadata: clientMetadata });\n                            }\n                            else {\n                                logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" +\n                                    \"is not in the scopes of the access token\");\n                                return [2 /*return*/, res(user)];\n                            }\n                            return [3 /*break*/, 8];\n                        case 7:\n                            err_1 = _b.sent();\n                            rej(err_1);\n                            return [3 /*break*/, 8];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (e) {\n                logger.debug('Failed to sync cache info into memory', e);\n                return rej(e);\n            });\n        });\n    };\n    AuthClass.prototype.isOAuthInProgress = function () {\n        return this.oAuthFlowInProgress;\n    };\n    /**\n     * Get current authenticated user\n     * @param {CurrentUserOpts} - options for getting the current user\n     * @return - A promise resolves to current authenticated CognitoUser if success\n     */\n    AuthClass.prototype.currentAuthenticatedUser = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var federatedUser, e_8, federatedInfo, user, e_9;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting current authenticated user');\n                        federatedUser = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_8 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_8);\n                        throw e_8;\n                    case 4:\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                            if (federatedInfo) {\n                                federatedUser = __assign(__assign({}, federatedInfo.user), { token: federatedInfo.token });\n                            }\n                        }\n                        catch (e) {\n                            logger.debug('cannot load federated user from auth storage');\n                        }\n                        if (!federatedUser) return [3 /*break*/, 5];\n                        this.user = federatedUser;\n                        logger.debug('get current authenticated federated user', this.user);\n                        return [2 /*return*/, this.user];\n                    case 5:\n                        logger.debug('get current authenticated userpool user');\n                        user = null;\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, this.currentUserPoolUser(params)];\n                    case 7:\n                        user = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        e_9 = _a.sent();\n                        if (e_9 === 'No userPool') {\n                            logger.error('Cannot get the current user because the user pool is missing. ' +\n                                'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n                        }\n                        logger.debug('The user is not authenticated by the error', e_9);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 9:\n                        this.user = user;\n                        return [2 /*return*/, this.user];\n                }\n            });\n        });\n    };\n    /**\n     * Get current user's session\n     * @return - A promise resolves to session object if success\n     */\n    AuthClass.prototype.currentSession = function () {\n        var that = this;\n        logger.debug('Getting current session');\n        // Purposely not calling the reject method here because we don't need a console error\n        if (!this.userPool) {\n            return Promise.reject(new Error('No User Pool in the configuration.'));\n        }\n        return new Promise(function (res, rej) {\n            that\n                .currentUserPoolUser()\n                .then(function (user) {\n                that\n                    .userSession(user)\n                    .then(function (session) {\n                    res(session);\n                    return;\n                })\n                    .catch(function (e) {\n                    logger.debug('Failed to get the current session', e);\n                    rej(e);\n                    return;\n                });\n            })\n                .catch(function (e) {\n                logger.debug('Failed to get the current user', e);\n                rej(e);\n                return;\n            });\n        });\n    };\n    AuthClass.prototype._userSession = function (user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var clientMetadata, userSession;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!user) {\n                            logger.debug('the user is null');\n                            return [2 /*return*/, this.rejectAuthError(AuthErrorTypes.NoUserSession)];\n                        }\n                        clientMetadata = this._config.clientMetadata;\n                        // Debouncing the concurrent userSession calls by caching the promise.\n                        // This solution assumes users will always call this function with the same CognitoUser instance.\n                        if (this.inflightSessionPromiseCounter === 0) {\n                            this.inflightSessionPromise = new Promise(function (res, rej) {\n                                user.getSession(function (err, session) { return __awaiter(_this, void 0, void 0, function () {\n                                    var cleanUpError_6;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                if (!err) return [3 /*break*/, 5];\n                                                logger.debug('Failed to get the session from user', user);\n                                                if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                _a.label = 1;\n                                            case 1:\n                                                _a.trys.push([1, 3, , 4]);\n                                                return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                            case 2:\n                                                _a.sent();\n                                                return [3 /*break*/, 4];\n                                            case 3:\n                                                cleanUpError_6 = _a.sent();\n                                                rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_6.message));\n                                                return [2 /*return*/];\n                                            case 4:\n                                                rej(err);\n                                                return [2 /*return*/];\n                                            case 5:\n                                                logger.debug('Succeed to get the user session', session);\n                                                res(session);\n                                                return [2 /*return*/];\n                                        }\n                                    });\n                                }); }, { clientMetadata: clientMetadata });\n                            });\n                        }\n                        this.inflightSessionPromiseCounter++;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        return [4 /*yield*/, this.inflightSessionPromise];\n                    case 2:\n                        userSession = _a.sent();\n                        // Set private member. Avoid user.setSignInUserSession() to prevent excessive localstorage refresh.\n                        // @ts-ignore\n                        user.signInUserSession = userSession;\n                        return [2 /*return*/, userSession];\n                    case 3:\n                        this.inflightSessionPromiseCounter--;\n                        return [7 /*endfinally*/];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get the corresponding user session\n     * @param {Object} user - The CognitoUser object\n     * @return - A promise resolves to the session\n     */\n    AuthClass.prototype.userSession = function (user) {\n        return this._userSession(user);\n    };\n    /**\n     * Get authenticated credentials of current user.\n     * @return - A promise resolves to be current user's credentials\n     */\n    AuthClass.prototype.currentUserCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_10, federatedInfo;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('Getting current user credentials');\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_10 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_10);\n                        throw e_10;\n                    case 4:\n                        federatedInfo = null;\n                        try {\n                            federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n                        }\n                        catch (e) {\n                            logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n                        }\n                        if (federatedInfo) {\n                            // refresh the jwt token here if necessary\n                            return [2 /*return*/, this.Credentials.refreshFederatedToken(federatedInfo)];\n                        }\n                        else {\n                            return [2 /*return*/, this.currentSession()\n                                    .then(function (session) {\n                                    logger.debug('getting session success', session);\n                                    return _this.Credentials.set(session, 'session');\n                                })\n                                    .catch(function () {\n                                    logger.debug('getting guest credentials');\n                                    return _this.Credentials.set(null, 'guest');\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.currentCredentials = function () {\n        logger.debug('getting current credentials');\n        return this.Credentials.get();\n    };\n    /**\n     * Initiate an attribute confirmation request\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attributes to be verified\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            user.getAttributeVerificationCode(attr, {\n                onSuccess: function (success) {\n                    return resolve(success);\n                },\n                onFailure: function (err) {\n                    return reject(err);\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm an attribute using a confirmation code\n     * @param {Object} user - The CognitoUser\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        return new Promise(function (resolve, reject) {\n            user.verifyAttribute(attr, code, {\n                onSuccess: function (data) {\n                    resolve(data);\n                    return;\n                },\n                onFailure: function (err) {\n                    reject(err);\n                    return;\n                },\n            });\n        });\n    };\n    AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttribute(user, attr); });\n    };\n    /**\n     * Confirm current user's attribute using a confirmation code\n     * @param {Object} attr - The attribute to be verified\n     * @param {String} code - The confirmation code\n     * @return - A promise resolves to callback data if success\n     */\n    AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n        var that = this;\n        return that\n            .currentUserPoolUser()\n            .then(function (user) { return that.verifyUserAttributeSubmit(user, attr, code); });\n    };\n    AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_11, isSignedInHostedUI;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_11 = _a.sent();\n                        logger.debug('Failed to sync cache info into memory', e_11);\n                        throw e_11;\n                    case 3:\n                        isSignedInHostedUI = this._oAuthHandler &&\n                            this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                if (opts && opts.global) {\n                                    logger.debug('user global sign out', user);\n                                    // in order to use global signout\n                                    // we must validate the user as an authenticated user by using getSession\n                                    var clientMetadata = _this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n                                    user.getSession(function (err, result) { return __awaiter(_this, void 0, void 0, function () {\n                                        var cleanUpError_7;\n                                        var _this = this;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (!err) return [3 /*break*/, 5];\n                                                    logger.debug('failed to get the user session', err);\n                                                    if (!this.isSessionInvalid(err)) return [3 /*break*/, 4];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.cleanUpInvalidSession(user)];\n                                                case 2:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    cleanUpError_7 = _a.sent();\n                                                    rej(new Error(\"Session is invalid due to: \" + err.message + \" and failed to clean up invalid session: \" + cleanUpError_7.message));\n                                                    return [2 /*return*/];\n                                                case 4: return [2 /*return*/, rej(err)];\n                                                case 5:\n                                                    user.globalSignOut({\n                                                        onSuccess: function (data) {\n                                                            logger.debug('global sign out success');\n                                                            if (isSignedInHostedUI) {\n                                                                _this.oAuthSignOutRedirect(res, rej);\n                                                            }\n                                                            else {\n                                                                return res();\n                                                            }\n                                                        },\n                                                        onFailure: function (err) {\n                                                            logger.debug('global sign out failed', err);\n                                                            return rej(err);\n                                                        },\n                                                    });\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); }, { clientMetadata: clientMetadata });\n                                }\n                                else {\n                                    logger.debug('user sign out', user);\n                                    user.signOut(function () {\n                                        if (isSignedInHostedUI) {\n                                            _this.oAuthSignOutRedirect(res, rej);\n                                        }\n                                        else {\n                                            return res();\n                                        }\n                                    });\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.oAuthSignOutRedirect = function (resolve, reject) {\n        var isBrowser = browserOrNode().isBrowser;\n        if (isBrowser) {\n            this.oAuthSignOutRedirectOrReject(reject);\n        }\n        else {\n            this.oAuthSignOutAndResolve(resolve);\n        }\n    };\n    AuthClass.prototype.oAuthSignOutAndResolve = function (resolve) {\n        this._oAuthHandler.signOut();\n        resolve();\n    };\n    AuthClass.prototype.oAuthSignOutRedirectOrReject = function (reject) {\n        this._oAuthHandler.signOut(); // this method redirects url\n        // App should be redirected to another url otherwise it will reject\n        setTimeout(function () { return reject(Error('Signout timeout fail')); }, 3000);\n    };\n    /**\n     * Sign out method\n     * @\n     * @return - A promise resolved if success\n     */\n    AuthClass.prototype.signOut = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_12, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.cleanCachedItems()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_12 = _a.sent();\n                        logger.debug('failed to clear cached items');\n                        return [3 /*break*/, 3];\n                    case 3:\n                        if (!this.userPool) return [3 /*break*/, 7];\n                        user = this.userPool.getCurrentUser();\n                        if (!user) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.cognitoIdentitySignOut(opts, user)];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        logger.debug('no current Cognito user');\n                        _a.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        logger.debug('no Cognito User pool');\n                        _a.label = 8;\n                    case 8:\n                        /**\n                         * Note for future refactor - no reliable way to get username with\n                         * Cognito User Pools vs Identity when federating with Social Providers\n                         * This is why we need a well structured session object that can be inspected\n                         * and information passed back in the message below for Hub dispatch\n                         */\n                        dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n                        this.user = null;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.cleanCachedItems = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // clear cognito cached item\n                    return [4 /*yield*/, this.Credentials.clear()];\n                    case 1:\n                        // clear cognito cached item\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Change a password for an authenticated user\n     * @param {Object} user - The CognitoUser object\n     * @param {String} oldPassword - the current password\n     * @param {String} newPassword - the requested new password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n        var _this = this;\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        return new Promise(function (resolve, reject) {\n            _this.userSession(user).then(function (session) {\n                user.changePassword(oldPassword, newPassword, function (err, data) {\n                    if (err) {\n                        logger.debug('change password failure', err);\n                        return reject(err);\n                    }\n                    else {\n                        return resolve(data);\n                    }\n                }, clientMetadata);\n            });\n        });\n    };\n    /**\n     * Initiate a forgot password request\n     * @param {String} username - the username to change password\n     * @return - A promise resolves if success\n     */\n    AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.forgotPassword({\n                onSuccess: function () {\n                    resolve();\n                    return;\n                },\n                onFailure: function (err) {\n                    logger.debug('forgot password failure', err);\n                    dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n                    reject(err);\n                    return;\n                },\n                inputVerificationCode: function (data) {\n                    dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n                    resolve(data);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Confirm a new password using a confirmation Code\n     * @param {String} username - The username\n     * @param {String} code - The confirmation code\n     * @param {String} password - The new password\n     * @return - A promise that resolves if success\n     */\n    AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n        if (clientMetadata === void 0) { clientMetadata = this._config.clientMetadata; }\n        if (!this.userPool) {\n            return this.rejectNoUserPool();\n        }\n        if (!username) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n        }\n        if (!code) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n        }\n        if (!password) {\n            return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n        }\n        var user = this.createCognitoUser(username);\n        return new Promise(function (resolve, reject) {\n            user.confirmPassword(code, password, {\n                onSuccess: function (success) {\n                    dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n                    resolve(success);\n                    return;\n                },\n                onFailure: function (err) {\n                    dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n                    reject(err);\n                    return;\n                },\n            }, clientMetadata);\n        });\n    };\n    /**\n     * Get user information\n     * @async\n     * @return {Object }- current User's information\n     */\n    AuthClass.prototype.currentUserInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var source, user, attributes, userAttrs, credentials, e_13, info, err_2, user;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = this.Credentials.getCredSource();\n                        if (!(!source || source === 'aws' || source === 'userPool')) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.currentUserPoolUser().catch(function (err) {\n                                return logger.error(err);\n                            })];\n                    case 1:\n                        user = _a.sent();\n                        if (!user) {\n                            return [2 /*return*/, null];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 8, , 9]);\n                        return [4 /*yield*/, this.userAttributes(user)];\n                    case 3:\n                        attributes = _a.sent();\n                        userAttrs = this.attributesToObject(attributes);\n                        credentials = null;\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.currentCredentials()];\n                    case 5:\n                        credentials = _a.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        e_13 = _a.sent();\n                        logger.debug('Failed to retrieve credentials while getting current user info', e_13);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        info = {\n                            id: credentials ? credentials.identityId : undefined,\n                            username: user.getUsername(),\n                            attributes: userAttrs,\n                        };\n                        return [2 /*return*/, info];\n                    case 8:\n                        err_2 = _a.sent();\n                        logger.error('currentUserInfo error', err_2);\n                        return [2 /*return*/, {}];\n                    case 9:\n                        if (source === 'federated') {\n                            user = this.user;\n                            return [2 /*return*/, user ? user : {}];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._config.identityPoolId && !this._config.userPoolId) {\n                            throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n                        }\n                        // Ensure backwards compatability\n                        if (typeof providerOrOptions === 'undefined') {\n                            if (this._config.identityPoolId && !this._config.userPoolId) {\n                                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n                            }\n                        }\n                        if (!(isFederatedSignInOptions(providerOrOptions) ||\n                            isFederatedSignInOptionsCustom(providerOrOptions) ||\n                            hasCustomState(providerOrOptions) ||\n                            typeof providerOrOptions === 'undefined')) return [3 /*break*/, 1];\n                        options = providerOrOptions || {\n                            provider: CognitoHostedUIIdentityProvider.Cognito,\n                        };\n                        provider = isFederatedSignInOptions(options)\n                            ? options.provider\n                            : options.customProvider;\n                        customState = isFederatedSignInOptions(options)\n                            ? options.customState\n                            : options.customState;\n                        if (this._config.userPoolId) {\n                            client_id = isCognitoHostedOpts(this._config.oauth)\n                                ? this._config.userPoolWebClientId\n                                : this._config.oauth.clientID;\n                            redirect_uri = isCognitoHostedOpts(this._config.oauth)\n                                ? this._config.oauth.redirectSignIn\n                                : this._config.oauth.redirectUri;\n                            this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        provider = providerOrOptions;\n                        // To check if the user is already logged in\n                        try {\n                            loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n                            if (loggedInUser) {\n                                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n                            }\n                        }\n                        catch (e) { }\n                        token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n                        return [4 /*yield*/, this.Credentials.set({ provider: provider, token: token, identity_id: identity_id, user: user, expires_at: expires_at }, 'federation')];\n                    case 2:\n                        credentials = _a.sent();\n                        return [4 /*yield*/, this.currentAuthenticatedUser()];\n                    case 3:\n                        currentUser = _a.sent();\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n                        logger.debug('federated sign in credentials', credentials);\n                        return [2 /*return*/, credentials];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Used to complete the OAuth flow with or without the Cognito Hosted UI\n     * @param {String} URL - optional parameter for customers to pass in the response URL\n     */\n    AuthClass.prototype._handleAuthResponse = function (URL) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, customState, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.oAuthFlowInProgress) {\n                            logger.debug(\"Skipping URL \" + URL + \" current flow in progress\");\n                            return [2 /*return*/];\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 8, 9]);\n                        this.oAuthFlowInProgress = true;\n                        if (!this._config.userPoolId) {\n                            throw new Error(\"OAuth responses require a User Pool defined in config\");\n                        }\n                        dispatchAuthEvent('parsingCallbackUrl', { url: URL }, \"The callback url is being parsed\");\n                        currentUrl = URL || (browserOrNode().isBrowser ? window.location.href : '');\n                        hasCodeOrError = !!(parse(currentUrl).query || '')\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'code' || k === 'error';\n                        });\n                        hasTokenOrError = !!(parse(currentUrl).hash || '#')\n                            .substr(1)\n                            .split('&')\n                            .map(function (entry) { return entry.split('='); })\n                            .find(function (_a) {\n                            var _b = __read(_a, 1), k = _b[0];\n                            return k === 'access_token' || k === 'error';\n                        });\n                        if (!(hasCodeOrError || hasTokenOrError)) return [3 /*break*/, 7];\n                        this._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this._oAuthHandler.handleAuthResponse(currentUrl)];\n                    case 3:\n                        _a = _b.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n                        session = new CognitoUserSession({\n                            IdToken: new CognitoIdToken({ IdToken: idToken }),\n                            RefreshToken: new CognitoRefreshToken({\n                                RefreshToken: refreshToken,\n                            }),\n                            AccessToken: new CognitoAccessToken({\n                                AccessToken: accessToken,\n                            }),\n                        });\n                        credentials = void 0;\n                        if (!this._config.identityPoolId) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.Credentials.set(session, 'session')];\n                    case 4:\n                        credentials = _b.sent();\n                        logger.debug('AWS credentials', credentials);\n                        _b.label = 5;\n                    case 5:\n                        isCustomStateIncluded = /-/.test(state);\n                        currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']);\n                        // This calls cacheTokens() in Cognito SDK\n                        currentUser.setSignInUserSession(session);\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState(window.history.state, '', this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n                        dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n                        if (isCustomStateIncluded) {\n                            customState = state.split('-').splice(1).join('-');\n                            dispatchAuthEvent('customOAuthState', urlSafeDecode(customState), \"State for user \" + currentUser.getUsername());\n                        }\n                        //#endregion\n                        return [2 /*return*/, credentials];\n                    case 6:\n                        err_3 = _b.sent();\n                        logger.debug('Error in cognito hosted auth response', err_3);\n                        // Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n                        // Otherwise, reloading the page will throw errors as the `code` has already been spent.\n                        if (window && typeof window.history !== 'undefined') {\n                            window.history.replaceState(window.history.state, '', this._config.oauth.redirectSignIn);\n                        }\n                        dispatchAuthEvent('signIn_failure', err_3, \"The OAuth response flow failed\");\n                        dispatchAuthEvent('cognitoHostedUI_failure', err_3, \"A failure occurred when returning to the Cognito Hosted UI\");\n                        dispatchAuthEvent('customState_failure', err_3, \"A failure occurred when returning state\");\n                        return [3 /*break*/, 7];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        this.oAuthFlowInProgress = false;\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    AuthClass.prototype.essentialCredentials = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    AuthClass.prototype.attributesToObject = function (attributes) {\n        var _this = this;\n        var obj = {};\n        if (attributes) {\n            attributes.map(function (attribute) {\n                if (attribute.Name === 'email_verified' ||\n                    attribute.Name === 'phone_number_verified') {\n                    obj[attribute.Name] =\n                        _this.isTruthyString(attribute.Value) || attribute.Value === true;\n                }\n                else {\n                    obj[attribute.Name] = attribute.Value;\n                }\n            });\n        }\n        return obj;\n    };\n    AuthClass.prototype.isTruthyString = function (value) {\n        return (typeof value.toLowerCase === 'function' && value.toLowerCase() === 'true');\n    };\n    AuthClass.prototype.createCognitoUser = function (username) {\n        var userData = {\n            Username: username,\n            Pool: this.userPool,\n        };\n        userData.Storage = this._storage;\n        var authenticationFlowType = this._config.authenticationFlowType;\n        var user = new CognitoUser(userData);\n        if (authenticationFlowType) {\n            user.setAuthenticationFlowType(authenticationFlowType);\n        }\n        return user;\n    };\n    AuthClass.prototype._isValidAuthStorage = function (obj) {\n        // We need to check if the obj has the functions of Storage\n        return (!!obj &&\n            typeof obj.getItem === 'function' &&\n            typeof obj.setItem === 'function' &&\n            typeof obj.removeItem === 'function' &&\n            typeof obj.clear === 'function');\n    };\n    AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n        if (config) {\n            if (!config.userPoolId || !config.identityPoolId) {\n                return AuthErrorTypes.MissingAuthConfig;\n            }\n        }\n        return AuthErrorTypes.NoConfig;\n    };\n    AuthClass.prototype.rejectAuthError = function (type) {\n        return Promise.reject(new AuthError(type));\n    };\n    AuthClass.prototype.rejectNoUserPool = function () {\n        var type = this.noUserPoolErrorHandler(this._config);\n        return Promise.reject(new NoUserPoolError(type));\n    };\n    AuthClass.prototype.rememberDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_2);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.setDeviceStatusRemembered({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.forgetDevice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_3);\n                        return [2 /*return*/, Promise.reject('The user is not authenticated')];\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                currUser.forgetDevice({\n                                    onSuccess: function (data) {\n                                        res(data);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    AuthClass.prototype.fetchDevices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currUser, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.currentUserPoolUser()];\n                    case 1:\n                        currUser = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_4 = _a.sent();\n                        logger.debug('The user is not authenticated by the error', error_4);\n                        throw new Error('The user is not authenticated');\n                    case 3:\n                        currUser.getCachedDeviceKeyAndPassword();\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                var cb = {\n                                    onSuccess: function (data) {\n                                        var deviceList = data.Devices.map(function (device) {\n                                            var deviceName = device.DeviceAttributes.find(function (_a) {\n                                                var Name = _a.Name;\n                                                return Name === 'device_name';\n                                            }) || {};\n                                            var deviceInfo = {\n                                                id: device.DeviceKey,\n                                                name: deviceName.Value,\n                                            };\n                                            return deviceInfo;\n                                        });\n                                        res(deviceList);\n                                    },\n                                    onFailure: function (err) {\n                                        if (err.code === 'InvalidParameterException') {\n                                            rej(new AuthError(AuthErrorTypes.DeviceConfig));\n                                        }\n                                        else if (err.code === 'NetworkError') {\n                                            rej(new AuthError(AuthErrorTypes.NetworkError));\n                                        }\n                                        else {\n                                            rej(err);\n                                        }\n                                    },\n                                };\n                                currUser.listDevices(MAX_DEVICES, null, cb);\n                            })];\n                }\n            });\n        });\n    };\n    return AuthClass;\n}());\nexport { AuthClass };\nexport var Auth = new AuthClass(null);\nAmplify.register(Auth);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}