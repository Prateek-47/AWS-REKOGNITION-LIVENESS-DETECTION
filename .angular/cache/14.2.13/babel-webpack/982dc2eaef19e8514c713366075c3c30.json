{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedConv2d;\n\nfunction setup(backend) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null\n  /* void */\n  , ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedConv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n  const fusedActivation = FusableActivation[activation];\n\n  if (fusedActivation == null) {\n    throw new Error(`${activation} activation not yet supported for FusedConv2D ` + `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  const outputChannels = convInfo.outChannels;\n  let biasId = 0;\n\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n\n    if (biasData.shape.length !== 1) {\n      throw new Error(`FusedConv2D only supports rank-1 bias but got ` + `rank ${biasData.shape.length}.`);\n    }\n\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(`FusedConv2D bias shape (${biasData.shape}) does not ` + `match the number of output channels (${outputChannels})`);\n    }\n\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(`wasm backend FusedConv2D does not support dataFormat:'` + `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ? 0 : backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n  return out;\n}\n\nexport const fusedConv2DConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d\n};","map":{"version":3,"names":["backend_util","FusedConv2D","FusableActivation","wasmFusedConv2d","setup","backend","wasm","cwrap","fusedConv2d","args","inputs","attrs","x","filter","bias","preluActivationWeights","strides","pad","dilations","dataFormat","dimRoundingMode","activation","leakyreluAlpha","convInfo","computeConv2DInfo","shape","fusedActivation","Error","xId","dataIdMap","get","dataId","id","filterId","outputChannels","outChannels","biasId","biasData","length","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","dilationHeight","dilationWidth","strideHeight","strideWidth","inputChannels","inChannels","isSamePad","type","batchSize","inHeight","inWidth","out","makeOutput","outShape","outId","preluActivationWeightsId","fusedConv2DConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedConv2D.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedConv2d;\nfunction setup(backend) {\n    wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction fusedConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dataFormat, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedConv2D ` +\n            `in the wasm backend.`);\n    }\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const outputChannels = convInfo.outChannels;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`FusedConv2D only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        if (biasData.shape[0] !== outputChannels) {\n            throw new Error(`FusedConv2D bias shape (${biasData.shape}) does not ` +\n                `match the number of output channels (${outputChannels})`);\n        }\n        biasId = biasData.id;\n    }\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    const batchSize = convInfo.batchSize;\n    const inHeight = convInfo.inHeight;\n    const inWidth = convInfo.inWidth;\n    if (dataFormat !== 'NHWC') {\n        throw new Error(`wasm backend FusedConv2D does not support dataFormat:'` +\n            `${dataFormat}'. Please use 'NHWC'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    wasmFusedConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n    return out;\n}\nexport const fusedConv2DConfig = {\n    kernelName: FusedConv2D,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedConv2d\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}