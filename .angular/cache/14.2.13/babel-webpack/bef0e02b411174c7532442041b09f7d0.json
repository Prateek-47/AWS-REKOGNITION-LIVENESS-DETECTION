{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAll;\n\nfunction setup(backend) {\n  wasmAll = backend.wasm.cwrap(All, null\n  /*void*/\n  , ['number, number, number']);\n}\n\nfunction all(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, x.dtype);\n\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all\n};","map":{"version":3,"names":["All","backend_util","util","permuteAxesAndTranspose","wasmAll","setup","backend","wasm","cwrap","all","args","inputs","attrs","axis","keepDims","x","xId","dataIdMap","get","dataId","id","inputId","input","transposed","axes","originalAxes","inputWasTransposed","transposedId","inputRank","shape","length","assertAxesAreInnerMostDims","outShape","reduceShape","computeOutAndReduceShapes","reduceSize","sizeFromShape","out","makeOutput","dtype","outId","disposeData","newShape","expandShapeToKeepDim","allConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/All.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAll;\nfunction setup(backend) {\n    wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\nfunction all(args) {\n    const { backend, inputs, attrs } = args;\n    const { axis, keepDims } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const { transposed, axes, originalAxes, inputWasTransposed } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n        const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n        input = transposed;\n        inputId = transposedId;\n    }\n    const inputRank = input.shape.length;\n    backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(input.shape) !== 0) {\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        wasmAll(inputId, reduceSize, outId);\n    }\n    if (inputWasTransposed) {\n        // dispose of the transposed tensor.\n        backend.disposeData(transposed.dataId);\n    }\n    if (keepDims) {\n        // reshape\n        const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n        out.shape = newShape;\n    }\n    return out;\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: all\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,YAAd,EAA4BC,IAA5B,QAAwC,uBAAxC;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AACA,IAAIC,OAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,OAAO,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBR,GAAnB,EAAwB;EAAK;EAA7B,EAAuC,CAAC,wBAAD,CAAvC,CAAV;AACH;;AACD,SAASS,GAAT,CAAaC,IAAb,EAAmB;EACf,MAAM;IAAEJ,OAAF;IAAWK,MAAX;IAAmBC;EAAnB,IAA6BF,IAAnC;EACA,MAAM;IAAEG,IAAF;IAAQC;EAAR,IAAqBF,KAA3B;EACA,MAAM;IAAEG;EAAF,IAAQJ,MAAd;EACA,MAAMK,GAAG,GAAGV,OAAO,CAACW,SAAR,CAAkBC,GAAlB,CAAsBH,CAAC,CAACI,MAAxB,EAAgCC,EAA5C;EACA,IAAIC,OAAO,GAAGL,GAAd;EACA,IAAIM,KAAK,GAAGP,CAAZ;EACA,MAAM;IAAEQ,UAAF;IAAcC,IAAd;IAAoBC,YAApB;IAAkCC;EAAlC,IAAyDvB,uBAAuB,CAACY,CAAD,EAAIF,IAAJ,EAAUP,OAAV,CAAtF;;EACA,IAAIoB,kBAAJ,EAAwB;IACpB,MAAMC,YAAY,GAAGrB,OAAO,CAACW,SAAR,CAAkBC,GAAlB,CAAsBK,UAAU,CAACJ,MAAjC,EAAyCC,EAA9D;IACAE,KAAK,GAAGC,UAAR;IACAF,OAAO,GAAGM,YAAV;EACH;;EACD,MAAMC,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAA9B;EACA7B,YAAY,CAAC8B,0BAAb,CAAwC,KAAxC,EAA+CP,IAA/C,EAAqDI,SAArD;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BhC,YAAY,CAACiC,yBAAb,CAAuCZ,KAAK,CAACO,KAA7C,EAAoDL,IAApD,CAAhC;EACA,MAAMW,UAAU,GAAGjC,IAAI,CAACkC,aAAL,CAAmBH,WAAnB,CAAnB;EACA,MAAMI,GAAG,GAAG/B,OAAO,CAACgC,UAAR,CAAmBN,QAAnB,EAA6BjB,CAAC,CAACwB,KAA/B,CAAZ;;EACA,IAAIrC,IAAI,CAACkC,aAAL,CAAmBd,KAAK,CAACO,KAAzB,MAAoC,CAAxC,EAA2C;IACvC,MAAMW,KAAK,GAAGlC,OAAO,CAACW,SAAR,CAAkBC,GAAlB,CAAsBmB,GAAG,CAAClB,MAA1B,EAAkCC,EAAhD;IACAhB,OAAO,CAACiB,OAAD,EAAUc,UAAV,EAAsBK,KAAtB,CAAP;EACH;;EACD,IAAId,kBAAJ,EAAwB;IACpB;IACApB,OAAO,CAACmC,WAAR,CAAoBlB,UAAU,CAACJ,MAA/B;EACH;;EACD,IAAIL,QAAJ,EAAc;IACV;IACA,MAAM4B,QAAQ,GAAGzC,YAAY,CAAC0C,oBAAb,CAAkCN,GAAG,CAACR,KAAtC,EAA6CJ,YAA7C,CAAjB;IACAY,GAAG,CAACR,KAAJ,GAAYa,QAAZ;EACH;;EACD,OAAOL,GAAP;AACH;;AACD,OAAO,MAAMO,SAAS,GAAG;EACrBC,UAAU,EAAE7C,GADS;EAErB8C,WAAW,EAAE,MAFQ;EAGrBC,SAAS,EAAE1C,KAHU;EAIrB2C,UAAU,EAAEvC;AAJS,CAAlB"},"metadata":{},"sourceType":"module"}