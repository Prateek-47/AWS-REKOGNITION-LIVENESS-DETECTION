{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger, Hub, parseAWSExports } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\n\nvar AnalyticsClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    _instance = this;\n    this.record = this.record.bind(this);\n    Hub.listen('auth', listener);\n    Hub.listen('storage', listener);\n    Hub.listen('analytics', listener);\n    Hub.listen('core', listener);\n  }\n\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n\n\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n\n    if (this._config['disabled']) {\n      this._disabled = true;\n    } // turn on the autoSessionRecord if not specified\n\n\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled'],\n        autoSessionRecord: _this._config['autoSessionRecord']\n      }, providerConfig));\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    }\n\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param pluggable - an instance of the plugin\n   */\n\n\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable); // for backward compatibility\n\n\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n\n\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n\n\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n\n      idx += 1;\n    }\n\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n\n\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n\n\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n\n\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, params;\n      return __generator(this, function (_a) {\n        event = {\n          name: '_session.start'\n        };\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', event, 'Recording Analytics session start event');\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n\n\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, params;\n      return __generator(this, function (_a) {\n        event = {\n          name: '_session.stop'\n        };\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', event, 'Recording Analytics session stop event');\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record one analytic event and send it to Pinpoint\n   * @param event - An object with the name of the event, attributes of the event and event metrics.\n   * @param [provider] - name of the provider.\n   */\n\n\n  AnalyticsClass.prototype.record = function (event, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: event,\n          provider: provider\n        };\n        dispatchAnalyticsEvent('record', params.event, 'Recording Analytics event');\n        return [2\n        /*return*/\n        , this._sendEvent(params)];\n      });\n    });\n  };\n\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2\n        /*return*/\n        , this.record(event, provider)];\n      });\n    });\n  };\n\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    } // to sync up two different configuration ways of auto session tracking\n\n\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n\n    var tracker = this._trackers[trackerType];\n\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n\n  return AnalyticsClass;\n}();\n\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar credentialsConfigured = false;\n\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n      payload = capsule.payload;\n  logger.debug('on hub capsule ' + channel, payload);\n\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n\n    case 'storage':\n      storageEvent(payload);\n      break;\n\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n\n    case 'core':\n      coreEvent(payload);\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n      attrs = _a.attrs,\n      metrics = _a.metrics;\n  if (!attrs) return;\n\n  if (analyticsConfigured) {\n    _instance.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\n\nvar authEvent = function (payload) {\n  var event = payload.event;\n\n  if (!event) {\n    return;\n  }\n\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , _instance.record({\n              name: \"_userauth.\" + eventName\n            })];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n\n    case 'configured':\n      authConfigured = true;\n\n      if (analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n\n      if (authConfigured || credentialsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar coreEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n\n  switch (event) {\n    case 'credentials_configured':\n      credentialsConfigured = true;\n\n      if (analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar sendEvents = function () {\n  var config = _instance.configure();\n\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    _instance.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n\n    endpointUpdated = true;\n  }\n\n  _instance.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\n\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);","map":{"version":3,"names":["__assign","__awaiter","__generator","Amplify","ConsoleLogger","Logger","Hub","parseAWSExports","AWSPinpointProvider","PageViewTracker","EventTracker","SessionTracker","logger","AMPLIFY_SYMBOL","Symbol","for","dispatchAnalyticsEvent","event","data","message","dispatch","trackers","pageView","session","_instance","AnalyticsClass","_config","_pluggables","_disabled","_trackers","record","bind","listen","listener","prototype","getModuleName","configure","config","_this","debug","amplifyConfig","Object","assign","Analytics","undefined","forEach","pluggable","providerConfig","getProviderName","disabled","autoSessionRecord","length","addPluggable","getCategory","push","getPluggable","providerName","i","removePluggable","idx","splice","disable","enable","startSession","provider","params","_a","name","_sendEvent","stopSession","updateEndpoint","attrs","Promise","resolve","reject","autoTrack","trackerType","opts","tracker","endpointUpdated","authConfigured","analyticsConfigured","credentialsConfigured","capsule","channel","payload","authEvent","storageEvent","analyticsEvent","coreEvent","metrics","attributes","catch","e","recordAuthEvent","eventName","err_1","label","trys","sent","sendEvents","immediate","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/analytics/lib-esm/Analytics.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger, Hub, parseAWSExports, } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAnalyticsEvent = function (event, data, message) {\n    Hub.dispatch('analytics', { event: event, data: data, message: message }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n    pageView: PageViewTracker,\n    event: EventTracker,\n    session: SessionTracker,\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */ (function () {\n    /**\n     * Initialize Analtyics\n     * @param config - Configuration of the Analytics\n     */\n    function AnalyticsClass() {\n        this._config = {};\n        this._pluggables = [];\n        this._disabled = false;\n        this._trackers = {};\n        _instance = this;\n        this.record = this.record.bind(this);\n        Hub.listen('auth', listener);\n        Hub.listen('storage', listener);\n        Hub.listen('analytics', listener);\n        Hub.listen('core', listener);\n    }\n    AnalyticsClass.prototype.getModuleName = function () {\n        return 'Analytics';\n    };\n    /**\n     * configure Analytics\n     * @param {Object} config - Configuration of the Analytics\n     */\n    AnalyticsClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        logger.debug('configure Analytics', config);\n        var amplifyConfig = parseAWSExports(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n        if (this._config['disabled']) {\n            this._disabled = true;\n        }\n        // turn on the autoSessionRecord if not specified\n        if (this._config['autoSessionRecord'] === undefined) {\n            this._config['autoSessionRecord'] = true;\n        }\n        this._pluggables.forEach(function (pluggable) {\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !_this._config['AWSPinpoint']\n                ? _this._config\n                : _this._config[pluggable.getProviderName()];\n            pluggable.configure(__assign({ disabled: _this._config['disabled'], autoSessionRecord: _this._config['autoSessionRecord'] }, providerConfig));\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSPinpointProvider());\n        }\n        dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n        logger.debug('current configuration', this._config);\n        return this._config;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param pluggable - an instance of the plugin\n     */\n    AnalyticsClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Analytics') {\n            this._pluggables.push(pluggable);\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !this._config['AWSPinpoint']\n                ? this._config\n                : this._config[pluggable.getProviderName()];\n            var config = __assign({ disabled: this._config['disabled'] }, providerConfig);\n            pluggable.configure(config);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the provider to be removed\n     */\n    AnalyticsClass.prototype.getPluggable = function (providerName) {\n        for (var i = 0; i < this._pluggables.length; i += 1) {\n            var pluggable = this._pluggables[i];\n            if (pluggable.getProviderName() === providerName) {\n                return pluggable;\n            }\n        }\n        logger.debug('No plugin found with providerName', providerName);\n        return null;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the provider to be removed\n     */\n    AnalyticsClass.prototype.removePluggable = function (providerName) {\n        var idx = 0;\n        while (idx < this._pluggables.length) {\n            if (this._pluggables[idx].getProviderName() === providerName) {\n                break;\n            }\n            idx += 1;\n        }\n        if (idx === this._pluggables.length) {\n            logger.debug('No plugin found with providerName', providerName);\n            return;\n        }\n        else {\n            this._pluggables.splice(idx, idx + 1);\n            return;\n        }\n    };\n    /**\n     * stop sending events\n     */\n    AnalyticsClass.prototype.disable = function () {\n        this._disabled = true;\n    };\n    /**\n     * start sending events\n     */\n    AnalyticsClass.prototype.enable = function () {\n        this._disabled = false;\n    };\n    /**\n     * Record Session start\n     * @param [provider] - name of the provider.\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.startSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event, params;\n            return __generator(this, function (_a) {\n                event = { name: '_session.start' };\n                params = { event: event, provider: provider };\n                dispatchAnalyticsEvent('record', event, 'Recording Analytics session start event');\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record Session stop\n     * @param [provider] - name of the provider.\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.stopSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event, params;\n            return __generator(this, function (_a) {\n                event = { name: '_session.stop' };\n                params = { event: event, provider: provider };\n                dispatchAnalyticsEvent('record', event, 'Recording Analytics session stop event');\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record one analytic event and send it to Pinpoint\n     * @param event - An object with the name of the event, attributes of the event and event metrics.\n     * @param [provider] - name of the provider.\n     */\n    AnalyticsClass.prototype.record = function (event, provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: event, provider: provider };\n                dispatchAnalyticsEvent('record', params.event, 'Recording Analytics event');\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event;\n            return __generator(this, function (_a) {\n                event = __assign(__assign({}, attrs), { name: '_update_endpoint' });\n                return [2 /*return*/, this.record(event, provider)];\n            });\n        });\n    };\n    AnalyticsClass.prototype._sendEvent = function (params) {\n        var _this = this;\n        if (this._disabled) {\n            logger.debug('Analytics has been disabled');\n            return Promise.resolve();\n        }\n        var provider = params.provider ? params.provider : 'AWSPinpoint';\n        return new Promise(function (resolve, reject) {\n            _this._pluggables.forEach(function (pluggable) {\n                if (pluggable.getProviderName() === provider) {\n                    pluggable.record(params, { resolve: resolve, reject: reject });\n                }\n            });\n        });\n    };\n    AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n        if (!trackers[trackerType]) {\n            logger.debug('invalid tracker type');\n            return;\n        }\n        // to sync up two different configuration ways of auto session tracking\n        if (trackerType === 'session') {\n            this._config['autoSessionRecord'] = opts['enable'];\n        }\n        var tracker = this._trackers[trackerType];\n        if (!tracker) {\n            this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n        }\n        else {\n            tracker.configure(opts);\n        }\n    };\n    return AnalyticsClass;\n}());\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar credentialsConfigured = false;\nvar listener = function (capsule) {\n    var channel = capsule.channel, payload = capsule.payload;\n    logger.debug('on hub capsule ' + channel, payload);\n    switch (channel) {\n        case 'auth':\n            authEvent(payload);\n            break;\n        case 'storage':\n            storageEvent(payload);\n            break;\n        case 'analytics':\n            analyticsEvent(payload);\n            break;\n        case 'core':\n            coreEvent(payload);\n            break;\n        default:\n            break;\n    }\n};\nvar storageEvent = function (payload) {\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\n    if (!attrs)\n        return;\n    if (analyticsConfigured) {\n        _instance\n            .record({\n            name: 'Storage',\n            attributes: attrs,\n            metrics: metrics,\n        })\n            .catch(function (e) {\n            logger.debug('Failed to send the storage event automatically', e);\n        });\n    }\n};\nvar authEvent = function (payload) {\n    var event = payload.event;\n    if (!event) {\n        return;\n    }\n    var recordAuthEvent = function (eventName) { return __awaiter(void 0, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _instance.record({ name: \"_userauth.\" + eventName })];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    err_1 = _a.sent();\n                    logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    switch (event) {\n        case 'signIn':\n            return recordAuthEvent('sign_in');\n        case 'signUp':\n            return recordAuthEvent('sign_up');\n        case 'signOut':\n            return recordAuthEvent('sign_out');\n        case 'signIn_failure':\n            return recordAuthEvent('auth_fail');\n        case 'configured':\n            authConfigured = true;\n            if (analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar analyticsEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'pinpointProvider_configured':\n            analyticsConfigured = true;\n            if (authConfigured || credentialsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar coreEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'credentials_configured':\n            credentialsConfigured = true;\n            if (analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar sendEvents = function () {\n    var config = _instance.configure();\n    if (!endpointUpdated && config['autoSessionRecord']) {\n        _instance.updateEndpoint({ immediate: true }).catch(function (e) {\n            logger.debug('Failed to update the endpoint', e);\n        });\n        endpointUpdated = true;\n    }\n    _instance.autoTrack('session', {\n        enable: config['autoSessionRecord'],\n    });\n};\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}