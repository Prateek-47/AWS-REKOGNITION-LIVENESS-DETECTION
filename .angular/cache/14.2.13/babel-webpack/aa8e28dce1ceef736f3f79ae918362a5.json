{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool;\n\nfunction setup(backend) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null\n  /* void */\n  , ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction avgPool(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const x = inputs.x;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode);\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(`wasm backend does not support dataFormat:'` + `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(`was backend only supports average pooling with dilation = [1, 1], ` + `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmAvgPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels, outId);\n  return out;\n}\n\nexport const avgPoolConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool\n};","map":{"version":3,"names":["AvgPool","backend_util","wasmAvgPool","setup","backend","wasm","cwrap","avgPool","args","inputs","attrs","x","xId","dataIdMap","get","dataId","id","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","shape","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","Error","dilationWidth","dilationHeight","out","makeOutput","outShape","outId","avgPoolConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPool.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool;\nfunction setup(backend) {\n    wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction avgPool(args) {\n    const { inputs, attrs, backend } = args;\n    const x = inputs.x;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const channels = convInfo.inChannels;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n        throw new Error(`was backend only supports average pooling with dilation = [1, 1], ` +\n            `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAvgPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels, outId);\n    return out;\n}\nexport const avgPoolConfig = {\n    kernelName: AvgPool,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: avgPool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}