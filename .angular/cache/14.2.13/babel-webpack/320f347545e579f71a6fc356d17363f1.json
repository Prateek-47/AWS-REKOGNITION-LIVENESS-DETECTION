{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectString as __expectString, expectUnion as __expectUnion, limitedParseFloat32 as __limitedParseFloat32, map, serializeFloat as __serializeFloat, take, withBaseException } from \"@aws-sdk/smithy-client\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { AccessDeniedException, ClientChallenge, InternalServerException, LivenessRequestStream, ServiceQuotaExceededException, ServiceUnavailableException, SessionNotFoundException, ThrottlingException, ValidationException } from \"../models/models_0\";\nimport { RekognitionStreamingServiceException as __BaseException } from \"../models/RekognitionStreamingServiceException\";\nexport const se_StartFaceLivenessSessionCommand = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (input, context) {\n    const {\n      hostname,\n      protocol = \"https\",\n      port,\n      path: basePath\n    } = yield context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n      \"x-amz-rekognition-streaming-liveness-session-id\": input.SessionId,\n      \"x-amz-rekognition-streaming-liveness-video-width\": input.VideoWidth,\n      \"x-amz-rekognition-streaming-liveness-video-height\": input.VideoHeight,\n      \"x-amz-rekognition-streaming-liveness-challenge-versions\": input.ChallengeVersions\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/start-face-liveness-session\";\n    let body;\n\n    if (input.LivenessRequestStream !== undefined) {\n      body = se_LivenessRequestStream(input.LivenessRequestStream, context);\n    }\n\n    return new __HttpRequest({\n      protocol,\n      hostname,\n      port,\n      method: \"POST\",\n      headers,\n      path: resolvedPath,\n      body\n    });\n  });\n\n  return function se_StartFaceLivenessSessionCommand(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const de_StartFaceLivenessSessionCommand = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (output, context) {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n      return de_StartFaceLivenessSessionCommandError(output, context);\n    }\n\n    const contents = map({\n      $metadata: deserializeMetadata(output),\n      SessionId: [, output.headers[\"x-amz-rekognition-streaming-liveness-session-id\"]]\n    });\n    const data = output.body;\n    contents.LivenessResponseStream = de_LivenessResponseStream(data, context);\n    return contents;\n  });\n\n  return function de_StartFaceLivenessSessionCommand(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconst de_StartFaceLivenessSessionCommandError = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n    switch (errorCode) {\n      case \"AccessDeniedException\":\n      case \"com.amazonaws.rekognitionstreaming#AccessDeniedException\":\n        throw yield de_AccessDeniedExceptionRes(parsedOutput, context);\n\n      case \"InternalServerException\":\n      case \"com.amazonaws.rekognitionstreaming#InternalServerException\":\n        throw yield de_InternalServerExceptionRes(parsedOutput, context);\n\n      case \"ServiceQuotaExceededException\":\n      case \"com.amazonaws.rekognitionstreaming#ServiceQuotaExceededException\":\n        throw yield de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n\n      case \"ServiceUnavailableException\":\n      case \"com.amazonaws.rekognitionstreaming#ServiceUnavailableException\":\n        throw yield de_ServiceUnavailableExceptionRes(parsedOutput, context);\n\n      case \"SessionNotFoundException\":\n      case \"com.amazonaws.rekognitionstreaming#SessionNotFoundException\":\n        throw yield de_SessionNotFoundExceptionRes(parsedOutput, context);\n\n      case \"ThrottlingException\":\n      case \"com.amazonaws.rekognitionstreaming#ThrottlingException\":\n        throw yield de_ThrottlingExceptionRes(parsedOutput, context);\n\n      case \"ValidationException\":\n      case \"com.amazonaws.rekognitionstreaming#ValidationException\":\n        throw yield de_ValidationExceptionRes(parsedOutput, context);\n\n      default:\n        const parsedBody = parsedOutput.body;\n        return throwDefaultError({\n          output,\n          parsedBody,\n          errorCode\n        });\n    }\n  });\n\n  return function de_StartFaceLivenessSessionCommandError(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nconst throwDefaultError = withBaseException(__BaseException);\n\nconst de_AccessDeniedExceptionRes = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_AccessDeniedExceptionRes(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nconst de_InternalServerExceptionRes = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_InternalServerExceptionRes(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nconst de_ServiceQuotaExceededExceptionRes = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceQuotaExceededException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_ServiceQuotaExceededExceptionRes(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nconst de_ServiceUnavailableExceptionRes = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceUnavailableException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_ServiceUnavailableExceptionRes(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nconst de_SessionNotFoundExceptionRes = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new SessionNotFoundException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_SessionNotFoundExceptionRes(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nconst de_ThrottlingExceptionRes = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ThrottlingException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_ThrottlingExceptionRes(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nconst de_ValidationExceptionRes = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator(function* (parsedOutput, context) {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n      Code: __expectString,\n      Message: __expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ValidationException({\n      $metadata: deserializeMetadata(parsedOutput),\n      ...contents\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n  });\n\n  return function de_ValidationExceptionRes(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nconst se_LivenessRequestStream = (input, context) => {\n  const eventMarshallingVisitor = event => LivenessRequestStream.visit(event, {\n    VideoEvent: value => se_VideoEvent_event(value, context),\n    ClientSessionInformationEvent: value => se_ClientSessionInformationEvent_event(value, context),\n    _: value => value\n  });\n\n  return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\n\nconst se_ClientSessionInformationEvent_event = (input, context) => {\n  const headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"ClientSessionInformationEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  let body = new Uint8Array();\n  body = se_ClientSessionInformationEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers,\n    body\n  };\n};\n\nconst se_VideoEvent_event = (input, context) => {\n  const headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"VideoEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  let body = new Uint8Array();\n  body = se_VideoEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers,\n    body\n  };\n};\n\nconst de_LivenessResponseStream = (output, context) => {\n  return context.eventStreamMarshaller.deserialize(output, /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator(function* (event) {\n      if (event[\"ServerSessionInformationEvent\"] != null) {\n        return {\n          ServerSessionInformationEvent: yield de_ServerSessionInformationEvent_event(event[\"ServerSessionInformationEvent\"], context)\n        };\n      }\n\n      if (event[\"DisconnectionEvent\"] != null) {\n        return {\n          DisconnectionEvent: yield de_DisconnectionEvent_event(event[\"DisconnectionEvent\"], context)\n        };\n      }\n\n      if (event[\"ValidationException\"] != null) {\n        return {\n          ValidationException: yield de_ValidationException_event(event[\"ValidationException\"], context)\n        };\n      }\n\n      if (event[\"InternalServerException\"] != null) {\n        return {\n          InternalServerException: yield de_InternalServerException_event(event[\"InternalServerException\"], context)\n        };\n      }\n\n      if (event[\"ThrottlingException\"] != null) {\n        return {\n          ThrottlingException: yield de_ThrottlingException_event(event[\"ThrottlingException\"], context)\n        };\n      }\n\n      if (event[\"ServiceQuotaExceededException\"] != null) {\n        return {\n          ServiceQuotaExceededException: yield de_ServiceQuotaExceededException_event(event[\"ServiceQuotaExceededException\"], context)\n        };\n      }\n\n      if (event[\"ServiceUnavailableException\"] != null) {\n        return {\n          ServiceUnavailableException: yield de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context)\n        };\n      }\n\n      return {\n        $unknown: output\n      };\n    });\n\n    return function (_x21) {\n      return _ref11.apply(this, arguments);\n    };\n  }());\n};\n\nconst de_DisconnectionEvent_event = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator(function* (output, context) {\n    const contents = {};\n    const data = yield parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n  });\n\n  return function de_DisconnectionEvent_event(_x22, _x23) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nconst de_InternalServerException_event = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseBody(output.body, context)\n    };\n    return de_InternalServerExceptionRes(parsedOutput, context);\n  });\n\n  return function de_InternalServerException_event(_x24, _x25) {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nconst de_ServerSessionInformationEvent_event = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator(function* (output, context) {\n    const contents = {};\n    const data = yield parseBody(output.body, context);\n    Object.assign(contents, de_ServerSessionInformationEvent(data, context));\n    return contents;\n  });\n\n  return function de_ServerSessionInformationEvent_event(_x26, _x27) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n\nconst de_ServiceQuotaExceededException_event = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseBody(output.body, context)\n    };\n    return de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n  });\n\n  return function de_ServiceQuotaExceededException_event(_x28, _x29) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nconst de_ServiceUnavailableException_event = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseBody(output.body, context)\n    };\n    return de_ServiceUnavailableExceptionRes(parsedOutput, context);\n  });\n\n  return function de_ServiceUnavailableException_event(_x30, _x31) {\n    return _ref16.apply(this, arguments);\n  };\n}();\n\nconst de_ThrottlingException_event = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseBody(output.body, context)\n    };\n    return de_ThrottlingExceptionRes(parsedOutput, context);\n  });\n\n  return function de_ThrottlingException_event(_x32, _x33) {\n    return _ref17.apply(this, arguments);\n  };\n}();\n\nconst de_ValidationException_event = /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator(function* (output, context) {\n    const parsedOutput = { ...output,\n      body: yield parseBody(output.body, context)\n    };\n    return de_ValidationExceptionRes(parsedOutput, context);\n  });\n\n  return function de_ValidationException_event(_x34, _x35) {\n    return _ref18.apply(this, arguments);\n  };\n}();\n\nconst se_BoundingBox = (input, context) => {\n  return take(input, {\n    Height: __serializeFloat,\n    Left: __serializeFloat,\n    Top: __serializeFloat,\n    Width: __serializeFloat\n  });\n};\n\nconst se_ClientChallenge = (input, context) => {\n  return ClientChallenge.visit(input, {\n    FaceMovementAndLightChallenge: value => ({\n      FaceMovementAndLightChallenge: se_FaceMovementAndLightClientChallenge(value, context)\n    }),\n    _: (name, value) => ({\n      name: value\n    })\n  });\n};\n\nconst se_ClientSessionInformationEvent = (input, context) => {\n  return take(input, {\n    Challenge: _ => se_ClientChallenge(_, context)\n  });\n};\n\nconst se_FaceMovementAndLightClientChallenge = (input, context) => {\n  return take(input, {\n    ChallengeId: [],\n    ColorDisplayed: _json,\n    InitialFace: _ => se_InitialFace(_, context),\n    TargetFace: _ => se_TargetFace(_, context),\n    VideoEndTimestamp: [],\n    VideoStartTimestamp: []\n  });\n};\n\nconst se_InitialFace = (input, context) => {\n  return take(input, {\n    BoundingBox: _ => se_BoundingBox(_, context),\n    InitialFaceDetectedTimestamp: []\n  });\n};\n\nconst se_TargetFace = (input, context) => {\n  return take(input, {\n    BoundingBox: _ => se_BoundingBox(_, context),\n    FaceDetectedInTargetPositionEndTimestamp: [],\n    FaceDetectedInTargetPositionStartTimestamp: []\n  });\n};\n\nconst se_VideoEvent = (input, context) => {\n  return take(input, {\n    TimestampMillis: [],\n    VideoChunk: context.base64Encoder\n  });\n};\n\nconst de_ChallengeConfig = (output, context) => {\n  return take(output, {\n    BlazeFaceDetectionThreshold: __limitedParseFloat32,\n    FaceDistanceThreshold: __limitedParseFloat32,\n    FaceDistanceThresholdMax: __limitedParseFloat32,\n    FaceDistanceThresholdMin: __limitedParseFloat32,\n    FaceIouHeightThreshold: __limitedParseFloat32,\n    FaceIouWidthThreshold: __limitedParseFloat32,\n    OvalHeightWidthRatio: __limitedParseFloat32,\n    OvalIouHeightThreshold: __limitedParseFloat32,\n    OvalIouThreshold: __limitedParseFloat32,\n    OvalIouWidthThreshold: __limitedParseFloat32\n  });\n};\n\nconst de_ColorSequence = (output, context) => {\n  return take(output, {\n    DownscrollDuration: __limitedParseFloat32,\n    FlatDisplayDuration: __limitedParseFloat32,\n    FreshnessColor: _json\n  });\n};\n\nconst de_ColorSequences = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_ColorSequence(entry, context);\n  });\n  return retVal;\n};\n\nconst de_FaceMovementAndLightServerChallenge = (output, context) => {\n  return take(output, {\n    ChallengeConfig: _ => de_ChallengeConfig(_, context),\n    ColorSequences: _ => de_ColorSequences(_, context),\n    LightChallengeType: __expectString,\n    OvalParameters: _ => de_OvalParameters(_, context)\n  });\n};\n\nconst de_OvalParameters = (output, context) => {\n  return take(output, {\n    CenterX: __limitedParseFloat32,\n    CenterY: __limitedParseFloat32,\n    Height: __limitedParseFloat32,\n    Width: __limitedParseFloat32\n  });\n};\n\nconst de_ServerChallenge = (output, context) => {\n  if (output.FaceMovementAndLightChallenge != null) {\n    return {\n      FaceMovementAndLightChallenge: de_FaceMovementAndLightServerChallenge(output.FaceMovementAndLightChallenge, context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nconst de_ServerSessionInformationEvent = (output, context) => {\n  return take(output, {\n    SessionInformation: _ => de_SessionInformation(_, context)\n  });\n};\n\nconst de_SessionInformation = (output, context) => {\n  return take(output, {\n    Challenge: _ => de_ServerChallenge(__expectUnion(_), context)\n  });\n};\n\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\n\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = value => value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n\n  return {};\n});\n\nconst parseErrorBody = /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator(function* (errorBody, context) {\n    const value = yield parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n  });\n\n  return function parseErrorBody(_x36, _x37) {\n    return _ref19.apply(this, arguments);\n  };\n}();\n\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"names":["_json","collectBody","decorateServiceException","__decorateServiceException","expectString","__expectString","expectUnion","__expectUnion","limitedParseFloat32","__limitedParseFloat32","map","serializeFloat","__serializeFloat","take","withBaseException","HttpRequest","__HttpRequest","AccessDeniedException","ClientChallenge","InternalServerException","LivenessRequestStream","ServiceQuotaExceededException","ServiceUnavailableException","SessionNotFoundException","ThrottlingException","ValidationException","RekognitionStreamingServiceException","__BaseException","se_StartFaceLivenessSessionCommand","input","context","hostname","protocol","port","path","basePath","endpoint","headers","isSerializableHeaderValue","SessionId","VideoWidth","VideoHeight","ChallengeVersions","resolvedPath","endsWith","slice","body","undefined","se_LivenessRequestStream","method","de_StartFaceLivenessSessionCommand","output","statusCode","de_StartFaceLivenessSessionCommandError","contents","$metadata","deserializeMetadata","data","LivenessResponseStream","de_LivenessResponseStream","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","de_AccessDeniedExceptionRes","de_InternalServerExceptionRes","de_ServiceQuotaExceededExceptionRes","de_ServiceUnavailableExceptionRes","de_SessionNotFoundExceptionRes","de_ThrottlingExceptionRes","de_ValidationExceptionRes","parsedBody","throwDefaultError","doc","Code","Message","Object","assign","exception","eventMarshallingVisitor","event","visit","VideoEvent","value","se_VideoEvent_event","ClientSessionInformationEvent","se_ClientSessionInformationEvent_event","_","eventStreamMarshaller","serialize","type","Uint8Array","se_ClientSessionInformationEvent","utf8Decoder","JSON","stringify","se_VideoEvent","deserialize","ServerSessionInformationEvent","de_ServerSessionInformationEvent_event","DisconnectionEvent","de_DisconnectionEvent_event","de_ValidationException_event","de_InternalServerException_event","de_ThrottlingException_event","de_ServiceQuotaExceededException_event","de_ServiceUnavailableException_event","$unknown","parseBody","de_ServerSessionInformationEvent","se_BoundingBox","Height","Left","Top","Width","se_ClientChallenge","FaceMovementAndLightChallenge","se_FaceMovementAndLightClientChallenge","name","Challenge","ChallengeId","ColorDisplayed","InitialFace","se_InitialFace","TargetFace","se_TargetFace","VideoEndTimestamp","VideoStartTimestamp","BoundingBox","InitialFaceDetectedTimestamp","FaceDetectedInTargetPositionEndTimestamp","FaceDetectedInTargetPositionStartTimestamp","TimestampMillis","VideoChunk","base64Encoder","de_ChallengeConfig","BlazeFaceDetectionThreshold","FaceDistanceThreshold","FaceDistanceThresholdMax","FaceDistanceThresholdMin","FaceIouHeightThreshold","FaceIouWidthThreshold","OvalHeightWidthRatio","OvalIouHeightThreshold","OvalIouThreshold","OvalIouWidthThreshold","de_ColorSequence","DownscrollDuration","FlatDisplayDuration","FreshnessColor","de_ColorSequences","retVal","filter","e","entry","de_FaceMovementAndLightServerChallenge","ChallengeConfig","ColorSequences","LightChallengeType","OvalParameters","de_OvalParameters","CenterX","CenterY","de_ServerChallenge","entries","SessionInformation","de_SessionInformation","httpStatusCode","requestId","extendedRequestId","cfId","collectBodyString","streamBody","then","utf8Encoder","getOwnPropertyNames","includes","length","size","encoded","parse","errorBody","message","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey","code"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-rekognitionstreaming/dist-es/protocols/Aws_restJson1.js"],"sourcesContent":["import { _json, collectBody, decorateServiceException as __decorateServiceException, expectString as __expectString, expectUnion as __expectUnion, limitedParseFloat32 as __limitedParseFloat32, map, serializeFloat as __serializeFloat, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { AccessDeniedException, ClientChallenge, InternalServerException, LivenessRequestStream, ServiceQuotaExceededException, ServiceUnavailableException, SessionNotFoundException, ThrottlingException, ValidationException, } from \"../models/models_0\";\nimport { RekognitionStreamingServiceException as __BaseException } from \"../models/RekognitionStreamingServiceException\";\nexport const se_StartFaceLivenessSessionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-rekognition-streaming-liveness-session-id\": input.SessionId,\n        \"x-amz-rekognition-streaming-liveness-video-width\": input.VideoWidth,\n        \"x-amz-rekognition-streaming-liveness-video-height\": input.VideoHeight,\n        \"x-amz-rekognition-streaming-liveness-challenge-versions\": input.ChallengeVersions,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/start-face-liveness-session\";\n    let body;\n    if (input.LivenessRequestStream !== undefined) {\n        body = se_LivenessRequestStream(input.LivenessRequestStream, context);\n    }\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const de_StartFaceLivenessSessionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_StartFaceLivenessSessionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        SessionId: [, output.headers[\"x-amz-rekognition-streaming-liveness-session-id\"]],\n    });\n    const data = output.body;\n    contents.LivenessResponseStream = de_LivenessResponseStream(data, context);\n    return contents;\n};\nconst de_StartFaceLivenessSessionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.rekognitionstreaming#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.rekognitionstreaming#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"ServiceQuotaExceededException\":\n        case \"com.amazonaws.rekognitionstreaming#ServiceQuotaExceededException\":\n            throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.rekognitionstreaming#ServiceUnavailableException\":\n            throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);\n        case \"SessionNotFoundException\":\n        case \"com.amazonaws.rekognitionstreaming#SessionNotFoundException\":\n            throw await de_SessionNotFoundExceptionRes(parsedOutput, context);\n        case \"ThrottlingException\":\n        case \"com.amazonaws.rekognitionstreaming#ThrottlingException\":\n            throw await de_ThrottlingExceptionRes(parsedOutput, context);\n        case \"ValidationException\":\n        case \"com.amazonaws.rekognitionstreaming#ValidationException\":\n            throw await de_ValidationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceQuotaExceededExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceQuotaExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SessionNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SessionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ThrottlingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ThrottlingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ValidationExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Code: __expectString,\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ValidationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst se_LivenessRequestStream = (input, context) => {\n    const eventMarshallingVisitor = (event) => LivenessRequestStream.visit(event, {\n        VideoEvent: (value) => se_VideoEvent_event(value, context),\n        ClientSessionInformationEvent: (value) => se_ClientSessionInformationEvent_event(value, context),\n        _: (value) => value,\n    });\n    return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nconst se_ClientSessionInformationEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"ClientSessionInformationEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = se_ClientSessionInformationEvent(input, context);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst se_VideoEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"VideoEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = se_VideoEvent(input, context);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst de_LivenessResponseStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"ServerSessionInformationEvent\"] != null) {\n            return {\n                ServerSessionInformationEvent: await de_ServerSessionInformationEvent_event(event[\"ServerSessionInformationEvent\"], context),\n            };\n        }\n        if (event[\"DisconnectionEvent\"] != null) {\n            return {\n                DisconnectionEvent: await de_DisconnectionEvent_event(event[\"DisconnectionEvent\"], context),\n            };\n        }\n        if (event[\"ValidationException\"] != null) {\n            return {\n                ValidationException: await de_ValidationException_event(event[\"ValidationException\"], context),\n            };\n        }\n        if (event[\"InternalServerException\"] != null) {\n            return {\n                InternalServerException: await de_InternalServerException_event(event[\"InternalServerException\"], context),\n            };\n        }\n        if (event[\"ThrottlingException\"] != null) {\n            return {\n                ThrottlingException: await de_ThrottlingException_event(event[\"ThrottlingException\"], context),\n            };\n        }\n        if (event[\"ServiceQuotaExceededException\"] != null) {\n            return {\n                ServiceQuotaExceededException: await de_ServiceQuotaExceededException_event(event[\"ServiceQuotaExceededException\"], context),\n            };\n        }\n        if (event[\"ServiceUnavailableException\"] != null) {\n            return {\n                ServiceUnavailableException: await de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: output };\n    });\n};\nconst de_DisconnectionEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst de_InternalServerException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_InternalServerExceptionRes(parsedOutput, context);\n};\nconst de_ServerSessionInformationEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ServerSessionInformationEvent(data, context));\n    return contents;\n};\nconst de_ServiceQuotaExceededException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n};\nconst de_ServiceUnavailableException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ServiceUnavailableExceptionRes(parsedOutput, context);\n};\nconst de_ThrottlingException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ThrottlingExceptionRes(parsedOutput, context);\n};\nconst de_ValidationException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ValidationExceptionRes(parsedOutput, context);\n};\nconst se_BoundingBox = (input, context) => {\n    return take(input, {\n        Height: __serializeFloat,\n        Left: __serializeFloat,\n        Top: __serializeFloat,\n        Width: __serializeFloat,\n    });\n};\nconst se_ClientChallenge = (input, context) => {\n    return ClientChallenge.visit(input, {\n        FaceMovementAndLightChallenge: (value) => ({\n            FaceMovementAndLightChallenge: se_FaceMovementAndLightClientChallenge(value, context),\n        }),\n        _: (name, value) => ({ name: value }),\n    });\n};\nconst se_ClientSessionInformationEvent = (input, context) => {\n    return take(input, {\n        Challenge: (_) => se_ClientChallenge(_, context),\n    });\n};\nconst se_FaceMovementAndLightClientChallenge = (input, context) => {\n    return take(input, {\n        ChallengeId: [],\n        ColorDisplayed: _json,\n        InitialFace: (_) => se_InitialFace(_, context),\n        TargetFace: (_) => se_TargetFace(_, context),\n        VideoEndTimestamp: [],\n        VideoStartTimestamp: [],\n    });\n};\nconst se_InitialFace = (input, context) => {\n    return take(input, {\n        BoundingBox: (_) => se_BoundingBox(_, context),\n        InitialFaceDetectedTimestamp: [],\n    });\n};\nconst se_TargetFace = (input, context) => {\n    return take(input, {\n        BoundingBox: (_) => se_BoundingBox(_, context),\n        FaceDetectedInTargetPositionEndTimestamp: [],\n        FaceDetectedInTargetPositionStartTimestamp: [],\n    });\n};\nconst se_VideoEvent = (input, context) => {\n    return take(input, {\n        TimestampMillis: [],\n        VideoChunk: context.base64Encoder,\n    });\n};\nconst de_ChallengeConfig = (output, context) => {\n    return take(output, {\n        BlazeFaceDetectionThreshold: __limitedParseFloat32,\n        FaceDistanceThreshold: __limitedParseFloat32,\n        FaceDistanceThresholdMax: __limitedParseFloat32,\n        FaceDistanceThresholdMin: __limitedParseFloat32,\n        FaceIouHeightThreshold: __limitedParseFloat32,\n        FaceIouWidthThreshold: __limitedParseFloat32,\n        OvalHeightWidthRatio: __limitedParseFloat32,\n        OvalIouHeightThreshold: __limitedParseFloat32,\n        OvalIouThreshold: __limitedParseFloat32,\n        OvalIouWidthThreshold: __limitedParseFloat32,\n    });\n};\nconst de_ColorSequence = (output, context) => {\n    return take(output, {\n        DownscrollDuration: __limitedParseFloat32,\n        FlatDisplayDuration: __limitedParseFloat32,\n        FreshnessColor: _json,\n    });\n};\nconst de_ColorSequences = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ColorSequence(entry, context);\n    });\n    return retVal;\n};\nconst de_FaceMovementAndLightServerChallenge = (output, context) => {\n    return take(output, {\n        ChallengeConfig: (_) => de_ChallengeConfig(_, context),\n        ColorSequences: (_) => de_ColorSequences(_, context),\n        LightChallengeType: __expectString,\n        OvalParameters: (_) => de_OvalParameters(_, context),\n    });\n};\nconst de_OvalParameters = (output, context) => {\n    return take(output, {\n        CenterX: __limitedParseFloat32,\n        CenterY: __limitedParseFloat32,\n        Height: __limitedParseFloat32,\n        Width: __limitedParseFloat32,\n    });\n};\nconst de_ServerChallenge = (output, context) => {\n    if (output.FaceMovementAndLightChallenge != null) {\n        return {\n            FaceMovementAndLightChallenge: de_FaceMovementAndLightServerChallenge(output.FaceMovementAndLightChallenge, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ServerSessionInformationEvent = (output, context) => {\n    return take(output, {\n        SessionInformation: (_) => de_SessionInformation(_, context),\n    });\n};\nconst de_SessionInformation = (output, context) => {\n    return take(output, {\n        Challenge: (_) => de_ServerChallenge(__expectUnion(_), context),\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,wBAAwB,IAAIC,0BAAzD,EAAqFC,YAAY,IAAIC,cAArG,EAAqHC,WAAW,IAAIC,aAApI,EAAmJC,mBAAmB,IAAIC,qBAA1K,EAAiMC,GAAjM,EAAsMC,cAAc,IAAIC,gBAAxN,EAA0OC,IAA1O,EAAgPC,iBAAhP,QAA0Q,wBAA1Q;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,uBAA7C;AACA,SAASC,qBAAT,EAAgCC,eAAhC,EAAiDC,uBAAjD,EAA0EC,qBAA1E,EAAiGC,6BAAjG,EAAgIC,2BAAhI,EAA6JC,wBAA7J,EAAuLC,mBAAvL,EAA4MC,mBAA5M,QAAwO,oBAAxO;AACA,SAASC,oCAAoC,IAAIC,eAAjD,QAAwE,gDAAxE;AACA,OAAO,MAAMC,kCAAkC;EAAA,6BAAG,WAAOC,KAAP,EAAcC,OAAd,EAA0B;IACxE,MAAM;MAAEC,QAAF;MAAYC,QAAQ,GAAG,OAAvB;MAAgCC,IAAhC;MAAsCC,IAAI,EAAEC;IAA5C,UAA+DL,OAAO,CAACM,QAAR,EAArE;IACA,MAAMC,OAAO,GAAG3B,GAAG,CAAC,EAAD,EAAK4B,yBAAL,EAAgC;MAC/C,mDAAmDT,KAAK,CAACU,SADV;MAE/C,oDAAoDV,KAAK,CAACW,UAFX;MAG/C,qDAAqDX,KAAK,CAACY,WAHZ;MAI/C,2DAA2DZ,KAAK,CAACa;IAJlB,CAAhC,CAAnB;IAMA,MAAMC,YAAY,GAAI,GAAER,QAAQ,EAAES,QAAV,CAAmB,GAAnB,IAA0BT,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAA1B,GAAkDV,QAAQ,IAAI,EAAG,EAApE,GAAwE,8BAA7F;IACA,IAAIW,IAAJ;;IACA,IAAIjB,KAAK,CAACT,qBAAN,KAAgC2B,SAApC,EAA+C;MAC3CD,IAAI,GAAGE,wBAAwB,CAACnB,KAAK,CAACT,qBAAP,EAA8BU,OAA9B,CAA/B;IACH;;IACD,OAAO,IAAId,aAAJ,CAAkB;MACrBgB,QADqB;MAErBD,QAFqB;MAGrBE,IAHqB;MAIrBgB,MAAM,EAAE,MAJa;MAKrBZ,OALqB;MAMrBH,IAAI,EAAES,YANe;MAOrBG;IAPqB,CAAlB,CAAP;EASH,CAtB8C;;EAAA,gBAAlClB,kCAAkC;IAAA;EAAA;AAAA,GAAxC;AAuBP,OAAO,MAAMsB,kCAAkC;EAAA,8BAAG,WAAOC,MAAP,EAAerB,OAAf,EAA2B;IACzE,IAAIqB,MAAM,CAACC,UAAP,KAAsB,GAAtB,IAA6BD,MAAM,CAACC,UAAP,IAAqB,GAAtD,EAA2D;MACvD,OAAOC,uCAAuC,CAACF,MAAD,EAASrB,OAAT,CAA9C;IACH;;IACD,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC;MACjB6C,SAAS,EAAEC,mBAAmB,CAACL,MAAD,CADb;MAEjBZ,SAAS,EAAE,GAAGY,MAAM,CAACd,OAAP,CAAe,iDAAf,CAAH;IAFM,CAAD,CAApB;IAIA,MAAMoB,IAAI,GAAGN,MAAM,CAACL,IAApB;IACAQ,QAAQ,CAACI,sBAAT,GAAkCC,yBAAyB,CAACF,IAAD,EAAO3B,OAAP,CAA3D;IACA,OAAOwB,QAAP;EACH,CAX8C;;EAAA,gBAAlCJ,kCAAkC;IAAA;EAAA;AAAA,GAAxC;;AAYP,MAAMG,uCAAuC;EAAA,8BAAG,WAAOF,MAAP,EAAerB,OAAf,EAA2B;IACvE,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQe,cAAc,CAACV,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFT,CAArB;IAIA,MAAMgC,SAAS,GAAGC,qBAAqB,CAACZ,MAAD,EAASS,YAAY,CAACd,IAAtB,CAAvC;;IACA,QAAQgB,SAAR;MACI,KAAK,uBAAL;MACA,KAAK,0DAAL;QACI,YAAYE,2BAA2B,CAACJ,YAAD,EAAe9B,OAAf,CAAvC;;MACJ,KAAK,yBAAL;MACA,KAAK,4DAAL;QACI,YAAYmC,6BAA6B,CAACL,YAAD,EAAe9B,OAAf,CAAzC;;MACJ,KAAK,+BAAL;MACA,KAAK,kEAAL;QACI,YAAYoC,mCAAmC,CAACN,YAAD,EAAe9B,OAAf,CAA/C;;MACJ,KAAK,6BAAL;MACA,KAAK,gEAAL;QACI,YAAYqC,iCAAiC,CAACP,YAAD,EAAe9B,OAAf,CAA7C;;MACJ,KAAK,0BAAL;MACA,KAAK,6DAAL;QACI,YAAYsC,8BAA8B,CAACR,YAAD,EAAe9B,OAAf,CAA1C;;MACJ,KAAK,qBAAL;MACA,KAAK,wDAAL;QACI,YAAYuC,yBAAyB,CAACT,YAAD,EAAe9B,OAAf,CAArC;;MACJ,KAAK,qBAAL;MACA,KAAK,wDAAL;QACI,YAAYwC,yBAAyB,CAACV,YAAD,EAAe9B,OAAf,CAArC;;MACJ;QACI,MAAMyC,UAAU,GAAGX,YAAY,CAACd,IAAhC;QACA,OAAO0B,iBAAiB,CAAC;UACrBrB,MADqB;UAErBoB,UAFqB;UAGrBT;QAHqB,CAAD,CAAxB;IAxBR;EA8BH,CApC4C;;EAAA,gBAAvCT,uCAAuC;IAAA;EAAA;AAAA,GAA7C;;AAqCA,MAAMmB,iBAAiB,GAAG1D,iBAAiB,CAACa,eAAD,CAA3C;;AACA,MAAMqC,2BAA2B;EAAA,8BAAG,WAAOJ,YAAP,EAAqB9B,OAArB,EAAiC;IACjE,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAI7D,qBAAJ,CAA0B;MACxCsC,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADU;MAExC,GAAGN;IAFqC,CAA1B,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAbgC;;EAAA,gBAA3BkB,2BAA2B;IAAA;EAAA;AAAA,GAAjC;;AAcA,MAAMC,6BAA6B;EAAA,8BAAG,WAAOL,YAAP,EAAqB9B,OAArB,EAAiC;IACnE,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAI3D,uBAAJ,CAA4B;MAC1CoC,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADY;MAE1C,GAAGN;IAFuC,CAA5B,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAbkC;;EAAA,gBAA7BmB,6BAA6B;IAAA;EAAA;AAAA,GAAnC;;AAcA,MAAMC,mCAAmC;EAAA,8BAAG,WAAON,YAAP,EAAqB9B,OAArB,EAAiC;IACzE,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAIzD,6BAAJ,CAAkC;MAChDkC,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADkB;MAEhD,GAAGN;IAF6C,CAAlC,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAbwC;;EAAA,gBAAnCoB,mCAAmC;IAAA;EAAA;AAAA,GAAzC;;AAcA,MAAMC,iCAAiC;EAAA,8BAAG,WAAOP,YAAP,EAAqB9B,OAArB,EAAiC;IACvE,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAIxD,2BAAJ,CAAgC;MAC9CiC,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADgB;MAE9C,GAAGN;IAF2C,CAAhC,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAbsC;;EAAA,gBAAjCqB,iCAAiC;IAAA;EAAA;AAAA,GAAvC;;AAcA,MAAMC,8BAA8B;EAAA,8BAAG,WAAOR,YAAP,EAAqB9B,OAArB,EAAiC;IACpE,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAIvD,wBAAJ,CAA6B;MAC3CgC,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADa;MAE3C,GAAGN;IAFwC,CAA7B,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAbmC;;EAAA,gBAA9BsB,8BAA8B;IAAA;EAAA;AAAA,GAApC;;AAcA,MAAMC,yBAAyB;EAAA,8BAAG,WAAOT,YAAP,EAAqB9B,OAArB,EAAiC;IAC/D,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAItD,mBAAJ,CAAwB;MACtC+B,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADQ;MAEtC,GAAGN;IAFmC,CAAxB,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAb8B;;EAAA,gBAAzBuB,yBAAyB;IAAA;EAAA;AAAA,GAA/B;;AAcA,MAAMC,yBAAyB;EAAA,+BAAG,WAAOV,YAAP,EAAqB9B,OAArB,EAAiC;IAC/D,MAAMwB,QAAQ,GAAG5C,GAAG,CAAC,EAAD,CAApB;IACA,MAAM+C,IAAI,GAAGG,YAAY,CAACd,IAA1B;IACA,MAAM2B,GAAG,GAAG5D,IAAI,CAAC4C,IAAD,EAAO;MACnBiB,IAAI,EAAErE,cADa;MAEnBsE,OAAO,EAAEtE;IAFU,CAAP,CAAhB;IAIAuE,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBmB,GAAxB;IACA,MAAMK,SAAS,GAAG,IAAIrD,mBAAJ,CAAwB;MACtC8B,SAAS,EAAEC,mBAAmB,CAACI,YAAD,CADQ;MAEtC,GAAGN;IAFmC,CAAxB,CAAlB;IAIA,OAAOnD,0BAA0B,CAAC2E,SAAD,EAAYlB,YAAY,CAACd,IAAzB,CAAjC;EACH,CAb8B;;EAAA,gBAAzBwB,yBAAyB;IAAA;EAAA;AAAA,GAA/B;;AAcA,MAAMtB,wBAAwB,GAAG,CAACnB,KAAD,EAAQC,OAAR,KAAoB;EACjD,MAAMiD,uBAAuB,GAAIC,KAAD,IAAW5D,qBAAqB,CAAC6D,KAAtB,CAA4BD,KAA5B,EAAmC;IAC1EE,UAAU,EAAGC,KAAD,IAAWC,mBAAmB,CAACD,KAAD,EAAQrD,OAAR,CADgC;IAE1EuD,6BAA6B,EAAGF,KAAD,IAAWG,sCAAsC,CAACH,KAAD,EAAQrD,OAAR,CAFN;IAG1EyD,CAAC,EAAGJ,KAAD,IAAWA;EAH4D,CAAnC,CAA3C;;EAKA,OAAOrD,OAAO,CAAC0D,qBAAR,CAA8BC,SAA9B,CAAwC5D,KAAxC,EAA+CkD,uBAA/C,CAAP;AACH,CAPD;;AAQA,MAAMO,sCAAsC,GAAG,CAACzD,KAAD,EAAQC,OAAR,KAAoB;EAC/D,MAAMO,OAAO,GAAG;IACZ,eAAe;MAAEqD,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB,CADH;IAEZ,iBAAiB;MAAEO,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB,CAFL;IAGZ,iBAAiB;MAAEO,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB;EAHL,CAAhB;EAKA,IAAIrC,IAAI,GAAG,IAAI6C,UAAJ,EAAX;EACA7C,IAAI,GAAG8C,gCAAgC,CAAC/D,KAAD,EAAQC,OAAR,CAAvC;EACAgB,IAAI,GAAGhB,OAAO,CAAC+D,WAAR,CAAoBC,IAAI,CAACC,SAAL,CAAejD,IAAf,CAApB,CAAP;EACA,OAAO;IAAET,OAAF;IAAWS;EAAX,CAAP;AACH,CAVD;;AAWA,MAAMsC,mBAAmB,GAAG,CAACvD,KAAD,EAAQC,OAAR,KAAoB;EAC5C,MAAMO,OAAO,GAAG;IACZ,eAAe;MAAEqD,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB,CADH;IAEZ,iBAAiB;MAAEO,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB,CAFL;IAGZ,iBAAiB;MAAEO,IAAI,EAAE,QAAR;MAAkBP,KAAK,EAAE;IAAzB;EAHL,CAAhB;EAKA,IAAIrC,IAAI,GAAG,IAAI6C,UAAJ,EAAX;EACA7C,IAAI,GAAGkD,aAAa,CAACnE,KAAD,EAAQC,OAAR,CAApB;EACAgB,IAAI,GAAGhB,OAAO,CAAC+D,WAAR,CAAoBC,IAAI,CAACC,SAAL,CAAejD,IAAf,CAApB,CAAP;EACA,OAAO;IAAET,OAAF;IAAWS;EAAX,CAAP;AACH,CAVD;;AAWA,MAAMa,yBAAyB,GAAG,CAACR,MAAD,EAASrB,OAAT,KAAqB;EACnD,OAAOA,OAAO,CAAC0D,qBAAR,CAA8BS,WAA9B,CAA0C9C,MAA1C;IAAA,+BAAkD,WAAO6B,KAAP,EAAiB;MACtE,IAAIA,KAAK,CAAC,+BAAD,CAAL,IAA0C,IAA9C,EAAoD;QAChD,OAAO;UACHkB,6BAA6B,QAAQC,sCAAsC,CAACnB,KAAK,CAAC,+BAAD,CAAN,EAAyClD,OAAzC;QADxE,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,oBAAD,CAAL,IAA+B,IAAnC,EAAyC;QACrC,OAAO;UACHoB,kBAAkB,QAAQC,2BAA2B,CAACrB,KAAK,CAAC,oBAAD,CAAN,EAA8BlD,OAA9B;QADlD,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,qBAAD,CAAL,IAAgC,IAApC,EAA0C;QACtC,OAAO;UACHvD,mBAAmB,QAAQ6E,4BAA4B,CAACtB,KAAK,CAAC,qBAAD,CAAN,EAA+BlD,OAA/B;QADpD,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,yBAAD,CAAL,IAAoC,IAAxC,EAA8C;QAC1C,OAAO;UACH7D,uBAAuB,QAAQoF,gCAAgC,CAACvB,KAAK,CAAC,yBAAD,CAAN,EAAmClD,OAAnC;QAD5D,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,qBAAD,CAAL,IAAgC,IAApC,EAA0C;QACtC,OAAO;UACHxD,mBAAmB,QAAQgF,4BAA4B,CAACxB,KAAK,CAAC,qBAAD,CAAN,EAA+BlD,OAA/B;QADpD,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,+BAAD,CAAL,IAA0C,IAA9C,EAAoD;QAChD,OAAO;UACH3D,6BAA6B,QAAQoF,sCAAsC,CAACzB,KAAK,CAAC,+BAAD,CAAN,EAAyClD,OAAzC;QADxE,CAAP;MAGH;;MACD,IAAIkD,KAAK,CAAC,6BAAD,CAAL,IAAwC,IAA5C,EAAkD;QAC9C,OAAO;UACH1D,2BAA2B,QAAQoF,oCAAoC,CAAC1B,KAAK,CAAC,6BAAD,CAAN,EAAuClD,OAAvC;QADpE,CAAP;MAGH;;MACD,OAAO;QAAE6E,QAAQ,EAAExD;MAAZ,CAAP;IACH,CArCM;;IAAA;MAAA;IAAA;EAAA,IAAP;AAsCH,CAvCD;;AAwCA,MAAMkD,2BAA2B;EAAA,+BAAG,WAAOlD,MAAP,EAAerB,OAAf,EAA2B;IAC3D,MAAMwB,QAAQ,GAAG,EAAjB;IACA,MAAMG,IAAI,SAASmD,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd,CAA5B;IACA8C,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBtD,KAAK,CAACyD,IAAD,CAA7B;IACA,OAAOH,QAAP;EACH,CALgC;;EAAA,gBAA3B+C,2BAA2B;IAAA;EAAA;AAAA,GAAjC;;AAMA,MAAME,gCAAgC;EAAA,+BAAG,WAAOpD,MAAP,EAAerB,OAAf,EAA2B;IAChE,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQ8D,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFJ,CAArB;IAIA,OAAOmC,6BAA6B,CAACL,YAAD,EAAe9B,OAAf,CAApC;EACH,CANqC;;EAAA,gBAAhCyE,gCAAgC;IAAA;EAAA;AAAA,GAAtC;;AAOA,MAAMJ,sCAAsC;EAAA,+BAAG,WAAOhD,MAAP,EAAerB,OAAf,EAA2B;IACtE,MAAMwB,QAAQ,GAAG,EAAjB;IACA,MAAMG,IAAI,SAASmD,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd,CAA5B;IACA8C,MAAM,CAACC,MAAP,CAAcvB,QAAd,EAAwBuD,gCAAgC,CAACpD,IAAD,EAAO3B,OAAP,CAAxD;IACA,OAAOwB,QAAP;EACH,CAL2C;;EAAA,gBAAtC6C,sCAAsC;IAAA;EAAA;AAAA,GAA5C;;AAMA,MAAMM,sCAAsC;EAAA,+BAAG,WAAOtD,MAAP,EAAerB,OAAf,EAA2B;IACtE,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQ8D,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFJ,CAArB;IAIA,OAAOoC,mCAAmC,CAACN,YAAD,EAAe9B,OAAf,CAA1C;EACH,CAN2C;;EAAA,gBAAtC2E,sCAAsC;IAAA;EAAA;AAAA,GAA5C;;AAOA,MAAMC,oCAAoC;EAAA,+BAAG,WAAOvD,MAAP,EAAerB,OAAf,EAA2B;IACpE,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQ8D,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFJ,CAArB;IAIA,OAAOqC,iCAAiC,CAACP,YAAD,EAAe9B,OAAf,CAAxC;EACH,CANyC;;EAAA,gBAApC4E,oCAAoC;IAAA;EAAA;AAAA,GAA1C;;AAOA,MAAMF,4BAA4B;EAAA,+BAAG,WAAOrD,MAAP,EAAerB,OAAf,EAA2B;IAC5D,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQ8D,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFJ,CAArB;IAIA,OAAOuC,yBAAyB,CAACT,YAAD,EAAe9B,OAAf,CAAhC;EACH,CANiC;;EAAA,gBAA5B0E,4BAA4B;IAAA;EAAA;AAAA,GAAlC;;AAOA,MAAMF,4BAA4B;EAAA,+BAAG,WAAOnD,MAAP,EAAerB,OAAf,EAA2B;IAC5D,MAAM8B,YAAY,GAAG,EACjB,GAAGT,MADc;MAEjBL,IAAI,QAAQ8D,SAAS,CAACzD,MAAM,CAACL,IAAR,EAAchB,OAAd;IAFJ,CAArB;IAIA,OAAOwC,yBAAyB,CAACV,YAAD,EAAe9B,OAAf,CAAhC;EACH,CANiC;;EAAA,gBAA5BwE,4BAA4B;IAAA;EAAA;AAAA,GAAlC;;AAOA,MAAMQ,cAAc,GAAG,CAACjF,KAAD,EAAQC,OAAR,KAAoB;EACvC,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACfkF,MAAM,EAAEnG,gBADO;IAEfoG,IAAI,EAAEpG,gBAFS;IAGfqG,GAAG,EAAErG,gBAHU;IAIfsG,KAAK,EAAEtG;EAJQ,CAAR,CAAX;AAMH,CAPD;;AAQA,MAAMuG,kBAAkB,GAAG,CAACtF,KAAD,EAAQC,OAAR,KAAoB;EAC3C,OAAOZ,eAAe,CAAC+D,KAAhB,CAAsBpD,KAAtB,EAA6B;IAChCuF,6BAA6B,EAAGjC,KAAD,KAAY;MACvCiC,6BAA6B,EAAEC,sCAAsC,CAAClC,KAAD,EAAQrD,OAAR;IAD9B,CAAZ,CADC;IAIhCyD,CAAC,EAAE,CAAC+B,IAAD,EAAOnC,KAAP,MAAkB;MAAEmC,IAAI,EAAEnC;IAAR,CAAlB;EAJ6B,CAA7B,CAAP;AAMH,CAPD;;AAQA,MAAMS,gCAAgC,GAAG,CAAC/D,KAAD,EAAQC,OAAR,KAAoB;EACzD,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACf0F,SAAS,EAAGhC,CAAD,IAAO4B,kBAAkB,CAAC5B,CAAD,EAAIzD,OAAJ;EADrB,CAAR,CAAX;AAGH,CAJD;;AAKA,MAAMuF,sCAAsC,GAAG,CAACxF,KAAD,EAAQC,OAAR,KAAoB;EAC/D,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACf2F,WAAW,EAAE,EADE;IAEfC,cAAc,EAAEzH,KAFD;IAGf0H,WAAW,EAAGnC,CAAD,IAAOoC,cAAc,CAACpC,CAAD,EAAIzD,OAAJ,CAHnB;IAIf8F,UAAU,EAAGrC,CAAD,IAAOsC,aAAa,CAACtC,CAAD,EAAIzD,OAAJ,CAJjB;IAKfgG,iBAAiB,EAAE,EALJ;IAMfC,mBAAmB,EAAE;EANN,CAAR,CAAX;AAQH,CATD;;AAUA,MAAMJ,cAAc,GAAG,CAAC9F,KAAD,EAAQC,OAAR,KAAoB;EACvC,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACfmG,WAAW,EAAGzC,CAAD,IAAOuB,cAAc,CAACvB,CAAD,EAAIzD,OAAJ,CADnB;IAEfmG,4BAA4B,EAAE;EAFf,CAAR,CAAX;AAIH,CALD;;AAMA,MAAMJ,aAAa,GAAG,CAAChG,KAAD,EAAQC,OAAR,KAAoB;EACtC,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACfmG,WAAW,EAAGzC,CAAD,IAAOuB,cAAc,CAACvB,CAAD,EAAIzD,OAAJ,CADnB;IAEfoG,wCAAwC,EAAE,EAF3B;IAGfC,0CAA0C,EAAE;EAH7B,CAAR,CAAX;AAKH,CAND;;AAOA,MAAMnC,aAAa,GAAG,CAACnE,KAAD,EAAQC,OAAR,KAAoB;EACtC,OAAOjB,IAAI,CAACgB,KAAD,EAAQ;IACfuG,eAAe,EAAE,EADF;IAEfC,UAAU,EAAEvG,OAAO,CAACwG;EAFL,CAAR,CAAX;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAG,CAACpF,MAAD,EAASrB,OAAT,KAAqB;EAC5C,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChBqF,2BAA2B,EAAE/H,qBADb;IAEhBgI,qBAAqB,EAAEhI,qBAFP;IAGhBiI,wBAAwB,EAAEjI,qBAHV;IAIhBkI,wBAAwB,EAAElI,qBAJV;IAKhBmI,sBAAsB,EAAEnI,qBALR;IAMhBoI,qBAAqB,EAAEpI,qBANP;IAOhBqI,oBAAoB,EAAErI,qBAPN;IAQhBsI,sBAAsB,EAAEtI,qBARR;IAShBuI,gBAAgB,EAAEvI,qBATF;IAUhBwI,qBAAqB,EAAExI;EAVP,CAAT,CAAX;AAYH,CAbD;;AAcA,MAAMyI,gBAAgB,GAAG,CAAC/F,MAAD,EAASrB,OAAT,KAAqB;EAC1C,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChBgG,kBAAkB,EAAE1I,qBADJ;IAEhB2I,mBAAmB,EAAE3I,qBAFL;IAGhB4I,cAAc,EAAErJ;EAHA,CAAT,CAAX;AAKH,CAND;;AAOA,MAAMsJ,iBAAiB,GAAG,CAACnG,MAAD,EAASrB,OAAT,KAAqB;EAC3C,MAAMyH,MAAM,GAAG,CAACpG,MAAM,IAAI,EAAX,EACVqG,MADU,CACFC,CAAD,IAAOA,CAAC,IAAI,IADT,EAEV/I,GAFU,CAELgJ,KAAD,IAAW;IAChB,OAAOR,gBAAgB,CAACQ,KAAD,EAAQ5H,OAAR,CAAvB;EACH,CAJc,CAAf;EAKA,OAAOyH,MAAP;AACH,CAPD;;AAQA,MAAMI,sCAAsC,GAAG,CAACxG,MAAD,EAASrB,OAAT,KAAqB;EAChE,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChByG,eAAe,EAAGrE,CAAD,IAAOgD,kBAAkB,CAAChD,CAAD,EAAIzD,OAAJ,CAD1B;IAEhB+H,cAAc,EAAGtE,CAAD,IAAO+D,iBAAiB,CAAC/D,CAAD,EAAIzD,OAAJ,CAFxB;IAGhBgI,kBAAkB,EAAEzJ,cAHJ;IAIhB0J,cAAc,EAAGxE,CAAD,IAAOyE,iBAAiB,CAACzE,CAAD,EAAIzD,OAAJ;EAJxB,CAAT,CAAX;AAMH,CAPD;;AAQA,MAAMkI,iBAAiB,GAAG,CAAC7G,MAAD,EAASrB,OAAT,KAAqB;EAC3C,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChB8G,OAAO,EAAExJ,qBADO;IAEhByJ,OAAO,EAAEzJ,qBAFO;IAGhBsG,MAAM,EAAEtG,qBAHQ;IAIhByG,KAAK,EAAEzG;EAJS,CAAT,CAAX;AAMH,CAPD;;AAQA,MAAM0J,kBAAkB,GAAG,CAAChH,MAAD,EAASrB,OAAT,KAAqB;EAC5C,IAAIqB,MAAM,CAACiE,6BAAP,IAAwC,IAA5C,EAAkD;IAC9C,OAAO;MACHA,6BAA6B,EAAEuC,sCAAsC,CAACxG,MAAM,CAACiE,6BAAR,EAAuCtF,OAAvC;IADlE,CAAP;EAGH;;EACD,OAAO;IAAE6E,QAAQ,EAAE/B,MAAM,CAACwF,OAAP,CAAejH,MAAf,EAAuB,CAAvB;EAAZ,CAAP;AACH,CAPD;;AAQA,MAAM0D,gCAAgC,GAAG,CAAC1D,MAAD,EAASrB,OAAT,KAAqB;EAC1D,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChBkH,kBAAkB,EAAG9E,CAAD,IAAO+E,qBAAqB,CAAC/E,CAAD,EAAIzD,OAAJ;EADhC,CAAT,CAAX;AAGH,CAJD;;AAKA,MAAMwI,qBAAqB,GAAG,CAACnH,MAAD,EAASrB,OAAT,KAAqB;EAC/C,OAAOjB,IAAI,CAACsC,MAAD,EAAS;IAChBoE,SAAS,EAAGhC,CAAD,IAAO4E,kBAAkB,CAAC5J,aAAa,CAACgF,CAAD,CAAd,EAAmBzD,OAAnB;EADpB,CAAT,CAAX;AAGH,CAJD;;AAKA,MAAM0B,mBAAmB,GAAIL,MAAD,KAAa;EACrCoH,cAAc,EAAEpH,MAAM,CAACC,UADc;EAErCoH,SAAS,EAAErH,MAAM,CAACd,OAAP,CAAe,kBAAf,KAAsCc,MAAM,CAACd,OAAP,CAAe,mBAAf,CAAtC,IAA6Ec,MAAM,CAACd,OAAP,CAAe,kBAAf,CAFnD;EAGrCoI,iBAAiB,EAAEtH,MAAM,CAACd,OAAP,CAAe,YAAf,CAHkB;EAIrCqI,IAAI,EAAEvH,MAAM,CAACd,OAAP,CAAe,aAAf;AAJ+B,CAAb,CAA5B;;AAMA,MAAMsI,iBAAiB,GAAG,CAACC,UAAD,EAAa9I,OAAb,KAAyB7B,WAAW,CAAC2K,UAAD,EAAa9I,OAAb,CAAX,CAAiC+I,IAAjC,CAAuC/H,IAAD,IAAUhB,OAAO,CAACgJ,WAAR,CAAoBhI,IAApB,CAAhD,CAAnD;;AACA,MAAMR,yBAAyB,GAAI6C,KAAD,IAAWA,KAAK,KAAKpC,SAAV,IACzCoC,KAAK,KAAK,IAD+B,IAEzCA,KAAK,KAAK,EAF+B,KAGxC,CAACP,MAAM,CAACmG,mBAAP,CAA2B5F,KAA3B,EAAkC6F,QAAlC,CAA2C,QAA3C,CAAD,IAAyD7F,KAAK,CAAC8F,MAAN,IAAgB,CAHjC,MAIxC,CAACrG,MAAM,CAACmG,mBAAP,CAA2B5F,KAA3B,EAAkC6F,QAAlC,CAA2C,MAA3C,CAAD,IAAuD7F,KAAK,CAAC+F,IAAN,IAAc,CAJ7B,CAA7C;;AAKA,MAAMtE,SAAS,GAAG,CAACgE,UAAD,EAAa9I,OAAb,KAAyB6I,iBAAiB,CAACC,UAAD,EAAa9I,OAAb,CAAjB,CAAuC+I,IAAvC,CAA6CM,OAAD,IAAa;EAChG,IAAIA,OAAO,CAACF,MAAZ,EAAoB;IAChB,OAAOnF,IAAI,CAACsF,KAAL,CAAWD,OAAX,CAAP;EACH;;EACD,OAAO,EAAP;AACH,CAL0C,CAA3C;;AAMA,MAAMtH,cAAc;EAAA,+BAAG,WAAOwH,SAAP,EAAkBvJ,OAAlB,EAA8B;IACjD,MAAMqD,KAAK,SAASyB,SAAS,CAACyE,SAAD,EAAYvJ,OAAZ,CAA7B;IACAqD,KAAK,CAACmG,OAAN,GAAgBnG,KAAK,CAACmG,OAAN,IAAiBnG,KAAK,CAACR,OAAvC;IACA,OAAOQ,KAAP;EACH,CAJmB;;EAAA,gBAAdtB,cAAc;IAAA;EAAA;AAAA,GAApB;;AAKA,MAAME,qBAAqB,GAAG,CAACZ,MAAD,EAASM,IAAT,KAAkB;EAC5C,MAAM8H,OAAO,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB7G,MAAM,CAAC8G,IAAP,CAAYF,MAAZ,EAAoBG,IAApB,CAA0BC,CAAD,IAAOA,CAAC,CAACC,WAAF,OAAoBJ,GAAG,CAACI,WAAJ,EAApD,CAAjC;;EACA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;IACpC,IAAIC,UAAU,GAAGD,QAAjB;;IACA,IAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;MAChCA,UAAU,GAAGA,UAAU,CAACC,QAAX,EAAb;IACH;;IACD,IAAID,UAAU,CAACE,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;MAC9BF,UAAU,GAAGA,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;IACH;;IACD,IAAIH,UAAU,CAACE,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;MAC9BF,UAAU,GAAGA,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;IACH;;IACD,IAAIH,UAAU,CAACE,OAAX,CAAmB,GAAnB,KAA2B,CAA/B,EAAkC;MAC9BF,UAAU,GAAGA,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;IACH;;IACD,OAAOH,UAAP;EACH,CAfD;;EAgBA,MAAMI,SAAS,GAAGb,OAAO,CAACpI,MAAM,CAACd,OAAR,EAAiB,kBAAjB,CAAzB;;EACA,IAAI+J,SAAS,KAAKrJ,SAAlB,EAA6B;IACzB,OAAO+I,iBAAiB,CAAC3I,MAAM,CAACd,OAAP,CAAe+J,SAAf,CAAD,CAAxB;EACH;;EACD,IAAI3I,IAAI,CAAC4I,IAAL,KAActJ,SAAlB,EAA6B;IACzB,OAAO+I,iBAAiB,CAACrI,IAAI,CAAC4I,IAAN,CAAxB;EACH;;EACD,IAAI5I,IAAI,CAAC,QAAD,CAAJ,KAAmBV,SAAvB,EAAkC;IAC9B,OAAO+I,iBAAiB,CAACrI,IAAI,CAAC,QAAD,CAAL,CAAxB;EACH;AACJ,CA5BD"},"metadata":{},"sourceType":"module"}