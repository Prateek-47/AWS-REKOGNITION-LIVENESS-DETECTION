{"ast":null,"code":"import isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { v1 as uuid } from 'uuid';\nimport { ConsoleLogger as Logger, browserOrNode } from '@aws-amplify/core';\nimport { Cache } from '@aws-amplify/cache';\nvar PERSONALIZE_CACHE = '_awsct';\nvar PERSONALIZE_CACHE_USERID = '_awsct_uid';\nvar PERSONALIZE_CACHE_SESSIONID = '_awsct_sid';\nvar DEFAULT_CACHE_PREFIX = 'personalize';\nvar TIMER_INTERVAL = 30 * 1000;\nvar DELIMITER = '.';\nvar CACHE_EXPIRY_IN_DAYS = 7;\nvar logger = new Logger('AmazonPersonalizeProvider');\n\nvar SessionInfoManager =\n/** @class */\nfunction () {\n  function SessionInfoManager(prefixKey) {\n    if (prefixKey === void 0) {\n      prefixKey = '';\n    }\n\n    this._isBrowser = browserOrNode().isBrowser;\n    this._timerKey = uuid().substr(0, 15);\n\n    this._refreshTimer();\n  }\n\n  SessionInfoManager.prototype._refreshTimer = function () {\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n\n    var that = this;\n    this._timer = setInterval(function () {\n      that._timerKey = uuid().substr(0, 15);\n    }, TIMER_INTERVAL);\n  };\n\n  SessionInfoManager.prototype.storeValue = function (key, value) {\n    var today = new Date();\n    var expire = new Date();\n    expire.setTime(today.getTime() + 3600000 * 24 * CACHE_EXPIRY_IN_DAYS);\n    Cache.setItem(this._getCachePrefix(key), value, {\n      expires: expire.getTime()\n    });\n  };\n\n  SessionInfoManager.prototype.retrieveValue = function (key) {\n    return Cache.getItem(this._getCachePrefix(key));\n  };\n\n  SessionInfoManager.prototype._getCachePrefix = function (key) {\n    if (this._isBrowser) {\n      return key + DELIMITER + window.location.host;\n    }\n\n    return DEFAULT_CACHE_PREFIX;\n  };\n\n  SessionInfoManager.prototype.getTimerKey = function () {\n    return this._timerKey;\n  };\n\n  SessionInfoManager.prototype.updateSessionInfo = function (userId, sessionInfo) {\n    var existUserId = sessionInfo.userId;\n    var existSessionId = sessionInfo.sessionId;\n\n    if (this._isRequireNewSession(userId, existUserId, existSessionId)) {\n      var newSessionId = uuid();\n      this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n      this.storeValue(PERSONALIZE_CACHE_SESSIONID, newSessionId);\n      sessionInfo.sessionId = newSessionId;\n    } else if (this._isRequireUpdateSessionInfo(userId, existUserId, existSessionId)) {\n      this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n    }\n\n    sessionInfo.userId = userId;\n  };\n\n  SessionInfoManager.prototype._isRequireUpdateSessionInfo = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n    // anonymouse => sign in : hasSession && s_userId == null && curr_userId !=null\n    var isNoCachedSession = isEmpty(cachedSessionSessionId);\n    return !isNoCachedSession && isEmpty(cachedSessionUserId) && !isEmpty(userId);\n  };\n\n  SessionInfoManager.prototype.retrieveSessionInfo = function (trackingId) {\n    var sessionInfo = {};\n    sessionInfo.trackingId = trackingId;\n    sessionInfo.sessionId = this.retrieveValue(PERSONALIZE_CACHE_SESSIONID);\n    sessionInfo.userId = this.retrieveValue(PERSONALIZE_CACHE_USERID);\n\n    if (isEmpty(sessionInfo.sessionId)) {\n      sessionInfo.sessionId = uuid();\n      this.storeValue(PERSONALIZE_CACHE_SESSIONID, sessionInfo.sessionId);\n    }\n\n    this.storeValue(PERSONALIZE_CACHE, trackingId);\n    return sessionInfo;\n  };\n\n  SessionInfoManager.prototype._isRequireNewSession = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n    // new session => 1. no cached session info 2. signOut: s_userId !=null && curr_userId ==null\n    // 3. switch account: s_userId !=null && curr_userId !=null && s_userId != curr_userId\n    var isNoCachedSession = isEmpty(cachedSessionSessionId);\n    var isSignoutCase = isEmpty(userId) && !isEmpty(cachedSessionUserId);\n    var isSwitchUserCase = !isEmpty(userId) && !isEmpty(cachedSessionUserId) && !isEqual(userId, cachedSessionUserId);\n    return isNoCachedSession || isSignoutCase || isSwitchUserCase;\n  };\n\n  return SessionInfoManager;\n}();\n\nexport { SessionInfoManager };","map":{"version":3,"names":["isEmpty","isEqual","v1","uuid","ConsoleLogger","Logger","browserOrNode","Cache","PERSONALIZE_CACHE","PERSONALIZE_CACHE_USERID","PERSONALIZE_CACHE_SESSIONID","DEFAULT_CACHE_PREFIX","TIMER_INTERVAL","DELIMITER","CACHE_EXPIRY_IN_DAYS","logger","SessionInfoManager","prefixKey","_isBrowser","isBrowser","_timerKey","substr","_refreshTimer","prototype","_timer","clearInterval","that","setInterval","storeValue","key","value","today","Date","expire","setTime","getTime","setItem","_getCachePrefix","expires","retrieveValue","getItem","window","location","host","getTimerKey","updateSessionInfo","userId","sessionInfo","existUserId","existSessionId","sessionId","_isRequireNewSession","newSessionId","_isRequireUpdateSessionInfo","cachedSessionUserId","cachedSessionSessionId","isNoCachedSession","retrieveSessionInfo","trackingId","isSignoutCase","isSwitchUserCase"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/analytics/lib-esm/Providers/AmazonPersonalizeHelper/SessionInfoManager.js"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { v1 as uuid } from 'uuid';\nimport { ConsoleLogger as Logger, browserOrNode } from '@aws-amplify/core';\nimport { Cache } from '@aws-amplify/cache';\nvar PERSONALIZE_CACHE = '_awsct';\nvar PERSONALIZE_CACHE_USERID = '_awsct_uid';\nvar PERSONALIZE_CACHE_SESSIONID = '_awsct_sid';\nvar DEFAULT_CACHE_PREFIX = 'personalize';\nvar TIMER_INTERVAL = 30 * 1000;\nvar DELIMITER = '.';\nvar CACHE_EXPIRY_IN_DAYS = 7;\nvar logger = new Logger('AmazonPersonalizeProvider');\nvar SessionInfoManager = /** @class */ (function () {\n    function SessionInfoManager(prefixKey) {\n        if (prefixKey === void 0) { prefixKey = ''; }\n        this._isBrowser = browserOrNode().isBrowser;\n        this._timerKey = uuid().substr(0, 15);\n        this._refreshTimer();\n    }\n    SessionInfoManager.prototype._refreshTimer = function () {\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var that = this;\n        this._timer = setInterval(function () {\n            that._timerKey = uuid().substr(0, 15);\n        }, TIMER_INTERVAL);\n    };\n    SessionInfoManager.prototype.storeValue = function (key, value) {\n        var today = new Date();\n        var expire = new Date();\n        expire.setTime(today.getTime() + 3600000 * 24 * CACHE_EXPIRY_IN_DAYS);\n        Cache.setItem(this._getCachePrefix(key), value, {\n            expires: expire.getTime(),\n        });\n    };\n    SessionInfoManager.prototype.retrieveValue = function (key) {\n        return Cache.getItem(this._getCachePrefix(key));\n    };\n    SessionInfoManager.prototype._getCachePrefix = function (key) {\n        if (this._isBrowser) {\n            return key + DELIMITER + window.location.host;\n        }\n        return DEFAULT_CACHE_PREFIX;\n    };\n    SessionInfoManager.prototype.getTimerKey = function () {\n        return this._timerKey;\n    };\n    SessionInfoManager.prototype.updateSessionInfo = function (userId, sessionInfo) {\n        var existUserId = sessionInfo.userId;\n        var existSessionId = sessionInfo.sessionId;\n        if (this._isRequireNewSession(userId, existUserId, existSessionId)) {\n            var newSessionId = uuid();\n            this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n            this.storeValue(PERSONALIZE_CACHE_SESSIONID, newSessionId);\n            sessionInfo.sessionId = newSessionId;\n        }\n        else if (this._isRequireUpdateSessionInfo(userId, existUserId, existSessionId)) {\n            this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n        }\n        sessionInfo.userId = userId;\n    };\n    SessionInfoManager.prototype._isRequireUpdateSessionInfo = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n        // anonymouse => sign in : hasSession && s_userId == null && curr_userId !=null\n        var isNoCachedSession = isEmpty(cachedSessionSessionId);\n        return (!isNoCachedSession && isEmpty(cachedSessionUserId) && !isEmpty(userId));\n    };\n    SessionInfoManager.prototype.retrieveSessionInfo = function (trackingId) {\n        var sessionInfo = {};\n        sessionInfo.trackingId = trackingId;\n        sessionInfo.sessionId = this.retrieveValue(PERSONALIZE_CACHE_SESSIONID);\n        sessionInfo.userId = this.retrieveValue(PERSONALIZE_CACHE_USERID);\n        if (isEmpty(sessionInfo.sessionId)) {\n            sessionInfo.sessionId = uuid();\n            this.storeValue(PERSONALIZE_CACHE_SESSIONID, sessionInfo.sessionId);\n        }\n        this.storeValue(PERSONALIZE_CACHE, trackingId);\n        return sessionInfo;\n    };\n    SessionInfoManager.prototype._isRequireNewSession = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n        // new session => 1. no cached session info 2. signOut: s_userId !=null && curr_userId ==null\n        // 3. switch account: s_userId !=null && curr_userId !=null && s_userId != curr_userId\n        var isNoCachedSession = isEmpty(cachedSessionSessionId);\n        var isSignoutCase = isEmpty(userId) && !isEmpty(cachedSessionUserId);\n        var isSwitchUserCase = !isEmpty(userId) &&\n            !isEmpty(cachedSessionUserId) &&\n            !isEqual(userId, cachedSessionUserId);\n        return isNoCachedSession || isSignoutCase || isSwitchUserCase;\n    };\n    return SessionInfoManager;\n}());\nexport { SessionInfoManager };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}