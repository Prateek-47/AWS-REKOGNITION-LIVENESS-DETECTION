{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nlet wasmDepthToSpace;\n\nfunction setup(backend) {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null\n  /*void*/\n  , ['number', 'number', 'number', 'array', 'number', 'array', 'array', 'number', 'number']);\n}\n\nexport function depthToSpace(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockSize,\n    dataFormat\n  } = attrs;\n  const batchSize = x.shape[0];\n  const inputHeight = dataFormat === 'NHWC' ? x.shape[1] : x.shape[2];\n  const inputWidth = dataFormat === 'NHWC' ? x.shape[2] : x.shape[3];\n  const inputDepth = dataFormat === 'NHWC' ? x.shape[3] : x.shape[1];\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n  const outputShape = dataFormat === 'NHWC' ? [batchSize, outputHeight, outputWidth, outputDepth] : [batchSize, outputDepth, outputHeight, outputWidth];\n  const out = backend.makeOutput(outputShape, 'float32');\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1, outputShapeBytes, outStridesBytes, outputShape.length, outId);\n  return out;\n}\nexport const depthToSpaceConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace\n};","map":{"version":3,"names":["DepthToSpace","util","wasmDepthToSpace","setup","backend","wasm","cwrap","depthToSpace","args","inputs","attrs","x","blockSize","dataFormat","batchSize","shape","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputShape","out","makeOutput","xData","dataIdMap","get","dataId","xId","id","xStridesBytes","Uint8Array","Int32Array","computeStrides","buffer","outputShapeBytes","outStridesBytes","outId","channelsLast","length","depthToSpaceConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DepthToSpace.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nlet wasmDepthToSpace;\nfunction setup(backend) {\n    wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'array',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nexport function depthToSpace(args) {\n    const { backend, inputs, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n    const out = backend.makeOutput(outputShape, 'float32');\n    const xData = backend.dataIdMap.get(x.dataId);\n    const xId = xData.id;\n    const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n    const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n    wasmDepthToSpace(xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1, outputShapeBytes, outStridesBytes, outputShape.length, outId);\n    return out;\n}\nexport const depthToSpaceConfig = {\n    kernelName: DepthToSpace,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: depthToSpace\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}