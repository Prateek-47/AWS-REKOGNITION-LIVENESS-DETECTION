{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\n\n\nexport var getCanonicalHeaders = function (headers) {\n  return Object.entries(headers).map(function (_a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    return {\n      key: key.toLowerCase(),\n      value: (_b = value === null || value === void 0 ? void 0 : value.trim().replace(/\\s+/g, ' ')) !== null && _b !== void 0 ? _b : ''\n    };\n  }).sort(function (a, b) {\n    return a.key < b.key ? -1 : 1;\n  }).map(function (entry) {\n    return \"\".concat(entry.key, \":\").concat(entry.value, \"\\n\");\n  }).join('');\n};","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","getCanonicalHeaders","headers","Object","entries","map","_a","_b","_c","key","toLowerCase","trim","replace","sort","a","b","entry","concat","join"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nexport var getCanonicalHeaders = function (headers) {\n    return Object.entries(headers)\n        .map(function (_a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        return ({\n            key: key.toLowerCase(),\n            value: (_b = value === null || value === void 0 ? void 0 : value.trim().replace(/\\s+/g, ' ')) !== null && _b !== void 0 ? _b : '',\n        });\n    })\n        .sort(function (a, b) { return (a.key < b.key ? -1 : 1); })\n        .map(function (entry) { return \"\".concat(entry.key, \":\").concat(entry.value, \"\\n\"); })\n        .join('');\n};\n"],"mappings":"AAAA;AACA;AACA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;EACA,IAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;EACR,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;EAAA,IAAmBO,CAAnB;EAAA,IAAsBC,EAAE,GAAG,EAA3B;EAAA,IAA+BC,CAA/B;;EACA,IAAI;IACA,OAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0DH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;EAC7D,CAFD,CAGA,OAAOC,KAAP,EAAc;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAT,CAAJ;EAAuB,CAHvC,SAIQ;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;IAC1C,CAFD,SAGQ;MAAE,IAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;IAAgB;EACpC;;EACD,OAAON,EAAP;AACH,CAfD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAIO,mBAAmB,GAAG,UAAUC,OAAV,EAAmB;EAChD,OAAOC,MAAM,CAACC,OAAP,CAAeF,OAAf,EACFG,GADE,CACE,UAAUC,EAAV,EAAc;IACnB,IAAIC,EAAJ;;IACA,IAAIC,EAAE,GAAGvB,MAAM,CAACqB,EAAD,EAAK,CAAL,CAAf;IAAA,IAAwBG,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAhC;IAAA,IAAqCT,KAAK,GAAGS,EAAE,CAAC,CAAD,CAA/C;;IACA,OAAQ;MACJC,GAAG,EAAEA,GAAG,CAACC,WAAJ,EADD;MAEJX,KAAK,EAAE,CAACQ,EAAE,GAAGR,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACY,IAAN,GAAaC,OAAb,CAAqB,MAArB,EAA6B,GAA7B,CAApD,MAA2F,IAA3F,IAAmGL,EAAE,KAAK,KAAK,CAA/G,GAAmHA,EAAnH,GAAwH;IAF3H,CAAR;EAIH,CARM,EASFM,IATE,CASG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAAE,OAAQD,CAAC,CAACL,GAAF,GAAQM,CAAC,CAACN,GAAV,GAAgB,CAAC,CAAjB,GAAqB,CAA7B;EAAkC,CATvD,EAUFJ,GAVE,CAUE,UAAUW,KAAV,EAAiB;IAAE,OAAO,GAAGC,MAAH,CAAUD,KAAK,CAACP,GAAhB,EAAqB,GAArB,EAA0BQ,MAA1B,CAAiCD,KAAK,CAACjB,KAAvC,EAA8C,IAA9C,CAAP;EAA6D,CAVlF,EAWFmB,IAXE,CAWG,EAXH,CAAP;AAYH,CAbM"},"metadata":{},"sourceType":"module"}