{"ast":null,"code":"import { __awaiter as e, __rest as t } from \"tslib\";\nimport { Auth as r } from \"aws-amplify\";\nimport n from \"lodash/get.js\";\nimport { createMachine as o, sendUpdate as i } from \"xstate\";\nimport { runValidators as s } from \"../../../validators/index.mjs\";\nimport { clearAttributeToVerify as a, clearChallengeName as d, clearRequiredAttributes as c, clearError as l, clearFormValues as u, clearTouched as g, clearUnverifiedContactMethods as m, clearValidationError as f, handleInput as p, handleSubmit as h, handleBlur as I, parsePhoneNumber as v, setChallengeName as S, setConfirmResetPasswordIntent as A, setConfirmSignUpIntent as U, setRequiredAttributes as E, setCredentials as y, setFieldErrors as T, setRemoteError as C, setTotpSecretCode as b, setUnverifiedContactMethods as N, setUser as w, setUsernameAuthAttributes as R } from \"../actions.mjs\";\nimport { defaultServices as P } from \"../defaultServices.mjs\";\nimport { isEmpty as V } from \"../../../utils/index.mjs\";\n\nconst _ = [\"SMS_MFA\", \"SOFTWARE_TOKEN_MFA\"],\n      F = e => n(e, \"data.challengeName\"),\n      O = (e, t) => e === t,\n      j = e => _.includes(e);\n\nfunction k({\n  services: n\n}) {\n  return o({\n    initial: \"init\",\n    id: \"signInActor\",\n    predictableActionArguments: !0,\n    states: {\n      init: {\n        always: [{\n          target: \"autoSignIn.submit\",\n          cond: \"shouldAutoSubmit\"\n        }, {\n          target: \"autoSignIn\",\n          cond: \"shouldAutoSignIn\"\n        }, {\n          target: \"signIn\"\n        }]\n      },\n      signIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              FEDERATED_SIGN_IN: \"federatedSignIn\"\n            }\n          },\n          federatedSignIn: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"federatedSignIn\",\n              onError: {\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"parsePhoneNumber\", \"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"verifying\"\n              }],\n              onError: [{\n                cond: \"shouldRedirectToConfirmSignUp\",\n                actions: [\"setCredentials\", \"setConfirmSignUpIntent\"],\n                target: \"rejected\"\n              }, {\n                cond: \"shouldRedirectToConfirmResetPassword\",\n                actions: [\"setUsernameAuthAttributes\", \"setConfirmResetPasswordIntent\"],\n                target: \"rejected\"\n              }, {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }]\n            }\n          },\n          verifying: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"checkVerifiedContact\",\n              onDone: [{\n                cond: \"shouldRequestVerification\",\n                target: \"#signInActor.verifyUser\",\n                actions: \"setUnverifiedContactMethods\"\n              }, {\n                target: \"resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      autoSignIn: {\n        initial: \"pending\",\n        states: {\n          pending: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            on: {\n              AUTO_SIGN_IN: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              AUTO_SIGN_IN_FAILURE: {\n                actions: \"setRemoteError\",\n                target: \"pending\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"#signInActor.signIn\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      confirmSignIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"confirmSignIn\",\n              onDone: {\n                target: \"#signInActor.resolved\",\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      forceNewPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: \"sendUpdate\"\n              },\n              invalid: {\n                entry: \"sendUpdate\"\n              }\n            },\n            on: {\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submit: {\n            initial: \"idle\",\n            entry: \"clearError\",\n            states: {\n              idle: {\n                entry: \"sendUpdate\",\n                on: {\n                  SUBMIT: {\n                    actions: \"handleSubmit\",\n                    target: \"validate\"\n                  }\n                }\n              },\n              validate: {\n                entry: \"sendUpdate\",\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"sendUpdate\", \"clearError\"],\n                invoke: {\n                  src: \"forceNewPassword\",\n                  onDone: [{\n                    cond: \"shouldConfirmSignIn\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.confirmSignIn\"\n                  }, {\n                    cond: \"shouldSetupTOTP\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.setupTOTP\"\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signInActor.resolved\"\n              }\n            }\n          }\n        }\n      },\n      setupTOTP: {\n        initial: \"getTotpSecretCode\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          getTotpSecretCode: {\n            invoke: {\n              src: \"getTotpSecretCode\",\n              onDone: {\n                target: \"edit\",\n                actions: \"setTotpSecretCode\"\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"verifyTotpToken\",\n              onDone: {\n                actions: [\"clearChallengeName\", \"clearRequiredAttributes\"],\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      verifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"verifyUser\",\n              onDone: {\n                target: \"#signInActor.confirmVerifyUser\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmVerifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUnverifiedContactMethods\", \"clearAttributeToVerify\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"confirmVerifyUser\",\n              onDone: {\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: e => ({\n          user: e.user\n        })\n      },\n      rejected: {\n        type: \"final\",\n        data: (e, t) => ({\n          intent: e.redirectIntent,\n          authAttributes: e.authAttributes\n        })\n      }\n    }\n  }, {\n    actions: {\n      clearAttributeToVerify: a,\n      clearChallengeName: d,\n      clearRequiredAttributes: c,\n      clearError: l,\n      clearFormValues: u,\n      clearTouched: g,\n      clearUnverifiedContactMethods: m,\n      clearValidationError: f,\n      handleInput: p,\n      handleSubmit: h,\n      handleBlur: I,\n      parsePhoneNumber: v,\n      setChallengeName: S,\n      setConfirmResetPasswordIntent: A,\n      setConfirmSignUpIntent: U,\n      setRequiredAttributes: E,\n      setCredentials: y,\n      setFieldErrors: T,\n      setRemoteError: C,\n      setTotpSecretCode: b,\n      setUnverifiedContactMethods: N,\n      setUser: w,\n      setUsernameAuthAttributes: R,\n      sendUpdate: i()\n    },\n    guards: {\n      shouldAutoSignIn: e => \"autoSignIn\" === (null == e ? void 0 : e.intent),\n      shouldAutoSubmit: e => \"autoSignInSubmit\" === (null == e ? void 0 : e.intent),\n      shouldConfirmSignIn: (e, t) => j(F(t)),\n      shouldForceChangePassword: (e, t) => O(F(t), \"NEW_PASSWORD_REQUIRED\"),\n      shouldRedirectToConfirmResetPassword: (e, t) => \"PasswordResetRequiredException\" === t.data.code,\n      shouldRedirectToConfirmSignUp: (e, t) => \"UserNotConfirmedException\" === t.data.code,\n      shouldRequestVerification: (e, t) => {\n        const {\n          unverified: r,\n          verified: n\n        } = t.data;\n        return V(n) && !V(r);\n      },\n      shouldSetupTOTP: (e, t) => O(F(t), \"MFA_SETUP\")\n    },\n    services: {\n      signIn(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            authAttributes: e = {},\n            formValues: r = {}\n          } = t,\n                o = Object.assign(Object.assign({}, e), r),\n                {\n            username: i,\n            password: s\n          } = o;\n          return yield n.handleSignIn({\n            username: i,\n            password: s\n          });\n        });\n      },\n\n      confirmSignIn(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            challengeName: e,\n            user: o\n          } = t,\n                {\n            confirmation_code: i\n          } = t.formValues,\n                s = j(e) ? e : void 0;\n          return yield n.handleConfirmSignIn({\n            user: o,\n            code: i,\n            mfaType: s\n          }), yield r.currentAuthenticatedUser();\n        });\n      },\n\n      forceNewPassword(n) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e,\n            formValues: o\n          } = n;\n          let i,\n              {\n            password: s,\n            confirm_password: a,\n            phone_number: d,\n            country_code: c\n          } = o,\n              l = t(o, [\"password\", \"confirm_password\", \"phone_number\", \"country_code\"]);\n          d && (i = `${c}${d}`.replace(/[^A-Z0-9+]/gi, \"\"), l = Object.assign(Object.assign({}, l), {\n            phone_number: i\n          }));\n\n          try {\n            const t = yield r.completeNewPassword(e, s, l);\n            return t.challengeName ? t : r.currentAuthenticatedUser();\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        });\n      },\n\n      getTotpSecretCode(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e\n          } = t;\n          return r.setupTOTP(e);\n        });\n      },\n\n      verifyTotpToken(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            formValues: e,\n            user: n\n          } = t,\n                {\n            confirmation_code: o\n          } = e;\n          return r.verifyTotpToken(n, o);\n        });\n      },\n\n      federatedSignIn(t, n) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            provider: e\n          } = n.data;\n          return yield r.federatedSignIn({\n            provider: e\n          });\n        });\n      },\n\n      checkVerifiedContact(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            user: e\n          } = t;\n          return yield r.verifiedContact(e);\n        });\n      },\n\n      verifyUser(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            unverifiedAttr: e\n          } = t.formValues,\n                n = yield r.verifyCurrentUserAttribute(e);\n          return t.attributeToVerify = e, n;\n        });\n      },\n\n      confirmVerifyUser(t) {\n        return e(this, void 0, void 0, function* () {\n          const {\n            attributeToVerify: e\n          } = t,\n                {\n            confirmation_code: n\n          } = t.formValues;\n          return yield r.verifyCurrentUserAttributeSubmit(e, n);\n        });\n      },\n\n      validateFields(t) {\n        return e(this, void 0, void 0, function* () {\n          return s(t.formValues, t.touched, t.passwordSettings, [P.validateFormPassword, P.validateConfirmPassword]);\n        });\n      }\n\n    }\n  });\n}\n\nexport { k as signInActor };","map":{"version":3,"names":["__awaiter","e","__rest","t","Auth","r","n","createMachine","o","sendUpdate","i","runValidators","s","clearAttributeToVerify","a","clearChallengeName","d","clearRequiredAttributes","c","clearError","l","clearFormValues","u","clearTouched","g","clearUnverifiedContactMethods","m","clearValidationError","f","handleInput","p","handleSubmit","h","handleBlur","I","parsePhoneNumber","v","setChallengeName","S","setConfirmResetPasswordIntent","A","setConfirmSignUpIntent","U","setRequiredAttributes","E","setCredentials","y","setFieldErrors","T","setRemoteError","C","setTotpSecretCode","b","setUnverifiedContactMethods","N","setUser","w","setUsernameAuthAttributes","R","defaultServices","P","isEmpty","V","_","F","O","j","includes","k","services","initial","id","predictableActionArguments","states","init","always","target","cond","signIn","exit","edit","entry","on","SUBMIT","actions","CHANGE","FEDERATED_SIGN_IN","federatedSignIn","tags","invoke","src","onError","submit","onDone","verifying","resolved","rejected","autoSignIn","pending","AUTO_SIGN_IN","AUTO_SIGN_IN_FAILURE","confirmSignIn","SIGN_IN","forceNewPassword","type","validation","valid","invalid","BLUR","idle","validate","setupTOTP","getTotpSecretCode","verifyUser","SKIP","confirmVerifyUser","data","user","intent","redirectIntent","authAttributes","guards","shouldAutoSignIn","shouldAutoSubmit","shouldConfirmSignIn","shouldForceChangePassword","shouldRedirectToConfirmResetPassword","code","shouldRedirectToConfirmSignUp","shouldRequestVerification","unverified","verified","shouldSetupTOTP","formValues","Object","assign","username","password","handleSignIn","challengeName","confirmation_code","handleConfirmSignIn","mfaType","currentAuthenticatedUser","confirm_password","phone_number","country_code","replace","completeNewPassword","Promise","reject","verifyTotpToken","provider","checkVerifiedContact","verifiedContact","unverifiedAttr","verifyCurrentUserAttribute","attributeToVerify","verifyCurrentUserAttributeSubmit","validateFields","touched","passwordSettings","validateFormPassword","validateConfirmPassword","signInActor"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/ui/dist/esm/machines/authenticator/actors/signIn.mjs"],"sourcesContent":["import{__awaiter as e,__rest as t}from\"tslib\";import{Auth as r}from\"aws-amplify\";import n from\"lodash/get.js\";import{createMachine as o,sendUpdate as i}from\"xstate\";import{runValidators as s}from\"../../../validators/index.mjs\";import{clearAttributeToVerify as a,clearChallengeName as d,clearRequiredAttributes as c,clearError as l,clearFormValues as u,clearTouched as g,clearUnverifiedContactMethods as m,clearValidationError as f,handleInput as p,handleSubmit as h,handleBlur as I,parsePhoneNumber as v,setChallengeName as S,setConfirmResetPasswordIntent as A,setConfirmSignUpIntent as U,setRequiredAttributes as E,setCredentials as y,setFieldErrors as T,setRemoteError as C,setTotpSecretCode as b,setUnverifiedContactMethods as N,setUser as w,setUsernameAuthAttributes as R}from\"../actions.mjs\";import{defaultServices as P}from\"../defaultServices.mjs\";import{isEmpty as V}from\"../../../utils/index.mjs\";const _=[\"SMS_MFA\",\"SOFTWARE_TOKEN_MFA\"],F=e=>n(e,\"data.challengeName\"),O=(e,t)=>e===t,j=e=>_.includes(e);function k({services:n}){return o({initial:\"init\",id:\"signInActor\",predictableActionArguments:!0,states:{init:{always:[{target:\"autoSignIn.submit\",cond:\"shouldAutoSubmit\"},{target:\"autoSignIn\",cond:\"shouldAutoSignIn\"},{target:\"signIn\"}]},signIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},CHANGE:{actions:\"handleInput\"},FEDERATED_SIGN_IN:\"federatedSignIn\"}},federatedSignIn:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"federatedSignIn\",onError:{actions:\"setRemoteError\"}}},submit:{tags:[\"pending\"],entry:[\"parsePhoneNumber\",\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"verifying\"}],onError:[{cond:\"shouldRedirectToConfirmSignUp\",actions:[\"setCredentials\",\"setConfirmSignUpIntent\"],target:\"rejected\"},{cond:\"shouldRedirectToConfirmResetPassword\",actions:[\"setUsernameAuthAttributes\",\"setConfirmResetPasswordIntent\"],target:\"rejected\"},{actions:\"setRemoteError\",target:\"edit\"}]}},verifying:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"checkVerifiedContact\",onDone:[{cond:\"shouldRequestVerification\",target:\"#signInActor.verifyUser\",actions:\"setUnverifiedContactMethods\"},{target:\"resolved\"}],onError:{actions:\"setRemoteError\",target:\"edit\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},autoSignIn:{initial:\"pending\",states:{pending:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],on:{AUTO_SIGN_IN:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],AUTO_SIGN_IN_FAILURE:{actions:\"setRemoteError\",target:\"pending\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],onError:{actions:\"setRemoteError\",target:\"#signInActor.signIn\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},confirmSignIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"confirmSignIn\",onDone:{target:\"#signInActor.resolved\",actions:[\"setUser\",\"clearChallengeName\",\"clearRequiredAttributes\"]},onError:{target:\"edit\",actions:\"setRemoteError\"}}}}},forceNewPassword:{type:\"parallel\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{validation:{initial:\"pending\",states:{pending:{invoke:{src:\"validateFields\",onDone:{target:\"valid\",actions:\"clearValidationError\"},onError:{target:\"invalid\",actions:\"setFieldErrors\"}}},valid:{entry:\"sendUpdate\"},invalid:{entry:\"sendUpdate\"}},on:{SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\",target:\".pending\"},BLUR:{actions:\"handleBlur\",target:\".pending\"}}},submit:{initial:\"idle\",entry:\"clearError\",states:{idle:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"validate\"}}},validate:{entry:\"sendUpdate\",invoke:{src:\"validateFields\",onDone:{target:\"pending\",actions:\"clearValidationError\"},onError:{target:\"idle\",actions:\"setFieldErrors\"}}},pending:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"forceNewPassword\",onDone:[{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{target:\"resolved\",actions:[\"setUser\",\"setCredentials\"]}],onError:{target:\"idle\",actions:\"setRemoteError\"}}},resolved:{type:\"final\",always:\"#signInActor.resolved\"}}}}},setupTOTP:{initial:\"getTotpSecretCode\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{getTotpSecretCode:{invoke:{src:\"getTotpSecretCode\",onDone:{target:\"edit\",actions:\"setTotpSecretCode\"},onError:{target:\"edit\",actions:\"setRemoteError\"}}},edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"verifyTotpToken\",onDone:{actions:[\"clearChallengeName\",\"clearRequiredAttributes\"],target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},verifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"verifyUser\",onDone:{target:\"#signInActor.confirmVerifyUser\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},confirmVerifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearUnverifiedContactMethods\",\"clearAttributeToVerify\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"confirmVerifyUser\",onDone:{target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},resolved:{type:\"final\",data:e=>({user:e.user})},rejected:{type:\"final\",data:(e,t)=>({intent:e.redirectIntent,authAttributes:e.authAttributes})}}},{actions:{clearAttributeToVerify:a,clearChallengeName:d,clearRequiredAttributes:c,clearError:l,clearFormValues:u,clearTouched:g,clearUnverifiedContactMethods:m,clearValidationError:f,handleInput:p,handleSubmit:h,handleBlur:I,parsePhoneNumber:v,setChallengeName:S,setConfirmResetPasswordIntent:A,setConfirmSignUpIntent:U,setRequiredAttributes:E,setCredentials:y,setFieldErrors:T,setRemoteError:C,setTotpSecretCode:b,setUnverifiedContactMethods:N,setUser:w,setUsernameAuthAttributes:R,sendUpdate:i()},guards:{shouldAutoSignIn:e=>\"autoSignIn\"===(null==e?void 0:e.intent),shouldAutoSubmit:e=>\"autoSignInSubmit\"===(null==e?void 0:e.intent),shouldConfirmSignIn:(e,t)=>j(F(t)),shouldForceChangePassword:(e,t)=>O(F(t),\"NEW_PASSWORD_REQUIRED\"),shouldRedirectToConfirmResetPassword:(e,t)=>\"PasswordResetRequiredException\"===t.data.code,shouldRedirectToConfirmSignUp:(e,t)=>\"UserNotConfirmedException\"===t.data.code,shouldRequestVerification:(e,t)=>{const{unverified:r,verified:n}=t.data;return V(n)&&!V(r)},shouldSetupTOTP:(e,t)=>O(F(t),\"MFA_SETUP\")},services:{signIn(t){return e(this,void 0,void 0,(function*(){const{authAttributes:e={},formValues:r={}}=t,o=Object.assign(Object.assign({},e),r),{username:i,password:s}=o;return yield n.handleSignIn({username:i,password:s})}))},confirmSignIn(t){return e(this,void 0,void 0,(function*(){const{challengeName:e,user:o}=t,{confirmation_code:i}=t.formValues,s=j(e)?e:void 0;return yield n.handleConfirmSignIn({user:o,code:i,mfaType:s}),yield r.currentAuthenticatedUser()}))},forceNewPassword(n){return e(this,void 0,void 0,(function*(){const{user:e,formValues:o}=n;let i,{password:s,confirm_password:a,phone_number:d,country_code:c}=o,l=t(o,[\"password\",\"confirm_password\",\"phone_number\",\"country_code\"]);d&&(i=`${c}${d}`.replace(/[^A-Z0-9+]/gi,\"\"),l=Object.assign(Object.assign({},l),{phone_number:i}));try{const t=yield r.completeNewPassword(e,s,l);return t.challengeName?t:r.currentAuthenticatedUser()}catch(e){return Promise.reject(e)}}))},getTotpSecretCode(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return r.setupTOTP(e)}))},verifyTotpToken(t){return e(this,void 0,void 0,(function*(){const{formValues:e,user:n}=t,{confirmation_code:o}=e;return r.verifyTotpToken(n,o)}))},federatedSignIn(t,n){return e(this,void 0,void 0,(function*(){const{provider:e}=n.data;return yield r.federatedSignIn({provider:e})}))},checkVerifiedContact(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return yield r.verifiedContact(e)}))},verifyUser(t){return e(this,void 0,void 0,(function*(){const{unverifiedAttr:e}=t.formValues,n=yield r.verifyCurrentUserAttribute(e);return t.attributeToVerify=e,n}))},confirmVerifyUser(t){return e(this,void 0,void 0,(function*(){const{attributeToVerify:e}=t,{confirmation_code:n}=t.formValues;return yield r.verifyCurrentUserAttributeSubmit(e,n)}))},validateFields(t){return e(this,void 0,void 0,(function*(){return s(t.formValues,t.touched,t.passwordSettings,[P.validateFormPassword,P.validateConfirmPassword])}))}}})}export{k as signInActor};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}