{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => /*#__PURE__*/_asyncToGenerator(function* () {\n  if (providers.length === 0) {\n    throw new ProviderError(\"No providers in chain\");\n  }\n\n  let lastProviderError;\n\n  for (const provider of providers) {\n    try {\n      const credentials = yield provider();\n      return credentials;\n    } catch (err) {\n      lastProviderError = err;\n\n      if (err?.tryNextLink) {\n        continue;\n      }\n\n      throw err;\n    }\n  }\n\n  throw lastProviderError;\n});","map":{"version":3,"names":["ProviderError","chain","providers","length","lastProviderError","provider","credentials","err","tryNextLink"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/property-provider/dist-es/chain.js"],"sourcesContent":["import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC,GAAGC,SAAJ,oCAAkB,aAAY;EAC/C,IAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;IACxB,MAAM,IAAIH,aAAJ,CAAkB,uBAAlB,CAAN;EACH;;EACD,IAAII,iBAAJ;;EACA,KAAK,MAAMC,QAAX,IAAuBH,SAAvB,EAAkC;IAC9B,IAAI;MACA,MAAMI,WAAW,SAASD,QAAQ,EAAlC;MACA,OAAOC,WAAP;IACH,CAHD,CAIA,OAAOC,GAAP,EAAY;MACRH,iBAAiB,GAAGG,GAApB;;MACA,IAAIA,GAAG,EAAEC,WAAT,EAAsB;QAClB;MACH;;MACD,MAAMD,GAAN;IACH;EACJ;;EACD,MAAMH,iBAAN;AACH,CAnBoB,CAAd"},"metadata":{},"sourceType":"module"}