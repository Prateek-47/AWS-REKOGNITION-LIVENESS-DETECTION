{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* ({\n    headers,\n    body\n  }, hashConstructor) {\n    for (const headerName of Object.keys(headers)) {\n      if (headerName.toLowerCase() === SHA256_HEADER) {\n        return headers[headerName];\n      }\n    }\n\n    if (body == undefined) {\n      return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n      const hashCtor = new hashConstructor();\n      hashCtor.update(toUint8Array(body));\n      return toHex(yield hashCtor.digest());\n    }\n\n    return UNSIGNED_PAYLOAD;\n  });\n\n  return function getPayloadHash(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["isArrayBuffer","toHex","toUint8Array","SHA256_HEADER","UNSIGNED_PAYLOAD","getPayloadHash","headers","body","hashConstructor","headerName","Object","keys","toLowerCase","undefined","ArrayBuffer","isView","hashCtor","update","digest"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js"],"sourcesContent":["import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,aAAhD;AACA,OAAO,MAAMC,cAAc;EAAA,6BAAG,WAAO;IAAEC,OAAF;IAAWC;EAAX,CAAP,EAA0BC,eAA1B,EAA8C;IACxE,KAAK,MAAMC,UAAX,IAAyBC,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAAzB,EAA+C;MAC3C,IAAIG,UAAU,CAACG,WAAX,OAA6BT,aAAjC,EAAgD;QAC5C,OAAOG,OAAO,CAACG,UAAD,CAAd;MACH;IACJ;;IACD,IAAIF,IAAI,IAAIM,SAAZ,EAAuB;MACnB,OAAO,kEAAP;IACH,CAFD,MAGK,IAAI,OAAON,IAAP,KAAgB,QAAhB,IAA4BO,WAAW,CAACC,MAAZ,CAAmBR,IAAnB,CAA5B,IAAwDP,aAAa,CAACO,IAAD,CAAzE,EAAiF;MAClF,MAAMS,QAAQ,GAAG,IAAIR,eAAJ,EAAjB;MACAQ,QAAQ,CAACC,MAAT,CAAgBf,YAAY,CAACK,IAAD,CAA5B;MACA,OAAON,KAAK,OAAOe,QAAQ,CAACE,MAAT,EAAP,CAAZ;IACH;;IACD,OAAOd,gBAAP;EACH,CAf0B;;EAAA,gBAAdC,cAAc;IAAA;EAAA;AAAA,GAApB"},"metadata":{},"sourceType":"module"}