{"ast":null,"code":"const q = \"required\",\n      r = \"fn\",\n      s = \"argv\",\n      t = \"ref\";\nconst a = \"isSet\",\n      b = \"tree\",\n      c = \"error\",\n      d = \"endpoint\",\n      e = \"PartitionResult\",\n      f = {\n  [q]: false,\n  \"type\": \"String\"\n},\n      g = {\n  [q]: true,\n  \"default\": false,\n  \"type\": \"Boolean\"\n},\n      h = {\n  [t]: \"Endpoint\"\n},\n      i = {\n  [r]: \"booleanEquals\",\n  [s]: [{\n    [t]: \"UseFIPS\"\n  }, true]\n},\n      j = {\n  [r]: \"booleanEquals\",\n  [s]: [{\n    [t]: \"UseDualStack\"\n  }, true]\n},\n      k = {},\n      l = {\n  [r]: \"booleanEquals\",\n  [s]: [true, {\n    [r]: \"getAttr\",\n    [s]: [{\n      [t]: e\n    }, \"supportsFIPS\"]\n  }]\n},\n      m = {\n  [r]: \"booleanEquals\",\n  [s]: [true, {\n    [r]: \"getAttr\",\n    [s]: [{\n      [t]: e\n    }, \"supportsDualStack\"]\n  }]\n},\n      n = [i],\n      o = [j],\n      p = [{\n  [t]: \"Region\"\n}];\nconst _data = {\n  version: \"1.0\",\n  parameters: {\n    Region: f,\n    UseDualStack: g,\n    UseFIPS: g,\n    Endpoint: f\n  },\n  rules: [{\n    conditions: [{\n      [r]: a,\n      [s]: [h]\n    }],\n    type: b,\n    rules: [{\n      conditions: n,\n      error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n      type: c\n    }, {\n      type: b,\n      rules: [{\n        conditions: o,\n        error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n        type: c\n      }, {\n        endpoint: {\n          url: h,\n          properties: k,\n          headers: k\n        },\n        type: d\n      }]\n    }]\n  }, {\n    type: b,\n    rules: [{\n      conditions: [{\n        [r]: a,\n        [s]: p\n      }],\n      type: b,\n      rules: [{\n        conditions: [{\n          [r]: \"aws.partition\",\n          [s]: p,\n          assign: e\n        }],\n        type: b,\n        rules: [{\n          conditions: [i, j],\n          type: b,\n          rules: [{\n            conditions: [l, m],\n            type: b,\n            rules: [{\n              type: b,\n              rules: [{\n                endpoint: {\n                  url: \"https://streaming-rekognition-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                  properties: k,\n                  headers: k\n                },\n                type: d\n              }]\n            }]\n          }, {\n            error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n            type: c\n          }]\n        }, {\n          conditions: n,\n          type: b,\n          rules: [{\n            conditions: [l],\n            type: b,\n            rules: [{\n              type: b,\n              rules: [{\n                endpoint: {\n                  url: \"https://streaming-rekognition-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                  properties: k,\n                  headers: k\n                },\n                type: d\n              }]\n            }]\n          }, {\n            error: \"FIPS is enabled but this partition does not support FIPS\",\n            type: c\n          }]\n        }, {\n          conditions: o,\n          type: b,\n          rules: [{\n            conditions: [m],\n            type: b,\n            rules: [{\n              type: b,\n              rules: [{\n                endpoint: {\n                  url: \"https://streaming-rekognition.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                  properties: k,\n                  headers: k\n                },\n                type: d\n              }]\n            }]\n          }, {\n            error: \"DualStack is enabled but this partition does not support DualStack\",\n            type: c\n          }]\n        }, {\n          type: b,\n          rules: [{\n            endpoint: {\n              url: \"https://streaming-rekognition.{Region}.{PartitionResult#dnsSuffix}\",\n              properties: k,\n              headers: k\n            },\n            type: d\n          }]\n        }]\n      }]\n    }, {\n      error: \"Invalid Configuration: Missing Region\",\n      type: c\n    }]\n  }]\n};\nexport const ruleSet = _data;","map":{"version":3,"names":["q","r","s","t","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","_data","version","parameters","Region","UseDualStack","UseFIPS","Endpoint","rules","conditions","type","error","endpoint","url","properties","headers","assign","ruleSet"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-rekognitionstreaming/dist-es/endpoint/ruleset.js"],"sourcesContent":["const q = \"required\", r = \"fn\", s = \"argv\", t = \"ref\";\nconst a = \"isSet\", b = \"tree\", c = \"error\", d = \"endpoint\", e = \"PartitionResult\", f = { [q]: false, \"type\": \"String\" }, g = { [q]: true, \"default\": false, \"type\": \"Boolean\" }, h = { [t]: \"Endpoint\" }, i = { [r]: \"booleanEquals\", [s]: [{ [t]: \"UseFIPS\" }, true] }, j = { [r]: \"booleanEquals\", [s]: [{ [t]: \"UseDualStack\" }, true] }, k = {}, l = { [r]: \"booleanEquals\", [s]: [true, { [r]: \"getAttr\", [s]: [{ [t]: e }, \"supportsFIPS\"] }] }, m = { [r]: \"booleanEquals\", [s]: [true, { [r]: \"getAttr\", [s]: [{ [t]: e }, \"supportsDualStack\"] }] }, n = [i], o = [j], p = [{ [t]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: f, UseDualStack: g, UseFIPS: g, Endpoint: f }, rules: [{ conditions: [{ [r]: a, [s]: [h] }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: h, properties: k, headers: k }, type: d }] }] }, { type: b, rules: [{ conditions: [{ [r]: a, [s]: p }], type: b, rules: [{ conditions: [{ [r]: \"aws.partition\", [s]: p, assign: e }], type: b, rules: [{ conditions: [i, j], type: b, rules: [{ conditions: [l, m], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://streaming-rekognition-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: k, headers: k }, type: d }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [l], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://streaming-rekognition-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: k, headers: k }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [m], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://streaming-rekognition.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: k, headers: k }, type: d }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { type: b, rules: [{ endpoint: { url: \"https://streaming-rekognition.{Region}.{PartitionResult#dnsSuffix}\", properties: k, headers: k }, type: d }] }] }] }, { error: \"Invalid Configuration: Missing Region\", type: c }] }] };\nexport const ruleSet = _data;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}