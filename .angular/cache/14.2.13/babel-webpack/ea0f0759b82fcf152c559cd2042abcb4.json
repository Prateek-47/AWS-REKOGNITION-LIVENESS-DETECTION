{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { CloudWatchLogsClient, CreateLogGroupCommand, CreateLogStreamCommand, DescribeLogGroupsCommand, DescribeLogStreamsCommand, GetLogEventsCommand, PutLogEventsCommand } from '@aws-sdk/client-cloudwatch-logs';\nimport { Credentials } from '../..';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { getAmplifyUserAgentObject } from '../Platform';\nimport { parseAWSExports } from '../parseAWSExports';\nimport { AWS_CLOUDWATCH_BASE_BUFFER_SIZE, AWS_CLOUDWATCH_CATEGORY, AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE, AWS_CLOUDWATCH_MAX_EVENT_SIZE, AWS_CLOUDWATCH_PROVIDER_NAME, NO_CREDS_ERROR_STRING, RETRY_ERROR_CODES } from '../Util/Constants';\nvar logger = new Logger('AWSCloudWatch');\n\nvar AWSCloudWatchProvider =\n/** @class */\nfunction () {\n  function AWSCloudWatchProvider(config) {\n    this.configure(config);\n    this._dataTracker = {\n      eventUploadInProgress: false,\n      logEvents: []\n    };\n    this._currentLogBatch = [];\n\n    this._initiateLogPushInterval();\n  }\n\n  AWSCloudWatchProvider.prototype.getProviderName = function () {\n    return AWSCloudWatchProvider.PROVIDER_NAME;\n  };\n\n  AWSCloudWatchProvider.prototype.getCategoryName = function () {\n    return AWSCloudWatchProvider.CATEGORY;\n  };\n\n  AWSCloudWatchProvider.prototype.getLogQueue = function () {\n    return this._dataTracker.logEvents;\n  };\n\n  AWSCloudWatchProvider.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    var conf = Object.assign({}, this._config, parseAWSExports(config).Logging, config);\n    this._config = conf;\n    return this._config;\n  };\n\n  AWSCloudWatchProvider.prototype.createLogGroup = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log group in CloudWatch - ', params.logGroupName);\n            cmd = new CreateLogGroupCommand(params);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 3:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 4:\n            error_1 = _a.sent();\n            logger.error(\"error creating log group - \".concat(error_1));\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogGroups = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log groups');\n            cmd = new DescribeLogGroupsCommand(params);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 3:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 4:\n            error_2 = _a.sent();\n            logger.error(\"error getting log group - \".concat(error_2));\n            throw error_2;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.createLogStream = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);\n            cmd = new CreateLogStreamCommand(params);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 3:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 4:\n            error_3 = _a.sent();\n            logger.error(\"error creating log stream - \".concat(error_3));\n            throw error_3;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogStreams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log streams');\n            cmd = new DescribeLogStreamsCommand(params);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 3:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 4:\n            error_4 = _a.sent();\n            logger.error(\"error getting log stream - \".concat(error_4));\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting log events from stream - ', params.logStreamName);\n            cmd = new GetLogEventsCommand(params);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 3:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 4:\n            error_5 = _a.sent();\n            logger.error(\"error getting log events - \".concat(error_5));\n            throw error_5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.pushLogs = function (logs) {\n    logger.debug('pushing log events to Cloudwatch...');\n    this._dataTracker.logEvents = __spreadArray(__spreadArray([], __read(this._dataTracker.logEvents), false), __read(logs), false);\n  };\n\n  AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currGroups, foundGroups, err_1, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._dataTracker.verifiedLogGroup) {\n              return [2\n              /*return*/\n              , this._dataTracker.verifiedLogGroup];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 2:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            return [4\n            /*yield*/\n            , this.getLogGroups({\n              logGroupNamePrefix: logGroupName\n            })];\n\n          case 3:\n            currGroups = _a.sent();\n\n            if (!(typeof currGroups === 'string') && currGroups.logGroups) {\n              foundGroups = currGroups.logGroups.filter(function (group) {\n                return group.logGroupName === logGroupName;\n              });\n\n              if (foundGroups.length > 0) {\n                this._dataTracker.verifiedLogGroup = foundGroups[0];\n                return [2\n                /*return*/\n                , foundGroups[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n\n\n            return [4\n            /*yield*/\n            , this.createLogGroup({\n              logGroupName: logGroupName\n            })];\n\n          case 4:\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n            _a.sent();\n\n            return [2\n            /*return*/\n            , null];\n\n          case 5:\n            err_1 = _a.sent();\n            errString = \"failure during log group search: \".concat(err_1);\n            logger.error(errString);\n            throw err_1;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currStreams, foundStreams, err_2, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            return [4\n            /*yield*/\n            , this.getLogStreams({\n              logGroupName: logGroupName,\n              logStreamNamePrefix: logStreamName\n            })];\n\n          case 2:\n            currStreams = _a.sent();\n\n            if (currStreams.logStreams) {\n              foundStreams = currStreams.logStreams.filter(function (stream) {\n                return stream.logStreamName === logStreamName;\n              });\n\n              if (foundStreams.length > 0) {\n                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n                return [2\n                /*return*/\n                , foundStreams[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n\n\n            return [4\n            /*yield*/\n            , this.createLogStream({\n              logGroupName: logGroupName,\n              logStreamName: logStreamName\n            })];\n\n          case 3:\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n            _a.sent();\n\n            return [2\n            /*return*/\n            , null];\n\n          case 4:\n            err_2 = _a.sent();\n            errString = \"failure during log stream search: \".concat(err_2);\n            logger.error(errString);\n            throw err_2;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, cmd, client, output, err_3, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n\n            logger.debug('sending log events to stream - ', params.logStreamName);\n            cmd = new PutLogEventsCommand(params);\n            client = this._initCloudWatchLogs();\n            return [4\n            /*yield*/\n            , client.send(cmd)];\n\n          case 2:\n            output = _a.sent();\n            return [2\n            /*return*/\n            , output];\n\n          case 3:\n            err_3 = _a.sent();\n            errString = \"failure during log push: \".concat(err_3);\n            logger.error(errString);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {\n    return new CloudWatchLogsClient({\n      region: this._config.region,\n      credentials: this._config.credentials,\n      customUserAgent: getAmplifyUserAgentObject(),\n      endpoint: this._config.endpoint\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Credentials.get().then(function (credentials) {\n              if (!credentials) return false;\n              var cred = Credentials.shear(credentials);\n              logger.debug('set credentials for logging', cred);\n              _this._config.credentials = cred;\n              return true;\n            }).catch(function (error) {\n              logger.warn('ensure credentials error', error);\n              return false;\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var logStream, err_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n              return [2\n              /*return*/\n              , this._nextSequenceToken];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._validateLogGroupExistsAndCreate(this._config.logGroupName)];\n\n          case 2:\n            _a.sent();\n\n            this._nextSequenceToken = undefined;\n            return [4\n            /*yield*/\n            , this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];\n\n          case 3:\n            logStream = _a.sent();\n\n            if (logStream) {\n              this._nextSequenceToken = logStream.uploadSequenceToken;\n            }\n\n            return [2\n            /*return*/\n            , this._nextSequenceToken];\n\n          case 4:\n            err_4 = _a.sent();\n            logger.error(\"failure while getting next sequence token: \".concat(err_4));\n            throw err_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._getNextSequenceToken()];\n\n          case 1:\n            seqToken = _a.sent();\n            logBatch = this._currentLogBatch.length === 0 ? this._getBufferedBatchOfLogs() : this._currentLogBatch;\n            putLogsPayload = {\n              logGroupName: this._config.logGroupName,\n              logStreamName: this._config.logStreamName,\n              logEvents: logBatch,\n              sequenceToken: seqToken\n            };\n            this._dataTracker.eventUploadInProgress = true;\n            return [4\n            /*yield*/\n            , this._sendLogEvents(putLogsPayload)];\n\n          case 2:\n            sendLogEventsResponse = _a.sent();\n            this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2\n            /*return*/\n            , sendLogEventsResponse];\n\n          case 3:\n            err_5 = _a.sent();\n            logger.error(\"error during _safeUploadLogEvents: \".concat(err_5));\n\n            if (RETRY_ERROR_CODES.includes(err_5.name)) {\n              this._getNewSequenceTokenAndSubmit({\n                logEvents: this._currentLogBatch,\n                logGroupName: this._config.logGroupName,\n                logStreamName: this._config.logStreamName\n              });\n            } else {\n              this._dataTracker.eventUploadInProgress = false;\n              throw err_5;\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {\n    /**\n     * CloudWatch has restrictions on the size of the log events that get sent up.\n     * We need to track both the size of each event and the total size of the batch\n     * of logs.\n     *\n     * We also need to ensure that the logs in the batch are sorted in chronological order.\n     * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n     */\n    var currentEventIdx = 0;\n    var totalByteSize = 0;\n\n    while (currentEventIdx < this._dataTracker.logEvents.length) {\n      var currentEvent = this._dataTracker.logEvents[currentEventIdx];\n      var eventSize = currentEvent ? new TextEncoder().encode(currentEvent.message).length + AWS_CLOUDWATCH_BASE_BUFFER_SIZE : 0;\n\n      if (eventSize > AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n        var errString = \"Log entry exceeds maximum size for CloudWatch logs. Log size: \".concat(eventSize, \". Truncating log message.\");\n        logger.warn(errString);\n        currentEvent.message = currentEvent.message.substring(0, eventSize);\n      }\n\n      if (totalByteSize + eventSize > AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE) break;\n      totalByteSize += eventSize;\n      currentEventIdx++;\n    }\n\n    this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);\n    return this._currentLogBatch;\n  };\n\n  AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, sendLogEventsRepsonse, err_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            this._nextSequenceToken = undefined;\n            this._dataTracker.eventUploadInProgress = true;\n            return [4\n            /*yield*/\n            , this._getNextSequenceToken()];\n\n          case 1:\n            seqToken = _a.sent();\n            payload.sequenceToken = seqToken;\n            return [4\n            /*yield*/\n            , this._sendLogEvents(payload)];\n\n          case 2:\n            sendLogEventsRepsonse = _a.sent();\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2\n            /*return*/\n            , sendLogEventsRepsonse];\n\n          case 3:\n            err_6 = _a.sent();\n            logger.error(\"error when retrying log submission with new sequence token: \".concat(err_6));\n            this._dataTracker.eventUploadInProgress = false;\n            throw err_6;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {\n    var _this = this;\n\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n\n    this._timer = setInterval(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var err_7;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 3,, 4]);\n\n              if (!this._getDocUploadPermissibility()) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this._safeUploadLogEvents()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              err_7 = _a.sent();\n              logger.error(\"error when calling _safeUploadLogEvents in the timer interval - \".concat(err_7));\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, 2000);\n  };\n\n  AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {\n    return (this._dataTracker.logEvents.length !== 0 || this._currentLogBatch.length !== 0) && !this._dataTracker.eventUploadInProgress;\n  };\n\n  AWSCloudWatchProvider.PROVIDER_NAME = AWS_CLOUDWATCH_PROVIDER_NAME;\n  AWSCloudWatchProvider.CATEGORY = AWS_CLOUDWATCH_CATEGORY;\n  return AWSCloudWatchProvider;\n}();\n\nexport { AWSCloudWatchProvider };","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","Array","prototype","slice","concat","CloudWatchLogsClient","CreateLogGroupCommand","CreateLogStreamCommand","DescribeLogGroupsCommand","DescribeLogStreamsCommand","GetLogEventsCommand","PutLogEventsCommand","Credentials","ConsoleLogger","Logger","getAmplifyUserAgentObject","parseAWSExports","AWS_CLOUDWATCH_BASE_BUFFER_SIZE","AWS_CLOUDWATCH_CATEGORY","AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE","AWS_CLOUDWATCH_MAX_EVENT_SIZE","AWS_CLOUDWATCH_PROVIDER_NAME","NO_CREDS_ERROR_STRING","RETRY_ERROR_CODES","logger","AWSCloudWatchProvider","config","configure","_dataTracker","eventUploadInProgress","logEvents","_currentLogBatch","_initiateLogPushInterval","getProviderName","PROVIDER_NAME","getCategoryName","CATEGORY","getLogQueue","_config","conf","Object","assign","Logging","createLogGroup","params","cmd","credentialsOK","client","output","error_1","_a","debug","logGroupName","_ensureCredentials","Error","_initCloudWatchLogs","send","getLogGroups","error_2","createLogStream","error_3","logStreamName","getLogStreams","error_4","getLogEvents","error_5","pushLogs","logs","_validateLogGroupExistsAndCreate","currGroups","foundGroups","err_1","errString","verifiedLogGroup","logGroupNamePrefix","logGroups","filter","group","_validateLogStreamExists","currStreams","foundStreams","err_2","logStreamNamePrefix","logStreams","stream","_nextSequenceToken","uploadSequenceToken","_sendLogEvents","err_3","region","credentials","customUserAgent","endpoint","_this","get","cred","shear","catch","warn","_getNextSequenceToken","logStream","err_4","undefined","_safeUploadLogEvents","seqToken","logBatch","putLogsPayload","sendLogEventsResponse","err_5","_getBufferedBatchOfLogs","sequenceToken","nextSequenceToken","includes","name","_getNewSequenceTokenAndSubmit","currentEventIdx","totalByteSize","currentEvent","eventSize","TextEncoder","encode","message","substring","splice","payload","sendLogEventsRepsonse","err_6","_timer","clearInterval","setInterval","err_7","_getDocUploadPermissibility"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/Providers/AWSCloudWatchProvider.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { CloudWatchLogsClient, CreateLogGroupCommand, CreateLogStreamCommand, DescribeLogGroupsCommand, DescribeLogStreamsCommand, GetLogEventsCommand, PutLogEventsCommand, } from '@aws-sdk/client-cloudwatch-logs';\nimport { Credentials } from '../..';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { getAmplifyUserAgentObject } from '../Platform';\nimport { parseAWSExports } from '../parseAWSExports';\nimport { AWS_CLOUDWATCH_BASE_BUFFER_SIZE, AWS_CLOUDWATCH_CATEGORY, AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE, AWS_CLOUDWATCH_MAX_EVENT_SIZE, AWS_CLOUDWATCH_PROVIDER_NAME, NO_CREDS_ERROR_STRING, RETRY_ERROR_CODES, } from '../Util/Constants';\nvar logger = new Logger('AWSCloudWatch');\nvar AWSCloudWatchProvider = /** @class */ (function () {\n    function AWSCloudWatchProvider(config) {\n        this.configure(config);\n        this._dataTracker = {\n            eventUploadInProgress: false,\n            logEvents: [],\n        };\n        this._currentLogBatch = [];\n        this._initiateLogPushInterval();\n    }\n    AWSCloudWatchProvider.prototype.getProviderName = function () {\n        return AWSCloudWatchProvider.PROVIDER_NAME;\n    };\n    AWSCloudWatchProvider.prototype.getCategoryName = function () {\n        return AWSCloudWatchProvider.CATEGORY;\n    };\n    AWSCloudWatchProvider.prototype.getLogQueue = function () {\n        return this._dataTracker.logEvents;\n    };\n    AWSCloudWatchProvider.prototype.configure = function (config) {\n        if (!config)\n            return this._config || {};\n        var conf = Object.assign({}, this._config, parseAWSExports(config).Logging, config);\n        this._config = conf;\n        return this._config;\n    };\n    AWSCloudWatchProvider.prototype.createLogGroup = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('creating new log group in CloudWatch - ', params.logGroupName);\n                        cmd = new CreateLogGroupCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_1 = _a.sent();\n                        logger.error(\"error creating log group - \".concat(error_1));\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogGroups = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting list of log groups');\n                        cmd = new DescribeLogGroupsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_2 = _a.sent();\n                        logger.error(\"error getting log group - \".concat(error_2));\n                        throw error_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.createLogStream = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);\n                        cmd = new CreateLogStreamCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_3 = _a.sent();\n                        logger.error(\"error creating log stream - \".concat(error_3));\n                        throw error_3;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogStreams = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting list of log streams');\n                        cmd = new DescribeLogStreamsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_4 = _a.sent();\n                        logger.error(\"error getting log stream - \".concat(error_4));\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogEvents = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting log events from stream - ', params.logStreamName);\n                        cmd = new GetLogEventsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_5 = _a.sent();\n                        logger.error(\"error getting log events - \".concat(error_5));\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.pushLogs = function (logs) {\n        logger.debug('pushing log events to Cloudwatch...');\n        this._dataTracker.logEvents = __spreadArray(__spreadArray([], __read(this._dataTracker.logEvents), false), __read(logs), false);\n    };\n    AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, currGroups, foundGroups, err_1, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._dataTracker.verifiedLogGroup) {\n                            return [2 /*return*/, this._dataTracker.verifiedLogGroup];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        return [4 /*yield*/, this.getLogGroups({\n                                logGroupNamePrefix: logGroupName,\n                            })];\n                    case 3:\n                        currGroups = _a.sent();\n                        if (!(typeof currGroups === 'string') && currGroups.logGroups) {\n                            foundGroups = currGroups.logGroups.filter(function (group) { return group.logGroupName === logGroupName; });\n                            if (foundGroups.length > 0) {\n                                this._dataTracker.verifiedLogGroup = foundGroups[0];\n                                return [2 /*return*/, foundGroups[0]];\n                            }\n                        }\n                        /**\n                         * If we get to this point, it means that the specified log group does not exist\n                         * and we should create it.\n                         */\n                        return [4 /*yield*/, this.createLogGroup({ logGroupName: logGroupName })];\n                    case 4:\n                        /**\n                         * If we get to this point, it means that the specified log group does not exist\n                         * and we should create it.\n                         */\n                        _a.sent();\n                        return [2 /*return*/, null];\n                    case 5:\n                        err_1 = _a.sent();\n                        errString = \"failure during log group search: \".concat(err_1);\n                        logger.error(errString);\n                        throw err_1;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, currStreams, foundStreams, err_2, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        return [4 /*yield*/, this.getLogStreams({\n                                logGroupName: logGroupName,\n                                logStreamNamePrefix: logStreamName,\n                            })];\n                    case 2:\n                        currStreams = _a.sent();\n                        if (currStreams.logStreams) {\n                            foundStreams = currStreams.logStreams.filter(function (stream) { return stream.logStreamName === logStreamName; });\n                            if (foundStreams.length > 0) {\n                                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n                                return [2 /*return*/, foundStreams[0]];\n                            }\n                        }\n                        /**\n                         * If we get to this point, it means that the specified stream does not\n                         * exist, and we should create it now.\n                         */\n                        return [4 /*yield*/, this.createLogStream({\n                                logGroupName: logGroupName,\n                                logStreamName: logStreamName,\n                            })];\n                    case 3:\n                        /**\n                         * If we get to this point, it means that the specified stream does not\n                         * exist, and we should create it now.\n                         */\n                        _a.sent();\n                        return [2 /*return*/, null];\n                    case 4:\n                        err_2 = _a.sent();\n                        errString = \"failure during log stream search: \".concat(err_2);\n                        logger.error(errString);\n                        throw err_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, cmd, client, output, err_3, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        logger.debug('sending log events to stream - ', params.logStreamName);\n                        cmd = new PutLogEventsCommand(params);\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 2:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 3:\n                        err_3 = _a.sent();\n                        errString = \"failure during log push: \".concat(err_3);\n                        logger.error(errString);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {\n        return new CloudWatchLogsClient({\n            region: this._config.region,\n            credentials: this._config.credentials,\n            customUserAgent: getAmplifyUserAgentObject(),\n            endpoint: this._config.endpoint,\n        });\n    };\n    AWSCloudWatchProvider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()\n                            .then(function (credentials) {\n                            if (!credentials)\n                                return false;\n                            var cred = Credentials.shear(credentials);\n                            logger.debug('set credentials for logging', cred);\n                            _this._config.credentials = cred;\n                            return true;\n                        })\n                            .catch(function (error) {\n                            logger.warn('ensure credentials error', error);\n                            return false;\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var logStream, err_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n                            return [2 /*return*/, this._nextSequenceToken];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._validateLogGroupExistsAndCreate(this._config.logGroupName)];\n                    case 2:\n                        _a.sent();\n                        this._nextSequenceToken = undefined;\n                        return [4 /*yield*/, this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];\n                    case 3:\n                        logStream = _a.sent();\n                        if (logStream) {\n                            this._nextSequenceToken = logStream.uploadSequenceToken;\n                        }\n                        return [2 /*return*/, this._nextSequenceToken];\n                    case 4:\n                        err_4 = _a.sent();\n                        logger.error(\"failure while getting next sequence token: \".concat(err_4));\n                        throw err_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this._getNextSequenceToken()];\n                    case 1:\n                        seqToken = _a.sent();\n                        logBatch = this._currentLogBatch.length === 0\n                            ? this._getBufferedBatchOfLogs()\n                            : this._currentLogBatch;\n                        putLogsPayload = {\n                            logGroupName: this._config.logGroupName,\n                            logStreamName: this._config.logStreamName,\n                            logEvents: logBatch,\n                            sequenceToken: seqToken,\n                        };\n                        this._dataTracker.eventUploadInProgress = true;\n                        return [4 /*yield*/, this._sendLogEvents(putLogsPayload)];\n                    case 2:\n                        sendLogEventsResponse = _a.sent();\n                        this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n                        this._dataTracker.eventUploadInProgress = false;\n                        this._currentLogBatch = [];\n                        return [2 /*return*/, sendLogEventsResponse];\n                    case 3:\n                        err_5 = _a.sent();\n                        logger.error(\"error during _safeUploadLogEvents: \".concat(err_5));\n                        if (RETRY_ERROR_CODES.includes(err_5.name)) {\n                            this._getNewSequenceTokenAndSubmit({\n                                logEvents: this._currentLogBatch,\n                                logGroupName: this._config.logGroupName,\n                                logStreamName: this._config.logStreamName,\n                            });\n                        }\n                        else {\n                            this._dataTracker.eventUploadInProgress = false;\n                            throw err_5;\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {\n        /**\n         * CloudWatch has restrictions on the size of the log events that get sent up.\n         * We need to track both the size of each event and the total size of the batch\n         * of logs.\n         *\n         * We also need to ensure that the logs in the batch are sorted in chronological order.\n         * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n         */\n        var currentEventIdx = 0;\n        var totalByteSize = 0;\n        while (currentEventIdx < this._dataTracker.logEvents.length) {\n            var currentEvent = this._dataTracker.logEvents[currentEventIdx];\n            var eventSize = currentEvent\n                ? new TextEncoder().encode(currentEvent.message).length +\n                    AWS_CLOUDWATCH_BASE_BUFFER_SIZE\n                : 0;\n            if (eventSize > AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n                var errString = \"Log entry exceeds maximum size for CloudWatch logs. Log size: \".concat(eventSize, \". Truncating log message.\");\n                logger.warn(errString);\n                currentEvent.message = currentEvent.message.substring(0, eventSize);\n            }\n            if (totalByteSize + eventSize > AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE)\n                break;\n            totalByteSize += eventSize;\n            currentEventIdx++;\n        }\n        this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);\n        return this._currentLogBatch;\n    };\n    AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seqToken, sendLogEventsRepsonse, err_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        this._nextSequenceToken = undefined;\n                        this._dataTracker.eventUploadInProgress = true;\n                        return [4 /*yield*/, this._getNextSequenceToken()];\n                    case 1:\n                        seqToken = _a.sent();\n                        payload.sequenceToken = seqToken;\n                        return [4 /*yield*/, this._sendLogEvents(payload)];\n                    case 2:\n                        sendLogEventsRepsonse = _a.sent();\n                        this._dataTracker.eventUploadInProgress = false;\n                        this._currentLogBatch = [];\n                        return [2 /*return*/, sendLogEventsRepsonse];\n                    case 3:\n                        err_6 = _a.sent();\n                        logger.error(\"error when retrying log submission with new sequence token: \".concat(err_6));\n                        this._dataTracker.eventUploadInProgress = false;\n                        throw err_6;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        this._timer = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\n            var err_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!this._getDocUploadPermissibility()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._safeUploadLogEvents()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [3 /*break*/, 4];\n                    case 3:\n                        err_7 = _a.sent();\n                        logger.error(\"error when calling _safeUploadLogEvents in the timer interval - \".concat(err_7));\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); }, 2000);\n    };\n    AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {\n        return ((this._dataTracker.logEvents.length !== 0 ||\n            this._currentLogBatch.length !== 0) &&\n            !this._dataTracker.eventUploadInProgress);\n    };\n    AWSCloudWatchProvider.PROVIDER_NAME = AWS_CLOUDWATCH_PROVIDER_NAME;\n    AWSCloudWatchProvider.CATEGORY = AWS_CLOUDWATCH_CATEGORY;\n    return AWSCloudWatchProvider;\n}());\nexport { AWSCloudWatchProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}