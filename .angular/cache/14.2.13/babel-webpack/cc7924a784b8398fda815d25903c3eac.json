{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Hub, StorageHelper } from '@aws-amplify/core';\nimport flatten from 'lodash/flatten';\nimport { addEventListener, notifyEventListeners } from '../common';\nimport { AWSPinpointProvider } from './Providers';\nimport { InAppMessageInteractionEvent } from './types';\nvar STORAGE_KEY_SUFFIX = '_inAppMessages';\nvar logger = new Logger('Notifications.InAppMessaging');\n\nvar InAppMessaging =\n/** @class */\nfunction () {\n  function InAppMessaging() {\n    var _this = this;\n\n    this.config = {};\n    this.listeningForAnalyticEvents = false;\n    this.pluggables = [];\n    this.storageSynced = false;\n    /**\n     * Configure InAppMessaging\n     * @param {Object} config - InAppMessaging configuration object\n     */\n\n    this.configure = function (_a) {\n      if (_a === void 0) {\n        _a = {};\n      }\n\n      var _b = _a.listenForAnalyticsEvents,\n          listenForAnalyticsEvents = _b === void 0 ? true : _b,\n          config = __rest(_a, [\"listenForAnalyticsEvents\"]);\n\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure InAppMessaging', _this.config);\n\n      _this.pluggables.forEach(function (pluggable) {\n        pluggable.configure(_this.config[pluggable.getProviderName()]);\n      });\n\n      if (_this.pluggables.length === 0) {\n        _this.addPluggable(new AWSPinpointProvider());\n      }\n\n      if (listenForAnalyticsEvents && !_this.listeningForAnalyticEvents) {\n        Hub.listen('analytics', _this.analyticsListener);\n        _this.listeningForAnalyticEvents = true;\n      }\n\n      return _this.config;\n    };\n    /**\n     * Get a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to get\n     */\n\n\n    this.getPluggable = function (providerName) {\n      var _a;\n\n      var pluggable = (_a = _this.pluggables.find(function (pluggable) {\n        return pluggable.getProviderName() === providerName;\n      })) !== null && _a !== void 0 ? _a : null;\n\n      if (!pluggable) {\n        logger.debug(\"No plugin found with name \" + providerName);\n      }\n\n      return pluggable;\n    };\n    /**\n     * Add plugin into InAppMessaging\n     * @param {InAppMessagingProvider} pluggable - an instance of the plugin\n     */\n\n\n    this.addPluggable = function (pluggable) {\n      if (pluggable && pluggable.getCategory() === 'Notifications' && pluggable.getSubCategory() === 'InAppMessaging') {\n        if (_this.getPluggable(pluggable.getProviderName())) {\n          throw new Error(\"Pluggable \" + pluggable.getProviderName() + \" has already been added.\");\n        }\n\n        _this.pluggables.push(pluggable);\n\n        pluggable.configure(_this.config[pluggable.getProviderName()]);\n      }\n    };\n    /**\n     * Remove a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to remove\n     */\n\n\n    this.removePluggable = function (providerName) {\n      var index = _this.pluggables.findIndex(function (pluggable) {\n        return pluggable.getProviderName() === providerName;\n      });\n\n      if (index === -1) {\n        logger.debug(\"No plugin found with name \" + providerName);\n      } else {\n        _this.pluggables.splice(index, 1);\n      }\n    };\n    /**\n     * Get the map resources that are currently available through the provider\n     * @param {string} provider\n     * @returns - Array of available map resources\n     */\n\n\n    this.syncMessages = function () {\n      return Promise.all(_this.pluggables.map(function (pluggable) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var messages, key, err_1;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , pluggable.getInAppMessages()];\n\n              case 1:\n                messages = _a.sent();\n                key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                return [4\n                /*yield*/\n                , this.setMessages(key, messages)];\n\n              case 2:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                err_1 = _a.sent();\n                logger.error('Failed to sync messages', err_1);\n                throw err_1;\n\n              case 4:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }));\n    };\n\n    this.clearMessages = function () {\n      return Promise.all(_this.pluggables.map(function (pluggable) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var key;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                return [4\n                /*yield*/\n                , this.removeMessages(key)];\n\n              case 1:\n                _a.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }));\n    };\n\n    this.dispatchEvent = function (event) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var messages, flattenedMessages;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Promise.all(this.pluggables.map(function (pluggable) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var key, messages;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                        return [4\n                        /*yield*/\n                        , this.getMessages(key)];\n\n                      case 1:\n                        messages = _a.sent();\n                        return [2\n                        /*return*/\n                        , pluggable.processInAppMessages(messages, event)];\n                    }\n                  });\n                });\n              }))];\n\n            case 1:\n              messages = _a.sent();\n              flattenedMessages = flatten(messages);\n\n              if (flattenedMessages.length) {\n                notifyEventListeners(InAppMessageInteractionEvent.MESSAGE_RECEIVED, this.conflictHandler(flattenedMessages));\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.identifyUser = function (userId, userInfo) {\n      return Promise.all(_this.pluggables.map(function (pluggable) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n\n                return [4\n                /*yield*/\n                , pluggable.identifyUser(userId, userInfo)];\n\n              case 1:\n                _a.sent();\n\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                err_2 = _a.sent();\n                logger.error('Failed to identify user', err_2);\n                throw err_2;\n\n              case 3:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }));\n    };\n\n    this.onMessageReceived = function (handler) {\n      return addEventListener(InAppMessageInteractionEvent.MESSAGE_RECEIVED, handler);\n    };\n\n    this.onMessageDisplayed = function (handler) {\n      return addEventListener(InAppMessageInteractionEvent.MESSAGE_DISPLAYED, handler);\n    };\n\n    this.onMessageDismissed = function (handler) {\n      return addEventListener(InAppMessageInteractionEvent.MESSAGE_DISMISSED, handler);\n    };\n\n    this.onMessageActionTaken = function (handler) {\n      return addEventListener(InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN, handler);\n    };\n\n    this.notifyMessageInteraction = function (message, type) {\n      notifyEventListeners(type, message);\n    };\n\n    this.setConflictHandler = function (handler) {\n      _this.conflictHandler = handler;\n    };\n\n    this.analyticsListener = function (_a) {\n      var payload = _a.payload;\n      var event = payload.event,\n          data = payload.data;\n\n      switch (event) {\n        case 'record':\n          {\n            _this.dispatchEvent(data);\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.syncStorage = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var storage, err_3;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              storage = this.config.storage;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n\n              if (!(typeof storage.sync === 'function')) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , storage.sync()];\n\n            case 2:\n              _a.sent();\n\n              _a.label = 3;\n\n            case 3:\n              this.storageSynced = true;\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              err_3 = _a.sent();\n              logger.error('Failed to sync storage', err_3);\n              return [3\n              /*break*/\n              , 5];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.getMessages = function (key) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var storage, storedMessages, err_4;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 3,, 4]);\n\n              if (!!this.storageSynced) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.syncStorage()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              storage = this.config.storage;\n              storedMessages = storage.getItem(key);\n              return [2\n              /*return*/\n              , storedMessages ? JSON.parse(storedMessages) : []];\n\n            case 3:\n              err_4 = _a.sent();\n              logger.error('Failed to retrieve in-app messages from storage', err_4);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.setMessages = function (key, messages) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var storage, err_5;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!messages) {\n                return [2\n                /*return*/\n                ];\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n\n              if (!!this.storageSynced) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , this.syncStorage()];\n\n            case 2:\n              _a.sent();\n\n              _a.label = 3;\n\n            case 3:\n              storage = this.config.storage;\n              storage.setItem(key, JSON.stringify(messages));\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              err_5 = _a.sent();\n              logger.error('Failed to store in-app messages', err_5);\n              return [3\n              /*break*/\n              , 5];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.removeMessages = function (key) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var storage, err_6;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 3,, 4]);\n\n              if (!!this.storageSynced) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.syncStorage()];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              storage = this.config.storage;\n              storage.removeItem(key);\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              err_6 = _a.sent();\n              logger.error('Failed to remove in-app messages from storage', err_6);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.defaultConflictHandler = function (messages) {\n      // default behavior is to return the message closest to expiry\n      // this function assumes that messages processed by providers already filters out expired messages\n      var sorted = messages.sort(function (a, b) {\n        var _a, _b;\n\n        var endDateA = (_a = a.metadata) === null || _a === void 0 ? void 0 : _a.endDate;\n        var endDateB = (_b = b.metadata) === null || _b === void 0 ? void 0 : _b.endDate; // if both message end dates are falsy or have the same date string, treat them as equal\n\n        if (endDateA === endDateB) {\n          return 0;\n        } // if only message A has an end date, treat it as closer to expiry\n\n\n        if (endDateA && !endDateB) {\n          return -1;\n        } // if only message B has an end date, treat it as closer to expiry\n\n\n        if (!endDateA && endDateB) {\n          return 1;\n        } // otherwise, compare them\n\n\n        return new Date(endDateA) < new Date(endDateB) ? -1 : 1;\n      }); // always return the top sorted\n\n      return sorted[0];\n    };\n\n    this.config = {\n      storage: new StorageHelper().getStorage()\n    };\n    this.setConflictHandler(this.defaultConflictHandler);\n  }\n  /**\n   * Get the name of this module\n   * @returns {string} name of this module\n   */\n\n\n  InAppMessaging.prototype.getModuleName = function () {\n    return 'InAppMessaging';\n  };\n\n  return InAppMessaging;\n}();\n\nexport default InAppMessaging;","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","ConsoleLogger","Logger","Hub","StorageHelper","flatten","addEventListener","notifyEventListeners","AWSPinpointProvider","InAppMessageInteractionEvent","STORAGE_KEY_SUFFIX","logger","InAppMessaging","_this","config","listeningForAnalyticEvents","pluggables","storageSynced","configure","_a","_b","listenForAnalyticsEvents","debug","forEach","pluggable","getProviderName","length","addPluggable","listen","analyticsListener","getPluggable","providerName","find","getCategory","getSubCategory","Error","push","removePluggable","index","findIndex","splice","syncMessages","Promise","all","map","messages","key","err_1","label","trys","getInAppMessages","sent","setMessages","error","clearMessages","removeMessages","dispatchEvent","event","flattenedMessages","getMessages","processInAppMessages","MESSAGE_RECEIVED","conflictHandler","identifyUser","userId","userInfo","err_2","onMessageReceived","handler","onMessageDisplayed","MESSAGE_DISPLAYED","onMessageDismissed","MESSAGE_DISMISSED","onMessageActionTaken","MESSAGE_ACTION_TAKEN","notifyMessageInteraction","message","type","setConflictHandler","payload","data","syncStorage","storage","err_3","sync","storedMessages","err_4","getItem","JSON","parse","err_5","setItem","stringify","err_6","removeItem","defaultConflictHandler","sorted","sort","a","b","endDateA","metadata","endDate","endDateB","Date","getStorage","prototype","getModuleName"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/notifications/lib-esm/InAppMessaging/InAppMessaging.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Hub, StorageHelper, } from '@aws-amplify/core';\nimport flatten from 'lodash/flatten';\nimport { addEventListener, notifyEventListeners, } from '../common';\nimport { AWSPinpointProvider } from './Providers';\nimport { InAppMessageInteractionEvent, } from './types';\nvar STORAGE_KEY_SUFFIX = '_inAppMessages';\nvar logger = new Logger('Notifications.InAppMessaging');\nvar InAppMessaging = /** @class */ (function () {\n    function InAppMessaging() {\n        var _this = this;\n        this.config = {};\n        this.listeningForAnalyticEvents = false;\n        this.pluggables = [];\n        this.storageSynced = false;\n        /**\n         * Configure InAppMessaging\n         * @param {Object} config - InAppMessaging configuration object\n         */\n        this.configure = function (_a) {\n            if (_a === void 0) { _a = {}; }\n            var _b = _a.listenForAnalyticsEvents, listenForAnalyticsEvents = _b === void 0 ? true : _b, config = __rest(_a, [\"listenForAnalyticsEvents\"]);\n            _this.config = __assign(__assign({}, _this.config), config);\n            logger.debug('configure InAppMessaging', _this.config);\n            _this.pluggables.forEach(function (pluggable) {\n                pluggable.configure(_this.config[pluggable.getProviderName()]);\n            });\n            if (_this.pluggables.length === 0) {\n                _this.addPluggable(new AWSPinpointProvider());\n            }\n            if (listenForAnalyticsEvents && !_this.listeningForAnalyticEvents) {\n                Hub.listen('analytics', _this.analyticsListener);\n                _this.listeningForAnalyticEvents = true;\n            }\n            return _this.config;\n        };\n        /**\n         * Get a plugin from added plugins\n         * @param {string} providerName - the name of the plugin to get\n         */\n        this.getPluggable = function (providerName) {\n            var _a;\n            var pluggable = (_a = _this.pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; })) !== null && _a !== void 0 ? _a : null;\n            if (!pluggable) {\n                logger.debug(\"No plugin found with name \" + providerName);\n            }\n            return pluggable;\n        };\n        /**\n         * Add plugin into InAppMessaging\n         * @param {InAppMessagingProvider} pluggable - an instance of the plugin\n         */\n        this.addPluggable = function (pluggable) {\n            if (pluggable &&\n                pluggable.getCategory() === 'Notifications' &&\n                pluggable.getSubCategory() === 'InAppMessaging') {\n                if (_this.getPluggable(pluggable.getProviderName())) {\n                    throw new Error(\"Pluggable \" + pluggable.getProviderName() + \" has already been added.\");\n                }\n                _this.pluggables.push(pluggable);\n                pluggable.configure(_this.config[pluggable.getProviderName()]);\n            }\n        };\n        /**\n         * Remove a plugin from added plugins\n         * @param {string} providerName - the name of the plugin to remove\n         */\n        this.removePluggable = function (providerName) {\n            var index = _this.pluggables.findIndex(function (pluggable) { return pluggable.getProviderName() === providerName; });\n            if (index === -1) {\n                logger.debug(\"No plugin found with name \" + providerName);\n            }\n            else {\n                _this.pluggables.splice(index, 1);\n            }\n        };\n        /**\n         * Get the map resources that are currently available through the provider\n         * @param {string} provider\n         * @returns - Array of available map resources\n         */\n        this.syncMessages = function () {\n            return Promise.all(_this.pluggables.map(function (pluggable) { return __awaiter(_this, void 0, void 0, function () {\n                var messages, key, err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 3, , 4]);\n                            return [4 /*yield*/, pluggable.getInAppMessages()];\n                        case 1:\n                            messages = _a.sent();\n                            key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                            return [4 /*yield*/, this.setMessages(key, messages)];\n                        case 2:\n                            _a.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _a.sent();\n                            logger.error('Failed to sync messages', err_1);\n                            throw err_1;\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); }));\n        };\n        this.clearMessages = function () {\n            return Promise.all(_this.pluggables.map(function (pluggable) { return __awaiter(_this, void 0, void 0, function () {\n                var key;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                            return [4 /*yield*/, this.removeMessages(key)];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            }); }));\n        };\n        this.dispatchEvent = function (event) { return __awaiter(_this, void 0, void 0, function () {\n            var messages, flattenedMessages;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.pluggables.map(function (pluggable) { return __awaiter(_this, void 0, void 0, function () {\n                            var key, messages;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        key = \"\" + pluggable.getProviderName() + STORAGE_KEY_SUFFIX;\n                                        return [4 /*yield*/, this.getMessages(key)];\n                                    case 1:\n                                        messages = _a.sent();\n                                        return [2 /*return*/, pluggable.processInAppMessages(messages, event)];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        messages = _a.sent();\n                        flattenedMessages = flatten(messages);\n                        if (flattenedMessages.length) {\n                            notifyEventListeners(InAppMessageInteractionEvent.MESSAGE_RECEIVED, this.conflictHandler(flattenedMessages));\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.identifyUser = function (userId, userInfo) {\n            return Promise.all(_this.pluggables.map(function (pluggable) { return __awaiter(_this, void 0, void 0, function () {\n                var err_2;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, pluggable.identifyUser(userId, userInfo)];\n                        case 1:\n                            _a.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            err_2 = _a.sent();\n                            logger.error('Failed to identify user', err_2);\n                            throw err_2;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            }); }));\n        };\n        this.onMessageReceived = function (handler) {\n            return addEventListener(InAppMessageInteractionEvent.MESSAGE_RECEIVED, handler);\n        };\n        this.onMessageDisplayed = function (handler) {\n            return addEventListener(InAppMessageInteractionEvent.MESSAGE_DISPLAYED, handler);\n        };\n        this.onMessageDismissed = function (handler) {\n            return addEventListener(InAppMessageInteractionEvent.MESSAGE_DISMISSED, handler);\n        };\n        this.onMessageActionTaken = function (handler) {\n            return addEventListener(InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN, handler);\n        };\n        this.notifyMessageInteraction = function (message, type) {\n            notifyEventListeners(type, message);\n        };\n        this.setConflictHandler = function (handler) {\n            _this.conflictHandler = handler;\n        };\n        this.analyticsListener = function (_a) {\n            var payload = _a.payload;\n            var event = payload.event, data = payload.data;\n            switch (event) {\n                case 'record': {\n                    _this.dispatchEvent(data);\n                    break;\n                }\n                default:\n                    break;\n            }\n        };\n        this.syncStorage = function () { return __awaiter(_this, void 0, void 0, function () {\n            var storage, err_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        storage = this.config.storage;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        if (!(typeof storage.sync === 'function')) return [3 /*break*/, 3];\n                        return [4 /*yield*/, storage.sync()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        this.storageSynced = true;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_3 = _a.sent();\n                        logger.error('Failed to sync storage', err_3);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.getMessages = function (key) { return __awaiter(_this, void 0, void 0, function () {\n            var storage, storedMessages, err_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!!this.storageSynced) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.syncStorage()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        storage = this.config.storage;\n                        storedMessages = storage.getItem(key);\n                        return [2 /*return*/, storedMessages ? JSON.parse(storedMessages) : []];\n                    case 3:\n                        err_4 = _a.sent();\n                        logger.error('Failed to retrieve in-app messages from storage', err_4);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.setMessages = function (key, messages) { return __awaiter(_this, void 0, void 0, function () {\n            var storage, err_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!messages) {\n                            return [2 /*return*/];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        if (!!this.storageSynced) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.syncStorage()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        storage = this.config.storage;\n                        storage.setItem(key, JSON.stringify(messages));\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_5 = _a.sent();\n                        logger.error('Failed to store in-app messages', err_5);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.removeMessages = function (key) { return __awaiter(_this, void 0, void 0, function () {\n            var storage, err_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!!this.storageSynced) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.syncStorage()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        storage = this.config.storage;\n                        storage.removeItem(key);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_6 = _a.sent();\n                        logger.error('Failed to remove in-app messages from storage', err_6);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.defaultConflictHandler = function (messages) {\n            // default behavior is to return the message closest to expiry\n            // this function assumes that messages processed by providers already filters out expired messages\n            var sorted = messages.sort(function (a, b) {\n                var _a, _b;\n                var endDateA = (_a = a.metadata) === null || _a === void 0 ? void 0 : _a.endDate;\n                var endDateB = (_b = b.metadata) === null || _b === void 0 ? void 0 : _b.endDate;\n                // if both message end dates are falsy or have the same date string, treat them as equal\n                if (endDateA === endDateB) {\n                    return 0;\n                }\n                // if only message A has an end date, treat it as closer to expiry\n                if (endDateA && !endDateB) {\n                    return -1;\n                }\n                // if only message B has an end date, treat it as closer to expiry\n                if (!endDateA && endDateB) {\n                    return 1;\n                }\n                // otherwise, compare them\n                return new Date(endDateA) < new Date(endDateB) ? -1 : 1;\n            });\n            // always return the top sorted\n            return sorted[0];\n        };\n        this.config = { storage: new StorageHelper().getStorage() };\n        this.setConflictHandler(this.defaultConflictHandler);\n    }\n    /**\n     * Get the name of this module\n     * @returns {string} name of this module\n     */\n    InAppMessaging.prototype.getModuleName = function () {\n        return 'InAppMessaging';\n    };\n    return InAppMessaging;\n}());\nexport default InAppMessaging;\n"],"mappings":"AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,OAAzD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,GAAlC,EAAuCC,aAAvC,QAA6D,mBAA7D;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAwD,WAAxD;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,4BAAT,QAA8C,SAA9C;AACA,IAAIC,kBAAkB,GAAG,gBAAzB;AACA,IAAIC,MAAM,GAAG,IAAIT,MAAJ,CAAW,8BAAX,CAAb;;AACA,IAAIU,cAAc;AAAG;AAAe,YAAY;EAC5C,SAASA,cAAT,GAA0B;IACtB,IAAIC,KAAK,GAAG,IAAZ;;IACA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,0BAAL,GAAkC,KAAlC;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA;AACR;AACA;AACA;;IACQ,KAAKC,SAAL,GAAiB,UAAUC,EAAV,EAAc;MAC3B,IAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;QAAEA,EAAE,GAAG,EAAL;MAAU;;MAC/B,IAAIC,EAAE,GAAGD,EAAE,CAACE,wBAAZ;MAAA,IAAsCA,wBAAwB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAxF;MAAA,IAA4FN,MAAM,GAAGd,MAAM,CAACmB,EAAD,EAAK,CAAC,0BAAD,CAAL,CAA3G;;MACAN,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKgB,KAAK,CAACC,MAAX,CAAT,EAA6BA,MAA7B,CAAvB;MACAH,MAAM,CAACW,KAAP,CAAa,0BAAb,EAAyCT,KAAK,CAACC,MAA/C;;MACAD,KAAK,CAACG,UAAN,CAAiBO,OAAjB,CAAyB,UAAUC,SAAV,EAAqB;QAC1CA,SAAS,CAACN,SAAV,CAAoBL,KAAK,CAACC,MAAN,CAAaU,SAAS,CAACC,eAAV,EAAb,CAApB;MACH,CAFD;;MAGA,IAAIZ,KAAK,CAACG,UAAN,CAAiBU,MAAjB,KAA4B,CAAhC,EAAmC;QAC/Bb,KAAK,CAACc,YAAN,CAAmB,IAAInB,mBAAJ,EAAnB;MACH;;MACD,IAAIa,wBAAwB,IAAI,CAACR,KAAK,CAACE,0BAAvC,EAAmE;QAC/DZ,GAAG,CAACyB,MAAJ,CAAW,WAAX,EAAwBf,KAAK,CAACgB,iBAA9B;QACAhB,KAAK,CAACE,0BAAN,GAAmC,IAAnC;MACH;;MACD,OAAOF,KAAK,CAACC,MAAb;IACH,CAhBD;IAiBA;AACR;AACA;AACA;;;IACQ,KAAKgB,YAAL,GAAoB,UAAUC,YAAV,EAAwB;MACxC,IAAIZ,EAAJ;;MACA,IAAIK,SAAS,GAAG,CAACL,EAAE,GAAGN,KAAK,CAACG,UAAN,CAAiBgB,IAAjB,CAAsB,UAAUR,SAAV,EAAqB;QAAE,OAAOA,SAAS,CAACC,eAAV,OAAgCM,YAAvC;MAAsD,CAAnG,CAAN,MAAgH,IAAhH,IAAwHZ,EAAE,KAAK,KAAK,CAApI,GAAwIA,EAAxI,GAA6I,IAA7J;;MACA,IAAI,CAACK,SAAL,EAAgB;QACZb,MAAM,CAACW,KAAP,CAAa,+BAA+BS,YAA5C;MACH;;MACD,OAAOP,SAAP;IACH,CAPD;IAQA;AACR;AACA;AACA;;;IACQ,KAAKG,YAAL,GAAoB,UAAUH,SAAV,EAAqB;MACrC,IAAIA,SAAS,IACTA,SAAS,CAACS,WAAV,OAA4B,eAD5B,IAEAT,SAAS,CAACU,cAAV,OAA+B,gBAFnC,EAEqD;QACjD,IAAIrB,KAAK,CAACiB,YAAN,CAAmBN,SAAS,CAACC,eAAV,EAAnB,CAAJ,EAAqD;UACjD,MAAM,IAAIU,KAAJ,CAAU,eAAeX,SAAS,CAACC,eAAV,EAAf,GAA6C,0BAAvD,CAAN;QACH;;QACDZ,KAAK,CAACG,UAAN,CAAiBoB,IAAjB,CAAsBZ,SAAtB;;QACAA,SAAS,CAACN,SAAV,CAAoBL,KAAK,CAACC,MAAN,CAAaU,SAAS,CAACC,eAAV,EAAb,CAApB;MACH;IACJ,CAVD;IAWA;AACR;AACA;AACA;;;IACQ,KAAKY,eAAL,GAAuB,UAAUN,YAAV,EAAwB;MAC3C,IAAIO,KAAK,GAAGzB,KAAK,CAACG,UAAN,CAAiBuB,SAAjB,CAA2B,UAAUf,SAAV,EAAqB;QAAE,OAAOA,SAAS,CAACC,eAAV,OAAgCM,YAAvC;MAAsD,CAAxG,CAAZ;;MACA,IAAIO,KAAK,KAAK,CAAC,CAAf,EAAkB;QACd3B,MAAM,CAACW,KAAP,CAAa,+BAA+BS,YAA5C;MACH,CAFD,MAGK;QACDlB,KAAK,CAACG,UAAN,CAAiBwB,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;MACH;IACJ,CARD;IASA;AACR;AACA;AACA;AACA;;;IACQ,KAAKG,YAAL,GAAoB,YAAY;MAC5B,OAAOC,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACG,UAAN,CAAiB4B,GAAjB,CAAqB,UAAUpB,SAAV,EAAqB;QAAE,OAAO1B,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;UAC/G,IAAIgC,QAAJ,EAAcC,GAAd,EAAmBC,KAAnB;UACA,OAAOhD,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;YACnC,QAAQA,EAAE,CAAC6B,KAAX;cACI,KAAK,CAAL;gBACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAcZ,SAAS,CAAC0B,gBAAV,EAAd,CAAP;;cACJ,KAAK,CAAL;gBACIL,QAAQ,GAAG1B,EAAE,CAACgC,IAAH,EAAX;gBACAL,GAAG,GAAG,KAAKtB,SAAS,CAACC,eAAV,EAAL,GAAmCf,kBAAzC;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAc,KAAK0C,WAAL,CAAiBN,GAAjB,EAAsBD,QAAtB,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACI1B,EAAE,CAACgC,IAAH;;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAc,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACIJ,KAAK,GAAG5B,EAAE,CAACgC,IAAH,EAAR;gBACAxC,MAAM,CAAC0C,KAAP,CAAa,yBAAb,EAAwCN,KAAxC;gBACA,MAAMA,KAAN;;cACJ,KAAK,CAAL;gBAAQ,OAAO,CAAC;gBAAE;gBAAH,CAAP;YAfZ;UAiBH,CAlBiB,CAAlB;QAmBH,CArB8E,CAAhB;MAqB1D,CArBc,CAAZ,CAAP;IAsBH,CAvBD;;IAwBA,KAAKO,aAAL,GAAqB,YAAY;MAC7B,OAAOZ,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACG,UAAN,CAAiB4B,GAAjB,CAAqB,UAAUpB,SAAV,EAAqB;QAAE,OAAO1B,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;UAC/G,IAAIiC,GAAJ;UACA,OAAO/C,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;YACnC,QAAQA,EAAE,CAAC6B,KAAX;cACI,KAAK,CAAL;gBACIF,GAAG,GAAG,KAAKtB,SAAS,CAACC,eAAV,EAAL,GAAmCf,kBAAzC;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAc,KAAK6C,cAAL,CAAoBT,GAApB,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACI3B,EAAE,CAACgC,IAAH;;gBACA,OAAO,CAAC;gBAAE;gBAAH,CAAP;YANR;UAQH,CATiB,CAAlB;QAUH,CAZ8E,CAAhB;MAY1D,CAZc,CAAZ,CAAP;IAaH,CAdD;;IAeA,KAAKK,aAAL,GAAqB,UAAUC,KAAV,EAAiB;MAAE,OAAO3D,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACxF,IAAIgC,QAAJ,EAAca,iBAAd;;QACA,IAAI7C,KAAK,GAAG,IAAZ;;QACA,OAAOd,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAC6B,KAAX;YACI,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,EAAcN,OAAO,CAACC,GAAR,CAAY,KAAK3B,UAAL,CAAgB4B,GAAhB,CAAoB,UAAUpB,SAAV,EAAqB;gBAAE,OAAO1B,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;kBAChI,IAAIiC,GAAJ,EAASD,QAAT;kBACA,OAAO9C,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;oBACnC,QAAQA,EAAE,CAAC6B,KAAX;sBACI,KAAK,CAAL;wBACIF,GAAG,GAAG,KAAKtB,SAAS,CAACC,eAAV,EAAL,GAAmCf,kBAAzC;wBACA,OAAO,CAAC;wBAAE;wBAAH,EAAc,KAAKiD,WAAL,CAAiBb,GAAjB,CAAd,CAAP;;sBACJ,KAAK,CAAL;wBACID,QAAQ,GAAG1B,EAAE,CAACgC,IAAH,EAAX;wBACA,OAAO,CAAC;wBAAE;wBAAH,EAAe3B,SAAS,CAACoC,oBAAV,CAA+Bf,QAA/B,EAAyCY,KAAzC,CAAf,CAAP;oBANR;kBAQH,CATiB,CAAlB;gBAUH,CAZ+F,CAAhB;cAY3E,CAZgC,CAAZ,CAAd,CAAP;;YAaR,KAAK,CAAL;cACIZ,QAAQ,GAAG1B,EAAE,CAACgC,IAAH,EAAX;cACAO,iBAAiB,GAAGrD,OAAO,CAACwC,QAAD,CAA3B;;cACA,IAAIa,iBAAiB,CAAChC,MAAtB,EAA8B;gBAC1BnB,oBAAoB,CAACE,4BAA4B,CAACoD,gBAA9B,EAAgD,KAAKC,eAAL,CAAqBJ,iBAArB,CAAhD,CAApB;cACH;;cACD,OAAO,CAAC;cAAE;cAAH,CAAP;UApBR;QAsBH,CAvBiB,CAAlB;MAwBH,CA3BuD,CAAhB;IA2BnC,CA3BL;;IA4BA,KAAKK,YAAL,GAAoB,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;MAC5C,OAAOvB,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACG,UAAN,CAAiB4B,GAAjB,CAAqB,UAAUpB,SAAV,EAAqB;QAAE,OAAO1B,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;UAC/G,IAAIqD,KAAJ;UACA,OAAOnE,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;YACnC,QAAQA,EAAE,CAAC6B,KAAX;cACI,KAAK,CAAL;gBACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAcZ,SAAS,CAACuC,YAAV,CAAuBC,MAAvB,EAA+BC,QAA/B,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACI9C,EAAE,CAACgC,IAAH;;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAc,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACIe,KAAK,GAAG/C,EAAE,CAACgC,IAAH,EAAR;gBACAxC,MAAM,CAAC0C,KAAP,CAAa,yBAAb,EAAwCa,KAAxC;gBACA,MAAMA,KAAN;;cACJ,KAAK,CAAL;gBAAQ,OAAO,CAAC;gBAAE;gBAAH,CAAP;YAXZ;UAaH,CAdiB,CAAlB;QAeH,CAjB8E,CAAhB;MAiB1D,CAjBc,CAAZ,CAAP;IAkBH,CAnBD;;IAoBA,KAAKC,iBAAL,GAAyB,UAAUC,OAAV,EAAmB;MACxC,OAAO9D,gBAAgB,CAACG,4BAA4B,CAACoD,gBAA9B,EAAgDO,OAAhD,CAAvB;IACH,CAFD;;IAGA,KAAKC,kBAAL,GAA0B,UAAUD,OAAV,EAAmB;MACzC,OAAO9D,gBAAgB,CAACG,4BAA4B,CAAC6D,iBAA9B,EAAiDF,OAAjD,CAAvB;IACH,CAFD;;IAGA,KAAKG,kBAAL,GAA0B,UAAUH,OAAV,EAAmB;MACzC,OAAO9D,gBAAgB,CAACG,4BAA4B,CAAC+D,iBAA9B,EAAiDJ,OAAjD,CAAvB;IACH,CAFD;;IAGA,KAAKK,oBAAL,GAA4B,UAAUL,OAAV,EAAmB;MAC3C,OAAO9D,gBAAgB,CAACG,4BAA4B,CAACiE,oBAA9B,EAAoDN,OAApD,CAAvB;IACH,CAFD;;IAGA,KAAKO,wBAAL,GAAgC,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;MACrDtE,oBAAoB,CAACsE,IAAD,EAAOD,OAAP,CAApB;IACH,CAFD;;IAGA,KAAKE,kBAAL,GAA0B,UAAUV,OAAV,EAAmB;MACzCvD,KAAK,CAACiD,eAAN,GAAwBM,OAAxB;IACH,CAFD;;IAGA,KAAKvC,iBAAL,GAAyB,UAAUV,EAAV,EAAc;MACnC,IAAI4D,OAAO,GAAG5D,EAAE,CAAC4D,OAAjB;MACA,IAAItB,KAAK,GAAGsB,OAAO,CAACtB,KAApB;MAAA,IAA2BuB,IAAI,GAAGD,OAAO,CAACC,IAA1C;;MACA,QAAQvB,KAAR;QACI,KAAK,QAAL;UAAe;YACX5C,KAAK,CAAC2C,aAAN,CAAoBwB,IAApB;;YACA;UACH;;QACD;UACI;MANR;IAQH,CAXD;;IAYA,KAAKC,WAAL,GAAmB,YAAY;MAAE,OAAOnF,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACjF,IAAIqE,OAAJ,EAAaC,KAAb;QACA,OAAOpF,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAC6B,KAAX;YACI,KAAK,CAAL;cACIkC,OAAO,GAAG,KAAKpE,MAAL,CAAYoE,OAAtB;cACA/D,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;cACA,IAAI,EAAE,OAAO8C,OAAO,CAACE,IAAf,KAAwB,UAA1B,CAAJ,EAA2C,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cAC3C,OAAO,CAAC;cAAE;cAAH,EAAcF,OAAO,CAACE,IAAR,EAAd,CAAP;;YACJ,KAAK,CAAL;cACIjE,EAAE,CAACgC,IAAH;;cACAhC,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACI,KAAK/B,aAAL,GAAqB,IAArB;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cACIkE,KAAK,GAAGhE,EAAE,CAACgC,IAAH,EAAR;cACAxC,MAAM,CAAC0C,KAAP,CAAa,wBAAb,EAAuC8B,KAAvC;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,CAAP;UAlBZ;QAoBH,CArBiB,CAAlB;MAsBH,CAxBgD,CAAhB;IAwB5B,CAxBL;;IAyBA,KAAKxB,WAAL,GAAmB,UAAUb,GAAV,EAAe;MAAE,OAAOhD,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACpF,IAAIqE,OAAJ,EAAaG,cAAb,EAA6BC,KAA7B;QACA,OAAOvF,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAC6B,KAAX;YACI,KAAK,CAAL;cACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;cACA,IAAI,CAAC,CAAC,KAAKnB,aAAX,EAA0B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cAC1B,OAAO,CAAC;cAAE;cAAH,EAAc,KAAKgE,WAAL,EAAd,CAAP;;YACJ,KAAK,CAAL;cACI9D,EAAE,CAACgC,IAAH;;cACAhC,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACIkC,OAAO,GAAG,KAAKpE,MAAL,CAAYoE,OAAtB;cACAG,cAAc,GAAGH,OAAO,CAACK,OAAR,CAAgBzC,GAAhB,CAAjB;cACA,OAAO,CAAC;cAAE;cAAH,EAAeuC,cAAc,GAAGG,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAH,GAAgC,EAA7D,CAAP;;YACJ,KAAK,CAAL;cACIC,KAAK,GAAGnE,EAAE,CAACgC,IAAH,EAAR;cACAxC,MAAM,CAAC0C,KAAP,CAAa,iDAAb,EAAgEiC,KAAhE;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,CAAP;UAhBZ;QAkBH,CAnBiB,CAAlB;MAoBH,CAtBmD,CAAhB;IAsB/B,CAtBL;;IAuBA,KAAKlC,WAAL,GAAmB,UAAUN,GAAV,EAAeD,QAAf,EAAyB;MAAE,OAAO/C,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QAC9F,IAAIqE,OAAJ,EAAaQ,KAAb;QACA,OAAO3F,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAC6B,KAAX;YACI,KAAK,CAAL;cACI,IAAI,CAACH,QAAL,EAAe;gBACX,OAAO,CAAC;gBAAE;gBAAH,CAAP;cACH;;cACD1B,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;cACA,IAAI,CAAC,CAAC,KAAKnB,aAAX,EAA0B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cAC1B,OAAO,CAAC;cAAE;cAAH,EAAc,KAAKgE,WAAL,EAAd,CAAP;;YACJ,KAAK,CAAL;cACI9D,EAAE,CAACgC,IAAH;;cACAhC,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACIkC,OAAO,GAAG,KAAKpE,MAAL,CAAYoE,OAAtB;cACAA,OAAO,CAACS,OAAR,CAAgB7C,GAAhB,EAAqB0C,IAAI,CAACI,SAAL,CAAe/C,QAAf,CAArB;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cACI6C,KAAK,GAAGvE,EAAE,CAACgC,IAAH,EAAR;cACAxC,MAAM,CAAC0C,KAAP,CAAa,iCAAb,EAAgDqC,KAAhD;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,CAAP;UArBZ;QAuBH,CAxBiB,CAAlB;MAyBH,CA3B6D,CAAhB;IA2BzC,CA3BL;;IA4BA,KAAKnC,cAAL,GAAsB,UAAUT,GAAV,EAAe;MAAE,OAAOhD,SAAS,CAACe,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACvF,IAAIqE,OAAJ,EAAaW,KAAb;QACA,OAAO9F,WAAW,CAAC,IAAD,EAAO,UAAUoB,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAC6B,KAAX;YACI,KAAK,CAAL;cACI7B,EAAE,CAAC8B,IAAH,CAAQb,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;cACA,IAAI,CAAC,CAAC,KAAKnB,aAAX,EAA0B,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cAC1B,OAAO,CAAC;cAAE;cAAH,EAAc,KAAKgE,WAAL,EAAd,CAAP;;YACJ,KAAK,CAAL;cACI9D,EAAE,CAACgC,IAAH;;cACAhC,EAAE,CAAC6B,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACIkC,OAAO,GAAG,KAAKpE,MAAL,CAAYoE,OAAtB;cACAA,OAAO,CAACY,UAAR,CAAmBhD,GAAnB;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cACI+C,KAAK,GAAG1E,EAAE,CAACgC,IAAH,EAAR;cACAxC,MAAM,CAAC0C,KAAP,CAAa,+CAAb,EAA8DwC,KAA9D;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,CAAP;UAhBZ;QAkBH,CAnBiB,CAAlB;MAoBH,CAtBsD,CAAhB;IAsBlC,CAtBL;;IAuBA,KAAKE,sBAAL,GAA8B,UAAUlD,QAAV,EAAoB;MAC9C;MACA;MACA,IAAImD,MAAM,GAAGnD,QAAQ,CAACoD,IAAT,CAAc,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACvC,IAAIhF,EAAJ,EAAQC,EAAR;;QACA,IAAIgF,QAAQ,GAAG,CAACjF,EAAE,GAAG+E,CAAC,CAACG,QAAR,MAAsB,IAAtB,IAA8BlF,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACmF,OAAzE;QACA,IAAIC,QAAQ,GAAG,CAACnF,EAAE,GAAG+E,CAAC,CAACE,QAAR,MAAsB,IAAtB,IAA8BjF,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACkF,OAAzE,CAHuC,CAIvC;;QACA,IAAIF,QAAQ,KAAKG,QAAjB,EAA2B;UACvB,OAAO,CAAP;QACH,CAPsC,CAQvC;;;QACA,IAAIH,QAAQ,IAAI,CAACG,QAAjB,EAA2B;UACvB,OAAO,CAAC,CAAR;QACH,CAXsC,CAYvC;;;QACA,IAAI,CAACH,QAAD,IAAaG,QAAjB,EAA2B;UACvB,OAAO,CAAP;QACH,CAfsC,CAgBvC;;;QACA,OAAO,IAAIC,IAAJ,CAASJ,QAAT,IAAqB,IAAII,IAAJ,CAASD,QAAT,CAArB,GAA0C,CAAC,CAA3C,GAA+C,CAAtD;MACH,CAlBY,CAAb,CAH8C,CAsB9C;;MACA,OAAOP,MAAM,CAAC,CAAD,CAAb;IACH,CAxBD;;IAyBA,KAAKlF,MAAL,GAAc;MAAEoE,OAAO,EAAE,IAAI9E,aAAJ,GAAoBqG,UAApB;IAAX,CAAd;IACA,KAAK3B,kBAAL,CAAwB,KAAKiB,sBAA7B;EACH;EACD;AACJ;AACA;AACA;;;EACInF,cAAc,CAAC8F,SAAf,CAAyBC,aAAzB,GAAyC,YAAY;IACjD,OAAO,gBAAP;EACH,CAFD;;EAGA,OAAO/F,cAAP;AACH,CArUmC,EAApC;;AAsUA,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}