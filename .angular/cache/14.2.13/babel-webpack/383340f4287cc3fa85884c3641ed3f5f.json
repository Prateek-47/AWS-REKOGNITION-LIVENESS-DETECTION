{"ast":null,"code":"import { __extends } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isTranslateTextInput, isTextToSpeechInput, isSpeechToTextInput } from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractConvertPredictionsProvider');\n\nvar AbstractConvertPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AbstractConvertPredictionsProvider, _super);\n\n  function AbstractConvertPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractConvertPredictionsProvider.prototype.getCategory = function () {\n    return 'Convert';\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convert = function (input) {\n    if (isTranslateTextInput(input)) {\n      logger.debug('translateText');\n      return this.translateText(input);\n    } else if (isTextToSpeechInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertTextToSpeech(input);\n    } else if (isSpeechToTextInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertSpeechToText(input);\n    }\n  };\n\n  AbstractConvertPredictionsProvider.prototype.translateText = function (translateTextInput) {\n    throw new Error('convertText is not implemented by this provider');\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convertTextToSpeech = function (textToSpeechInput) {\n    throw new Error('convertTextToSpeech is not implemented by this provider');\n  };\n\n  AbstractConvertPredictionsProvider.prototype.convertSpeechToText = function (speechToTextInput) {\n    throw new Error('convertSpeechToText is not implemented by this provider');\n  };\n\n  return AbstractConvertPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AbstractConvertPredictionsProvider };","map":{"version":3,"names":["__extends","isTranslateTextInput","isTextToSpeechInput","isSpeechToTextInput","AbstractPredictionsProvider","ConsoleLogger","Logger","logger","AbstractConvertPredictionsProvider","_super","apply","arguments","prototype","getCategory","convert","input","debug","translateText","convertTextToSpeech","convertSpeechToText","translateTextInput","Error","textToSpeechInput","speechToTextInput"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/predictions/lib-esm/types/Providers/AbstractConvertPredictionsProvider.js"],"sourcesContent":["import { __extends } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isTranslateTextInput, isTextToSpeechInput, isSpeechToTextInput, } from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractConvertPredictionsProvider');\nvar AbstractConvertPredictionsProvider = /** @class */ (function (_super) {\n    __extends(AbstractConvertPredictionsProvider, _super);\n    function AbstractConvertPredictionsProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbstractConvertPredictionsProvider.prototype.getCategory = function () {\n        return 'Convert';\n    };\n    AbstractConvertPredictionsProvider.prototype.convert = function (input) {\n        if (isTranslateTextInput(input)) {\n            logger.debug('translateText');\n            return this.translateText(input);\n        }\n        else if (isTextToSpeechInput(input)) {\n            logger.debug('textToSpeech');\n            return this.convertTextToSpeech(input);\n        }\n        else if (isSpeechToTextInput(input)) {\n            logger.debug('textToSpeech');\n            return this.convertSpeechToText(input);\n        }\n    };\n    AbstractConvertPredictionsProvider.prototype.translateText = function (translateTextInput) {\n        throw new Error('convertText is not implemented by this provider');\n    };\n    AbstractConvertPredictionsProvider.prototype.convertTextToSpeech = function (textToSpeechInput) {\n        throw new Error('convertTextToSpeech is not implemented by this provider');\n    };\n    AbstractConvertPredictionsProvider.prototype.convertSpeechToText = function (speechToTextInput) {\n        throw new Error('convertSpeechToText is not implemented by this provider');\n    };\n    return AbstractConvertPredictionsProvider;\n}(AbstractPredictionsProvider));\nexport { AbstractConvertPredictionsProvider };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;AACA;;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,mBAApD,QAAgF,gBAAhF;AACA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AACA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW,oCAAX,CAAb;;AACA,IAAIE,kCAAkC;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACtET,SAAS,CAACQ,kCAAD,EAAqCC,MAArC,CAAT;;EACA,SAASD,kCAAT,GAA8C;IAC1C,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDH,kCAAkC,CAACI,SAAnC,CAA6CC,WAA7C,GAA2D,YAAY;IACnE,OAAO,SAAP;EACH,CAFD;;EAGAL,kCAAkC,CAACI,SAAnC,CAA6CE,OAA7C,GAAuD,UAAUC,KAAV,EAAiB;IACpE,IAAId,oBAAoB,CAACc,KAAD,CAAxB,EAAiC;MAC7BR,MAAM,CAACS,KAAP,CAAa,eAAb;MACA,OAAO,KAAKC,aAAL,CAAmBF,KAAnB,CAAP;IACH,CAHD,MAIK,IAAIb,mBAAmB,CAACa,KAAD,CAAvB,EAAgC;MACjCR,MAAM,CAACS,KAAP,CAAa,cAAb;MACA,OAAO,KAAKE,mBAAL,CAAyBH,KAAzB,CAAP;IACH,CAHI,MAIA,IAAIZ,mBAAmB,CAACY,KAAD,CAAvB,EAAgC;MACjCR,MAAM,CAACS,KAAP,CAAa,cAAb;MACA,OAAO,KAAKG,mBAAL,CAAyBJ,KAAzB,CAAP;IACH;EACJ,CAbD;;EAcAP,kCAAkC,CAACI,SAAnC,CAA6CK,aAA7C,GAA6D,UAAUG,kBAAV,EAA8B;IACvF,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;EACH,CAFD;;EAGAb,kCAAkC,CAACI,SAAnC,CAA6CM,mBAA7C,GAAmE,UAAUI,iBAAV,EAA6B;IAC5F,MAAM,IAAID,KAAJ,CAAU,yDAAV,CAAN;EACH,CAFD;;EAGAb,kCAAkC,CAACI,SAAnC,CAA6CO,mBAA7C,GAAmE,UAAUI,iBAAV,EAA6B;IAC5F,MAAM,IAAIF,KAAJ,CAAU,yDAAV,CAAN;EACH,CAFD;;EAGA,OAAOb,kCAAP;AACH,CAhCuD,CAgCtDJ,2BAhCsD,CAAxD;;AAiCA,SAASI,kCAAT"},"metadata":{},"sourceType":"module"}