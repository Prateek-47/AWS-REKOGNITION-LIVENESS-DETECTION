{"ast":null,"code":"import { __awaiter, __extends, __generator, __read } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Category, Credentials, PredictionsAction, getAmplifyUserAgentObject } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand } from '@aws-sdk/client-comprehend';\n\nvar AmazonAIInterpretPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AmazonAIInterpretPredictionsProvider, _super);\n\n  function AmazonAIInterpretPredictionsProvider() {\n    return _super.call(this) || this;\n  }\n\n  AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n    return 'AmazonAIInterpretPredictionsProvider';\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n    var _this = this;\n\n    return new Promise(function (res, rej) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n\n        return __generator(this, function (_t) {\n          switch (_t.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Credentials.get()];\n\n            case 1:\n              credentials = _t.sent();\n              if (!credentials) return [2\n              /*return*/\n              , rej('No credentials')];\n              _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n              _f = input.text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n              _l = input.text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n              this.comprehendClient = new ComprehendClient({\n                credentials: credentials,\n                region: region,\n                customUserAgent: getAmplifyUserAgentObject({\n                  category: Category.Predictions,\n                  action: PredictionsAction.Interpret\n                })\n              });\n              doAll = interpretType === InterpretTextCategories.ALL;\n\n              if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                languageDetectionParams = {\n                  Text: text\n                };\n                languagePromise = this.detectLanguage(languageDetectionParams);\n              }\n\n              if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3\n              /*break*/\n              , 4];\n              _p = language;\n              if (_p) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 2:\n              _p = _t.sent();\n              _t.label = 3;\n\n            case 3:\n              LanguageCode = _p;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              entitiesDetectionParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              entitiesPromise = this.detectEntities(entitiesDetectionParams);\n              _t.label = 4;\n\n            case 4:\n              if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3\n              /*break*/\n              , 7];\n              _q = language;\n              if (_q) return [3\n              /*break*/\n              , 6];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 5:\n              _q = _t.sent();\n              _t.label = 6;\n\n            case 6:\n              LanguageCode = _q;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              sentimentParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              sentimentPromise = this.detectSentiment(sentimentParams);\n              _t.label = 7;\n\n            case 7:\n              if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3\n              /*break*/\n              , 10];\n              _r = language;\n              if (_r) return [3\n              /*break*/\n              , 9];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 8:\n              _r = _t.sent();\n              _t.label = 9;\n\n            case 9:\n              LanguageCode = _r;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              syntaxParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              syntaxPromise = this.detectSyntax(syntaxParams);\n              _t.label = 10;\n\n            case 10:\n              if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3\n              /*break*/\n              , 13];\n              _s = language;\n              if (_s) return [3\n              /*break*/\n              , 12];\n              return [4\n              /*yield*/\n              , languagePromise];\n\n            case 11:\n              _s = _t.sent();\n              _t.label = 12;\n\n            case 12:\n              LanguageCode = _s;\n\n              if (!LanguageCode) {\n                return [2\n                /*return*/\n                , rej('language code is required on source for this selection')];\n              }\n\n              keyPhrasesParams = {\n                Text: text,\n                LanguageCode: LanguageCode\n              };\n              keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams);\n              _t.label = 13;\n\n            case 13:\n              _t.trys.push([13, 15,, 16]);\n\n              return [4\n              /*yield*/\n              , Promise.all([languagePromise, entitiesPromise, sentimentPromise, syntaxPromise, keyPhrasesPromise])];\n\n            case 14:\n              results = _t.sent();\n              res({\n                textInterpretation: {\n                  keyPhrases: results[4] || [],\n                  language: results[0] || '',\n                  sentiment: results[2],\n                  syntax: results[3] || [],\n                  textEntities: results[1] || []\n                }\n              });\n              return [3\n              /*break*/\n              , 16];\n\n            case 15:\n              err_1 = _t.sent();\n              rej(err_1);\n              return [3\n              /*break*/\n              , 16];\n\n            case 16:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n            return [4\n            /*yield*/\n            , this.comprehendClient.send(detectKeyPhrasesCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , KeyPhrases.map(function (_a) {\n              var text = _a.Text;\n              return {\n                text: text\n              };\n            })];\n\n          case 2:\n            err_2 = _b.sent();\n\n            if (err_2.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_2.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectSyntaxCommand = new DetectSyntaxCommand(params);\n            return [4\n            /*yield*/\n            , this.comprehendClient.send(detectSyntaxCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , this.serializeSyntaxFromComprehend(SyntaxTokens)];\n\n          case 2:\n            err_3 = _b.sent();\n\n            if (err_3.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_3.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n    var response = [];\n\n    if (tokens && Array.isArray(tokens)) {\n      response = tokens.map(function (_a) {\n        var _b = _a.Text,\n            text = _b === void 0 ? '' : _b,\n            _c = _a.PartOfSpeech,\n            _d = (_c === void 0 ? {} : _c).Tag,\n            syntax = _d === void 0 ? '' : _d;\n        return {\n          text: text,\n          syntax: syntax\n        };\n      });\n    }\n\n    return response;\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n\n      return __generator(this, function (_j) {\n        switch (_j.label) {\n          case 0:\n            _j.trys.push([0, 2,, 3]);\n\n            detectSentimentCommand = new DetectSentimentCommand(params);\n            return [4\n            /*yield*/\n            , this.comprehendClient.send(detectSentimentCommand)];\n\n          case 1:\n            data = _j.sent();\n            _a = data, _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n            return [2\n            /*return*/\n            , {\n              predominant: predominant,\n              positive: positive,\n              negative: negative,\n              neutral: neutral,\n              mixed: mixed\n            }];\n\n          case 2:\n            err_4 = _j.sent();\n\n            if (err_4.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_4.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectEntitiesCommand, data, _a, Entities, err_5;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            detectEntitiesCommand = new DetectEntitiesCommand(params);\n            return [4\n            /*yield*/\n            , this.comprehendClient.send(detectEntitiesCommand)];\n\n          case 1:\n            data = _b.sent();\n            _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , this.serializeEntitiesFromComprehend(Entities)];\n\n          case 2:\n            err_5 = _b.sent();\n\n            if (err_5.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_5.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n    var response = [];\n\n    if (data && Array.isArray(data)) {\n      response = data.map(function (_a) {\n        var type = _a.Type,\n            text = _a.Text;\n        return {\n          type: type,\n          text: text\n        };\n      });\n    }\n\n    return response;\n  };\n\n  AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 2,, 3]);\n\n            detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n            return [4\n            /*yield*/\n            , this.comprehendClient.send(detectDominantLanguageCommand)];\n\n          case 1:\n            data = _c.sent();\n            _a = (data || {}).Languages, _b = __read(_a === void 0 ? [{}] : _a, 1), LanguageCode = _b[0].LanguageCode;\n\n            if (!LanguageCode) {\n              Promise.reject('Language not detected');\n            }\n\n            return [2\n            /*return*/\n            , data.Languages[0].LanguageCode];\n\n          case 2:\n            err_6 = _c.sent();\n\n            if (err_6.code === 'AccessDeniedException') {\n              Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' + 'amplify predictions add');\n            } else {\n              Promise.reject(err_6.message);\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider);\n\nexport { AmazonAIInterpretPredictionsProvider };","map":{"version":3,"names":["__awaiter","__extends","__generator","__read","Category","Credentials","PredictionsAction","getAmplifyUserAgentObject","AbstractInterpretPredictionsProvider","InterpretTextCategories","ComprehendClient","DetectSyntaxCommand","DetectEntitiesCommand","DetectDominantLanguageCommand","DetectKeyPhrasesCommand","DetectSentimentCommand","AmazonAIInterpretPredictionsProvider","_super","call","prototype","getProviderName","interpretText","input","_this","Promise","res","rej","credentials","_a","_b","_c","region","_d","_e","interpretTypeConfig","_f","_g","_h","_j","text","_k","interpretType","_l","_m","_o","language","doAll","languagePromise","languageDetectionParams","entitiesPromise","LanguageCode","_p","entitiesDetectionParams","sentimentPromise","_q","sentimentParams","syntaxPromise","_r","syntaxParams","keyPhrasesPromise","_s","keyPhrasesParams","results","err_1","_t","label","get","sent","_config","defaults","type","source","undefined","comprehendClient","customUserAgent","category","Predictions","action","Interpret","ALL","LANGUAGE","Text","detectLanguage","ENTITIES","detectEntities","SENTIMENT","detectSentiment","SYNTAX","detectSyntax","KEY_PHRASES","detectKeyPhrases","trys","push","all","textInterpretation","keyPhrases","sentiment","syntax","textEntities","params","detectKeyPhrasesCommand","data","KeyPhrases","err_2","send","map","code","reject","message","detectSyntaxCommand","SyntaxTokens","err_3","serializeSyntaxFromComprehend","tokens","response","Array","isArray","PartOfSpeech","Tag","detectSentimentCommand","predominant","positive","negative","neutral","mixed","err_4","Sentiment","SentimentScore","Positive","Negative","Neutral","Mixed","detectEntitiesCommand","Entities","err_5","serializeEntitiesFromComprehend","Type","detectDominantLanguageCommand","err_6","Languages"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/predictions/lib-esm/Providers/AmazonAIInterpretPredictionsProvider.js"],"sourcesContent":["import { __awaiter, __extends, __generator, __read } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Category, Credentials, PredictionsAction, getAmplifyUserAgentObject, } from '@aws-amplify/core';\nimport { AbstractInterpretPredictionsProvider } from '../types/Providers';\nimport { InterpretTextCategories, } from '../types';\nimport { ComprehendClient, DetectSyntaxCommand, DetectEntitiesCommand, DetectDominantLanguageCommand, DetectKeyPhrasesCommand, DetectSentimentCommand, } from '@aws-sdk/client-comprehend';\nvar AmazonAIInterpretPredictionsProvider = /** @class */ (function (_super) {\n    __extends(AmazonAIInterpretPredictionsProvider, _super);\n    function AmazonAIInterpretPredictionsProvider() {\n        return _super.call(this) || this;\n    }\n    AmazonAIInterpretPredictionsProvider.prototype.getProviderName = function () {\n        return 'AmazonAIInterpretPredictionsProvider';\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.interpretText = function (input) {\n        var _this = this;\n        return new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\n            var credentials, _a, _b, _c, region, _d, _e, interpretTypeConfig, _f, _g, _h, _j, text, _k, interpretType, _l, _m, _o, language, doAll, languagePromise, languageDetectionParams, entitiesPromise, LanguageCode, _p, entitiesDetectionParams, sentimentPromise, LanguageCode, _q, sentimentParams, syntaxPromise, LanguageCode, _r, syntaxParams, keyPhrasesPromise, LanguageCode, _s, keyPhrasesParams, results, err_1;\n            return __generator(this, function (_t) {\n                switch (_t.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _t.sent();\n                        if (!credentials)\n                            return [2 /*return*/, rej('No credentials')];\n                        _a = this._config.interpretText, _b = _a === void 0 ? {} : _a, _c = _b.region, region = _c === void 0 ? '' : _c, _d = _b.defaults, _e = (_d === void 0 ? {} : _d).type, interpretTypeConfig = _e === void 0 ? '' : _e;\n                        _f = (input).text, _g = _f === void 0 ? {} : _f, _h = _g.source, _j = (_h === void 0 ? {} : _h).text, text = _j === void 0 ? '' : _j, _k = _g.type, interpretType = _k === void 0 ? interpretTypeConfig : _k;\n                        _l = (input).text, _m = (_l === void 0 ? {} : _l).source, _o = (_m === void 0 ? {} : _m).language, language = _o === void 0 ? undefined : _o;\n                        this.comprehendClient = new ComprehendClient({\n                            credentials: credentials,\n                            region: region,\n                            customUserAgent: getAmplifyUserAgentObject({\n                                category: Category.Predictions,\n                                action: PredictionsAction.Interpret,\n                            }),\n                        });\n                        doAll = interpretType === InterpretTextCategories.ALL;\n                        if (doAll || interpretType === InterpretTextCategories.LANGUAGE) {\n                            languageDetectionParams = {\n                                Text: text,\n                            };\n                            languagePromise = this.detectLanguage(languageDetectionParams);\n                        }\n                        if (!(doAll || interpretType === InterpretTextCategories.ENTITIES)) return [3 /*break*/, 4];\n                        _p = language;\n                        if (_p) return [3 /*break*/, 3];\n                        return [4 /*yield*/, languagePromise];\n                    case 2:\n                        _p = (_t.sent());\n                        _t.label = 3;\n                    case 3:\n                        LanguageCode = _p;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        entitiesDetectionParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        entitiesPromise = this.detectEntities(entitiesDetectionParams);\n                        _t.label = 4;\n                    case 4:\n                        if (!(doAll || interpretType === InterpretTextCategories.SENTIMENT)) return [3 /*break*/, 7];\n                        _q = language;\n                        if (_q) return [3 /*break*/, 6];\n                        return [4 /*yield*/, languagePromise];\n                    case 5:\n                        _q = (_t.sent());\n                        _t.label = 6;\n                    case 6:\n                        LanguageCode = _q;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        sentimentParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        sentimentPromise = this.detectSentiment(sentimentParams);\n                        _t.label = 7;\n                    case 7:\n                        if (!(doAll || interpretType === InterpretTextCategories.SYNTAX)) return [3 /*break*/, 10];\n                        _r = language;\n                        if (_r) return [3 /*break*/, 9];\n                        return [4 /*yield*/, languagePromise];\n                    case 8:\n                        _r = (_t.sent());\n                        _t.label = 9;\n                    case 9:\n                        LanguageCode = _r;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        syntaxParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        syntaxPromise = this.detectSyntax(syntaxParams);\n                        _t.label = 10;\n                    case 10:\n                        if (!(doAll || interpretType === InterpretTextCategories.KEY_PHRASES)) return [3 /*break*/, 13];\n                        _s = language;\n                        if (_s) return [3 /*break*/, 12];\n                        return [4 /*yield*/, languagePromise];\n                    case 11:\n                        _s = (_t.sent());\n                        _t.label = 12;\n                    case 12:\n                        LanguageCode = _s;\n                        if (!LanguageCode) {\n                            return [2 /*return*/, rej('language code is required on source for this selection')];\n                        }\n                        keyPhrasesParams = {\n                            Text: text,\n                            LanguageCode: LanguageCode,\n                        };\n                        keyPhrasesPromise = this.detectKeyPhrases(keyPhrasesParams);\n                        _t.label = 13;\n                    case 13:\n                        _t.trys.push([13, 15, , 16]);\n                        return [4 /*yield*/, Promise.all([\n                                languagePromise,\n                                entitiesPromise,\n                                sentimentPromise,\n                                syntaxPromise,\n                                keyPhrasesPromise,\n                            ])];\n                    case 14:\n                        results = _t.sent();\n                        res({\n                            textInterpretation: {\n                                keyPhrases: results[4] || [],\n                                language: results[0] || '',\n                                sentiment: results[2],\n                                syntax: results[3] || [],\n                                textEntities: results[1] || [],\n                            },\n                        });\n                        return [3 /*break*/, 16];\n                    case 15:\n                        err_1 = _t.sent();\n                        rej(err_1);\n                        return [3 /*break*/, 16];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectKeyPhrases = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectKeyPhrasesCommand, data, _a, KeyPhrases, err_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectKeyPhrasesCommand = new DetectKeyPhrasesCommand(params);\n                        return [4 /*yield*/, this.comprehendClient.send(detectKeyPhrasesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).KeyPhrases, KeyPhrases = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, KeyPhrases.map(function (_a) {\n                                var text = _a.Text;\n                                return { text: text };\n                            })];\n                    case 2:\n                        err_2 = _b.sent();\n                        if (err_2.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_2.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSyntax = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSyntaxCommand, data, _a, SyntaxTokens, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectSyntaxCommand = new DetectSyntaxCommand(params);\n                        return [4 /*yield*/, this.comprehendClient.send(detectSyntaxCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).SyntaxTokens, SyntaxTokens = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeSyntaxFromComprehend(SyntaxTokens)];\n                    case 2:\n                        err_3 = _b.sent();\n                        if (err_3.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_3.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeSyntaxFromComprehend = function (tokens) {\n        var response = [];\n        if (tokens && Array.isArray(tokens)) {\n            response = tokens.map(function (_a) {\n                var _b = _a.Text, text = _b === void 0 ? '' : _b, _c = _a.PartOfSpeech, _d = (_c === void 0 ? {} : _c).Tag, syntax = _d === void 0 ? '' : _d;\n                return { text: text, syntax: syntax };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectSentiment = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectSentimentCommand, data, _a, _b, predominant, _c, _d, _e, positive, _f, negative, _g, neutral, _h, mixed, err_4;\n            return __generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0:\n                        _j.trys.push([0, 2, , 3]);\n                        detectSentimentCommand = new DetectSentimentCommand(params);\n                        return [4 /*yield*/, this.comprehendClient.send(detectSentimentCommand)];\n                    case 1:\n                        data = _j.sent();\n                        _a = (data), _b = _a.Sentiment, predominant = _b === void 0 ? '' : _b, _c = _a.SentimentScore, _d = _c === void 0 ? {} : _c, _e = _d.Positive, positive = _e === void 0 ? 0 : _e, _f = _d.Negative, negative = _f === void 0 ? 0 : _f, _g = _d.Neutral, neutral = _g === void 0 ? 0 : _g, _h = _d.Mixed, mixed = _h === void 0 ? 0 : _h;\n                        return [2 /*return*/, { predominant: predominant, positive: positive, negative: negative, neutral: neutral, mixed: mixed }];\n                    case 2:\n                        err_4 = _j.sent();\n                        if (err_4.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_4.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectEntities = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectEntitiesCommand, data, _a, Entities, err_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        detectEntitiesCommand = new DetectEntitiesCommand(params);\n                        return [4 /*yield*/, this.comprehendClient.send(detectEntitiesCommand)];\n                    case 1:\n                        data = _b.sent();\n                        _a = (data || {}).Entities, Entities = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, this.serializeEntitiesFromComprehend(Entities)];\n                    case 2:\n                        err_5 = _b.sent();\n                        if (err_5.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_5.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.serializeEntitiesFromComprehend = function (data) {\n        var response = [];\n        if (data && Array.isArray(data)) {\n            response = data.map(function (_a) {\n                var type = _a.Type, text = _a.Text;\n                return { type: type, text: text };\n            });\n        }\n        return response;\n    };\n    AmazonAIInterpretPredictionsProvider.prototype.detectLanguage = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var detectDominantLanguageCommand, data, _a, _b, LanguageCode, err_6;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 2, , 3]);\n                        detectDominantLanguageCommand = new DetectDominantLanguageCommand(params);\n                        return [4 /*yield*/, this.comprehendClient.send(detectDominantLanguageCommand)];\n                    case 1:\n                        data = _c.sent();\n                        _a = (data || {}).Languages, _b = __read(_a === void 0 ? [{}] : _a, 1), LanguageCode = _b[0].LanguageCode;\n                        if (!LanguageCode) {\n                            Promise.reject('Language not detected');\n                        }\n                        return [2 /*return*/, data.Languages[0].LanguageCode];\n                    case 2:\n                        err_6 = _c.sent();\n                        if (err_6.code === 'AccessDeniedException') {\n                            Promise.reject('Not authorized, did you enable Interpret Text on predictions category Amplify CLI? try: ' +\n                                'amplify predictions add');\n                        }\n                        else {\n                            Promise.reject(err_6.message);\n                        }\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AmazonAIInterpretPredictionsProvider;\n}(AbstractInterpretPredictionsProvider));\nexport { AmazonAIInterpretPredictionsProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}