{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nlet wasmRotate;\n\nfunction setup(backend) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null\n  /* void */\n  , ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number']);\n}\n\nexport function rotateWithOffset(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    image\n  } = inputs;\n  const {\n    radians,\n    fillValue,\n    center\n  } = attrs;\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [centerX, centerY] = backend_util.getImageCenter(center, imageHeight, imageWidth);\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n  const fillValues = typeof fillValue === 'number' ? [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] : [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n  wasmRotate(imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX, centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\nexport const rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset,\n  setupFunc: setup\n};","map":{"version":3,"names":["RotateWithOffset","backend_util","wasmRotate","setup","backend","wasm","cwrap","rotateWithOffset","args","inputs","attrs","image","radians","fillValue","center","out","makeOutput","shape","dtype","imageId","dataIdMap","get","dataId","id","outId","batch","imageHeight","imageWidth","numChannels","centerX","centerY","getImageCenter","fillIsBlack","fullOpacityValue","fillValues","fillBytes","Uint8Array","Int32Array","buffer","length","rotateWithOffsetConfig","kernelName","backendName","kernelFunc","setupFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/RotateWithOffset.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nlet wasmRotate;\nfunction setup(backend) {\n    wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nexport function rotateWithOffset(args) {\n    const { inputs, backend, attrs } = args;\n    const { image } = inputs;\n    const { radians, fillValue, center } = attrs;\n    const out = backend.makeOutput(image.shape, image.dtype);\n    const imageId = backend.dataIdMap.get(image.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [centerX, centerY] = backend_util.getImageCenter(center, imageHeight, imageWidth);\n    const fillIsBlack = fillValue === 0;\n    const fullOpacityValue = 255;\n    const fillValues = typeof fillValue === 'number' ?\n        [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n        [...fillValue, fullOpacityValue];\n    const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n    wasmRotate(imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX, centerY, fillBytes, fillValues.length, outId);\n    return out;\n}\nexport const rotateWithOffsetConfig = {\n    kernelName: RotateWithOffset,\n    backendName: 'wasm',\n    kernelFunc: rotateWithOffset,\n    setupFunc: setup\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,QAAiC,uBAAjC;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,IAAIC,UAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,UAAU,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBN,gBAAnB,EAAqC;EAAK;EAA1C,EAAsD,CAC/D,QAD+D,EAE/D,QAF+D,EAG/D,QAH+D,EAI/D,QAJ+D,EAK/D,QAL+D,EAM/D,QAN+D,EAO/D,QAP+D,EAQ/D,QAR+D,EAS/D,OAT+D,EAU/D,QAV+D,EAW/D,QAX+D,CAAtD,CAAb;AAaH;;AACD,OAAO,SAASO,gBAAT,CAA0BC,IAA1B,EAAgC;EACnC,MAAM;IAAEC,MAAF;IAAUL,OAAV;IAAmBM;EAAnB,IAA6BF,IAAnC;EACA,MAAM;IAAEG;EAAF,IAAYF,MAAlB;EACA,MAAM;IAAEG,OAAF;IAAWC,SAAX;IAAsBC;EAAtB,IAAiCJ,KAAvC;EACA,MAAMK,GAAG,GAAGX,OAAO,CAACY,UAAR,CAAmBL,KAAK,CAACM,KAAzB,EAAgCN,KAAK,CAACO,KAAtC,CAAZ;EACA,MAAMC,OAAO,GAAGf,OAAO,CAACgB,SAAR,CAAkBC,GAAlB,CAAsBV,KAAK,CAACW,MAA5B,EAAoCC,EAApD;EACA,MAAMC,KAAK,GAAGpB,OAAO,CAACgB,SAAR,CAAkBC,GAAlB,CAAsBN,GAAG,CAACO,MAA1B,EAAkCC,EAAhD;EACA,MAAM,CAACE,KAAD,EAAQC,WAAR,EAAqBC,UAArB,EAAiCC,WAAjC,IAAgDjB,KAAK,CAACM,KAA5D;EACA,MAAM,CAACY,OAAD,EAAUC,OAAV,IAAqB7B,YAAY,CAAC8B,cAAb,CAA4BjB,MAA5B,EAAoCY,WAApC,EAAiDC,UAAjD,CAA3B;EACA,MAAMK,WAAW,GAAGnB,SAAS,KAAK,CAAlC;EACA,MAAMoB,gBAAgB,GAAG,GAAzB;EACA,MAAMC,UAAU,GAAG,OAAOrB,SAAP,KAAqB,QAArB,GACf,CAACA,SAAD,EAAYA,SAAZ,EAAuBA,SAAvB,EAAkCmB,WAAW,GAAG,CAAH,GAAOC,gBAApD,CADe,GAEf,CAAC,GAAGpB,SAAJ,EAAeoB,gBAAf,CAFJ;EAGA,MAAME,SAAS,GAAG,IAAIC,UAAJ,CAAe,IAAIC,UAAJ,CAAeH,UAAf,EAA2BI,MAA1C,CAAlB;EACApC,UAAU,CAACiB,OAAD,EAAUM,KAAV,EAAiBC,WAAjB,EAA8BC,UAA9B,EAA0CC,WAA1C,EAAuDhB,OAAvD,EAAgEiB,OAAhE,EAAyEC,OAAzE,EAAkFK,SAAlF,EAA6FD,UAAU,CAACK,MAAxG,EAAgHf,KAAhH,CAAV;EACA,OAAOT,GAAP;AACH;AACD,OAAO,MAAMyB,sBAAsB,GAAG;EAClCC,UAAU,EAAEzC,gBADsB;EAElC0C,WAAW,EAAE,MAFqB;EAGlCC,UAAU,EAAEpC,gBAHsB;EAIlCqC,SAAS,EAAEzC;AAJuB,CAA/B"},"metadata":{},"sourceType":"module"}