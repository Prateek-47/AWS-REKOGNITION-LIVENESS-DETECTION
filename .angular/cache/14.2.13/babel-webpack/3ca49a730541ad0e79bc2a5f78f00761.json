{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { browserOrNode } from '@aws-amplify/core';\nvar proto = browserOrNode().isBrowser && window['Element'] ? window['Element'].prototype : null;\nvar nativeMatches = proto ? proto.matches || // @ts-ignore\nproto.matchesSelector || // @ts-ignore\nproto.webkitMatchesSelector || // @ts-ignore\nproto.mozMatchesSelector || // @ts-ignore\nproto.msMatchesSelector || // @ts-ignore\nproto.oMatchesSelector : null;\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\n\nexport function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType === 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test === 'string' || test.nodeType === 1) {\n      return element === test || matchesSelector(element,\n      /** @type {string} */\n      test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item = void 0; item = test[i]; i++) {\n        if (element === item || matchesSelector(element, item)) return true;\n      }\n    }\n  } // Still here? Return false\n\n\n  return false;\n}\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\n\nfunction matchesSelector(element, selector) {\n  if (typeof selector !== 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n\n  for (var i = 0, node = void 0; node = nodes[i]; i++) {\n    if (node === element) return true;\n  }\n\n  return false;\n}","map":{"version":3,"names":["browserOrNode","proto","isBrowser","window","prototype","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","nodeType","i","item","selector","call","nodes","parentNode","querySelectorAll","node"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/analytics/lib-esm/vendor/dom-utils/matches.js"],"sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { browserOrNode } from '@aws-amplify/core';\nvar proto = browserOrNode().isBrowser && window['Element']\n    ? window['Element'].prototype\n    : null;\nvar nativeMatches = proto\n    ? proto.matches ||\n        // @ts-ignore\n        proto.matchesSelector ||\n        // @ts-ignore\n        proto.webkitMatchesSelector ||\n        // @ts-ignore\n        proto.mozMatchesSelector ||\n        // @ts-ignore\n        proto.msMatchesSelector ||\n        // @ts-ignore\n        proto.oMatchesSelector\n    : null;\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport function matches(element, test) {\n    // Validate input.\n    if (element && element.nodeType === 1 && test) {\n        // if test is a string or DOM element test it.\n        if (typeof test === 'string' || test.nodeType === 1) {\n            return (element === test || matchesSelector(element, /** @type {string} */ test));\n        }\n        else if ('length' in test) {\n            // if it has a length property iterate over the items\n            // and return true if any match.\n            for (var i = 0, item = void 0; (item = test[i]); i++) {\n                if (element === item || matchesSelector(element, item))\n                    return true;\n            }\n        }\n    }\n    // Still here? Return false\n    return false;\n}\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n    if (typeof selector !== 'string')\n        return false;\n    if (nativeMatches)\n        return nativeMatches.call(element, selector);\n    var nodes = element.parentNode.querySelectorAll(selector);\n    for (var i = 0, node = void 0; (node = nodes[i]); i++) {\n        if (node === element)\n            return true;\n    }\n    return false;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,mBAA9B;AACA,IAAIC,KAAK,GAAGD,aAAa,GAAGE,SAAhB,IAA6BC,MAAM,CAAC,SAAD,CAAnC,GACNA,MAAM,CAAC,SAAD,CAAN,CAAkBC,SADZ,GAEN,IAFN;AAGA,IAAIC,aAAa,GAAGJ,KAAK,GACnBA,KAAK,CAACK,OAAN,IACE;AACAL,KAAK,CAACM,eAFR,IAGE;AACAN,KAAK,CAACO,qBAJR,IAKE;AACAP,KAAK,CAACQ,kBANR,IAOE;AACAR,KAAK,CAACS,iBARR,IASE;AACAT,KAAK,CAACU,gBAXW,GAYnB,IAZN;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASL,OAAT,CAAiBM,OAAjB,EAA0BC,IAA1B,EAAgC;EACnC;EACA,IAAID,OAAO,IAAIA,OAAO,CAACE,QAAR,KAAqB,CAAhC,IAAqCD,IAAzC,EAA+C;IAC3C;IACA,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACC,QAAL,KAAkB,CAAlD,EAAqD;MACjD,OAAQF,OAAO,KAAKC,IAAZ,IAAoBN,eAAe,CAACK,OAAD;MAAU;MAAsBC,IAAhC,CAA3C;IACH,CAFD,MAGK,IAAI,YAAYA,IAAhB,EAAsB;MACvB;MACA;MACA,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG,KAAK,CAA5B,EAAgCA,IAAI,GAAGH,IAAI,CAACE,CAAD,CAA3C,EAAiDA,CAAC,EAAlD,EAAsD;QAClD,IAAIH,OAAO,KAAKI,IAAZ,IAAoBT,eAAe,CAACK,OAAD,EAAUI,IAAV,CAAvC,EACI,OAAO,IAAP;MACP;IACJ;EACJ,CAfkC,CAgBnC;;;EACA,OAAO,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAST,eAAT,CAAyBK,OAAzB,EAAkCK,QAAlC,EAA4C;EACxC,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EACI,OAAO,KAAP;EACJ,IAAIZ,aAAJ,EACI,OAAOA,aAAa,CAACa,IAAd,CAAmBN,OAAnB,EAA4BK,QAA5B,CAAP;EACJ,IAAIE,KAAK,GAAGP,OAAO,CAACQ,UAAR,CAAmBC,gBAAnB,CAAoCJ,QAApC,CAAZ;;EACA,KAAK,IAAIF,CAAC,GAAG,CAAR,EAAWO,IAAI,GAAG,KAAK,CAA5B,EAAgCA,IAAI,GAAGH,KAAK,CAACJ,CAAD,CAA5C,EAAkDA,CAAC,EAAnD,EAAuD;IACnD,IAAIO,IAAI,KAAKV,OAAb,EACI,OAAO,IAAP;EACP;;EACD,OAAO,KAAP;AACH"},"metadata":{},"sourceType":"module"}