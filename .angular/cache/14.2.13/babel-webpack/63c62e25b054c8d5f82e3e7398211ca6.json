{"ast":null,"code":"import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({\n  output,\n  parsedBody,\n  exceptionCtor,\n  errorCode\n}) => {\n  const $metadata = deserializeMetadata(output);\n  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n  const response = new exceptionCtor({\n    name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n    $fault: \"client\",\n    $metadata\n  });\n  throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = ExceptionCtor => {\n  return ({\n    output,\n    parsedBody,\n    errorCode\n  }) => {\n    throwDefaultError({\n      output,\n      parsedBody,\n      exceptionCtor: ExceptionCtor,\n      errorCode\n    });\n  };\n};\n\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});","map":{"version":3,"names":["decorateServiceException","throwDefaultError","output","parsedBody","exceptionCtor","errorCode","$metadata","deserializeMetadata","statusCode","httpStatusCode","undefined","response","name","code","Code","$fault","withBaseException","ExceptionCtor","requestId","headers","extendedRequestId","cfId"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js"],"sourcesContent":["import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,cAAzC;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAAEC,MAAF;EAAUC,UAAV;EAAsBC,aAAtB;EAAqCC;AAArC,CAAD,KAAsD;EACnF,MAAMC,SAAS,GAAGC,mBAAmB,CAACL,MAAD,CAArC;EACA,MAAMM,UAAU,GAAGF,SAAS,CAACG,cAAV,GAA2BH,SAAS,CAACG,cAAV,GAA2B,EAAtD,GAA2DC,SAA9E;EACA,MAAMC,QAAQ,GAAG,IAAIP,aAAJ,CAAkB;IAC/BQ,IAAI,EAAET,UAAU,EAAEU,IAAZ,IAAoBV,UAAU,EAAEW,IAAhC,IAAwCT,SAAxC,IAAqDG,UAArD,IAAmE,cAD1C;IAE/BO,MAAM,EAAE,QAFuB;IAG/BT;EAH+B,CAAlB,CAAjB;EAKA,MAAMN,wBAAwB,CAACW,QAAD,EAAWR,UAAX,CAA9B;AACH,CATM;AAUP,OAAO,MAAMa,iBAAiB,GAAIC,aAAD,IAAmB;EAChD,OAAO,CAAC;IAAEf,MAAF;IAAUC,UAAV;IAAsBE;EAAtB,CAAD,KAAuC;IAC1CJ,iBAAiB,CAAC;MAAEC,MAAF;MAAUC,UAAV;MAAsBC,aAAa,EAAEa,aAArC;MAAoDZ;IAApD,CAAD,CAAjB;EACH,CAFD;AAGH,CAJM;;AAKP,MAAME,mBAAmB,GAAIL,MAAD,KAAa;EACrCO,cAAc,EAAEP,MAAM,CAACM,UADc;EAErCU,SAAS,EAAEhB,MAAM,CAACiB,OAAP,CAAe,kBAAf,KAAsCjB,MAAM,CAACiB,OAAP,CAAe,mBAAf,CAAtC,IAA6EjB,MAAM,CAACiB,OAAP,CAAe,kBAAf,CAFnD;EAGrCC,iBAAiB,EAAElB,MAAM,CAACiB,OAAP,CAAe,YAAf,CAHkB;EAIrCE,IAAI,EAAEnB,MAAM,CAACiB,OAAP,CAAe,aAAf;AAJ+B,CAAb,CAA5B"},"metadata":{},"sourceType":"module"}