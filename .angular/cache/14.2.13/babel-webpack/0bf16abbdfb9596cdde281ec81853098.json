{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, AnalyticsAction } from '@aws-amplify/core';\nimport { KinesisClient, PutRecordsCommand } from '@aws-sdk/client-kinesis';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nimport { getAnalyticsUserAgent } from '../utils/UserAgent';\nvar logger = new Logger('AWSKinesisProvider'); // events buffer\n\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\n\nvar RESEND_LIMIT = 5;\n\nvar AWSKinesisProvider =\n/** @class */\nfunction () {\n  function AWSKinesisProvider(config) {\n    this._buffer = [];\n    this._config = config || {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\n    this._setupTimer();\n  }\n\n  AWSKinesisProvider.prototype._setupTimer = function () {\n    var _this = this;\n\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n\n    var _a = this._config,\n        flushSize = _a.flushSize,\n        flushInterval = _a.flushInterval;\n    this._timer = setInterval(function () {\n      var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n      var events = [];\n\n      for (var i = 0; i < size; i += 1) {\n        var params = _this._buffer.shift();\n\n        events.push(params);\n      }\n\n      _this._sendFromBuffer(events);\n    }, flushInterval);\n  };\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSKinesisProvider.prototype.getCategory = function () {\n    return 'Analytics';\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSKinesisProvider.prototype.getProviderName = function () {\n    return 'AWSKinesis';\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n\n\n  AWSKinesisProvider.prototype.configure = function (config) {\n    logger.debug('configure Analytics', config);\n    var conf = config || {};\n    this._config = Object.assign({}, this._config, conf);\n\n    this._setupTimer();\n\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n\n\n  AWSKinesisProvider.prototype.record = function (params) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._getCredentials()];\n\n          case 1:\n            credentials = _b.sent();\n            if (!credentials) return [2\n            /*return*/\n            , Promise.resolve(false)];\n            Object.assign(params, {\n              config: this._config,\n              credentials: credentials\n            });\n\n            if ((_a = params.event) === null || _a === void 0 ? void 0 : _a.immediate) {\n              this._sendEvents([params]);\n\n              return [2\n              /*return*/\n              , Promise.resolve(true)];\n            } else {\n              return [2\n              /*return*/\n              , this._putToBuffer(params)];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSKinesisProvider.prototype.updateEndpoint = function () {\n    logger.debug('updateEndpoint is not implemented in Kinesis provider');\n    return Promise.resolve(true);\n  };\n  /**\n   * @private\n   * @param params - params for the event recording\n   * Put events into buffer\n   */\n\n\n  AWSKinesisProvider.prototype._putToBuffer = function (params) {\n    if (this._buffer.length < BUFFER_SIZE) {\n      this._buffer.push(params);\n\n      return Promise.resolve(true);\n    } else {\n      logger.debug('exceed analytics events buffer size');\n      return Promise.reject(false);\n    }\n  };\n\n  AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n    var _this = this; // collapse events by credentials\n    // events = [ {params} ]\n\n\n    var eventsGroups = [];\n    var preCred = null;\n    var group = [];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var cred = events[i].credentials;\n\n      if (i === 0) {\n        group.push(events[i]);\n        preCred = cred;\n      } else {\n        if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n          logger.debug('no change for cred, put event in the same group');\n          group.push(events[i]);\n        } else {\n          eventsGroups.push(group);\n          group = [];\n          group.push(events[i]);\n          preCred = cred;\n        }\n      }\n    }\n\n    eventsGroups.push(group);\n    eventsGroups.map(function (evts) {\n      _this._sendEvents(evts);\n    });\n  };\n\n  AWSKinesisProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n\n    if (group.length === 0) {\n      return;\n    }\n\n    var _a = group[0],\n        config = _a.config,\n        credentials = _a.credentials;\n\n    var initClients = this._init(config, credentials);\n\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // spit by streamName\n      var evt = params.event;\n      var streamName = evt.streamName;\n\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n\n      var bufferData = evt.data && typeof evt.data !== 'string' ? JSON.stringify(evt.data) : evt.data;\n      var Data = fromUtf8(bufferData);\n      var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n      var record = {\n        Data: Data,\n        PartitionKey: PartitionKey\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var command, err_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              logger.debug('putting records to kinesis with records', records[streamName]);\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              command = new PutRecordsCommand({\n                Records: records[streamName],\n                StreamName: streamName\n              });\n              return [4\n              /*yield*/\n              , this._kinesis.send(command)];\n\n            case 2:\n              _a.sent();\n\n              logger.debug('Upload records to stream', streamName);\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              err_1 = _a.sent();\n              logger.debug('Failed to upload records to Kinesis', err_1);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  AWSKinesisProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n\n    if (this._kinesis && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n\n    this._config.credentials = credentials;\n    var region = config.region,\n        endpoint = config.endpoint;\n    return this._initKinesis(region, endpoint, credentials);\n  };\n\n  AWSKinesisProvider.prototype._initKinesis = function (region, endpoint, credentials) {\n    logger.debug('initialize kinesis with credentials', credentials);\n    this._kinesis = new KinesisClient({\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAnalyticsUserAgent(AnalyticsAction.Record),\n      endpoint: endpoint\n    });\n    return true;\n  };\n  /**\n   * @private\n   * check if current credentials exists\n   */\n\n\n  AWSKinesisProvider.prototype._getCredentials = function () {\n    var _this = this;\n\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', _this._config.credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n\n  return AWSKinesisProvider;\n}();\n\nexport { AWSKinesisProvider };","map":{"version":3,"names":["__awaiter","__generator","ConsoleLogger","Logger","Credentials","AnalyticsAction","KinesisClient","PutRecordsCommand","fromUtf8","getAnalyticsUserAgent","logger","BUFFER_SIZE","FLUSH_SIZE","FLUSH_INTERVAL","RESEND_LIMIT","AWSKinesisProvider","config","_buffer","_config","bufferSize","flushSize","flushInterval","resendLimit","_setupTimer","prototype","_this","_timer","clearInterval","_a","setInterval","size","length","events","i","params","shift","push","_sendFromBuffer","getCategory","getProviderName","configure","debug","conf","Object","assign","record","credentials","_b","label","_getCredentials","sent","Promise","resolve","event","immediate","_sendEvents","_putToBuffer","updateEndpoint","reject","eventsGroups","preCred","group","cred","sessionToken","identityId","map","evts","initClients","_init","records","evt","streamName","undefined","bufferData","data","JSON","stringify","Data","PartitionKey","partitionKey","keys","command","err_1","trys","Records","StreamName","_kinesis","send","region","endpoint","_initKinesis","customUserAgent","Record","get","then","shear","catch","err"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/analytics/lib-esm/Providers/AWSKinesisProvider.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, AnalyticsAction, } from '@aws-amplify/core';\nimport { KinesisClient, PutRecordsCommand } from '@aws-sdk/client-kinesis';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nimport { getAnalyticsUserAgent } from '../utils/UserAgent';\nvar logger = new Logger('AWSKinesisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */ (function () {\n    function AWSKinesisProvider(config) {\n        this._buffer = [];\n        this._config = config || {};\n        this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n        this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n        this._setupTimer();\n    }\n    AWSKinesisProvider.prototype._setupTimer = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var _a = this._config, flushSize = _a.flushSize, flushInterval = _a.flushInterval;\n        this._timer = setInterval(function () {\n            var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n            var events = [];\n            for (var i = 0; i < size; i += 1) {\n                var params = _this._buffer.shift();\n                events.push(params);\n            }\n            _this._sendFromBuffer(events);\n        }, flushInterval);\n    };\n    /**\n     * get the category of the plugin\n     */\n    AWSKinesisProvider.prototype.getCategory = function () {\n        return 'Analytics';\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisProvider.prototype.getProviderName = function () {\n        return 'AWSKinesis';\n    };\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    AWSKinesisProvider.prototype.configure = function (config) {\n        logger.debug('configure Analytics', config);\n        var conf = config || {};\n        this._config = Object.assign({}, this._config, conf);\n        this._setupTimer();\n        return this._config;\n    };\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    AWSKinesisProvider.prototype.record = function (params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._getCredentials()];\n                    case 1:\n                        credentials = _b.sent();\n                        if (!credentials)\n                            return [2 /*return*/, Promise.resolve(false)];\n                        Object.assign(params, { config: this._config, credentials: credentials });\n                        if ((_a = params.event) === null || _a === void 0 ? void 0 : _a.immediate) {\n                            this._sendEvents([params]);\n                            return [2 /*return*/, Promise.resolve(true)];\n                        }\n                        else {\n                            return [2 /*return*/, this._putToBuffer(params)];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSKinesisProvider.prototype.updateEndpoint = function () {\n        logger.debug('updateEndpoint is not implemented in Kinesis provider');\n        return Promise.resolve(true);\n    };\n    /**\n     * @private\n     * @param params - params for the event recording\n     * Put events into buffer\n     */\n    AWSKinesisProvider.prototype._putToBuffer = function (params) {\n        if (this._buffer.length < BUFFER_SIZE) {\n            this._buffer.push(params);\n            return Promise.resolve(true);\n        }\n        else {\n            logger.debug('exceed analytics events buffer size');\n            return Promise.reject(false);\n        }\n    };\n    AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n        var _this = this;\n        // collapse events by credentials\n        // events = [ {params} ]\n        var eventsGroups = [];\n        var preCred = null;\n        var group = [];\n        for (var i = 0; i < events.length; i += 1) {\n            var cred = events[i].credentials;\n            if (i === 0) {\n                group.push(events[i]);\n                preCred = cred;\n            }\n            else {\n                if (cred.sessionToken === preCred.sessionToken &&\n                    cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(events[i]);\n                }\n                else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(events[i]);\n                    preCred = cred;\n                }\n            }\n        }\n        eventsGroups.push(group);\n        eventsGroups.map(function (evts) {\n            _this._sendEvents(evts);\n        });\n    };\n    AWSKinesisProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // spit by streamName\n            var evt = params.event;\n            var streamName = evt.streamName;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var bufferData = evt.data && typeof evt.data !== 'string'\n                ? JSON.stringify(evt.data)\n                : evt.data;\n            var Data = fromUtf8(bufferData);\n            var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n            var record = { Data: Data, PartitionKey: PartitionKey };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) { return __awaiter(_this, void 0, void 0, function () {\n            var command, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('putting records to kinesis with records', records[streamName]);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        command = new PutRecordsCommand({\n                            Records: records[streamName],\n                            StreamName: streamName,\n                        });\n                        return [4 /*yield*/, this._kinesis.send(command)];\n                    case 2:\n                        _a.sent();\n                        logger.debug('Upload records to stream', streamName);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        logger.debug('Failed to upload records to Kinesis', err_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    AWSKinesisProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesis &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region, endpoint = config.endpoint;\n        return this._initKinesis(region, endpoint, credentials);\n    };\n    AWSKinesisProvider.prototype._initKinesis = function (region, endpoint, credentials) {\n        logger.debug('initialize kinesis with credentials', credentials);\n        this._kinesis = new KinesisClient({\n            region: region,\n            credentials: credentials,\n            customUserAgent: getAnalyticsUserAgent(AnalyticsAction.Record),\n            endpoint: endpoint,\n        });\n        return true;\n    };\n    /**\n     * @private\n     * check if current credentials exists\n     */\n    AWSKinesisProvider.prototype._getCredentials = function () {\n        var _this = this;\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return null;\n            logger.debug('set credentials for analytics', _this._config.credentials);\n            return Credentials.shear(credentials);\n        })\n            .catch(function (err) {\n            logger.debug('ensure credentials error', err);\n            return null;\n        });\n    };\n    return AWSKinesisProvider;\n}());\nexport { AWSKinesisProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}