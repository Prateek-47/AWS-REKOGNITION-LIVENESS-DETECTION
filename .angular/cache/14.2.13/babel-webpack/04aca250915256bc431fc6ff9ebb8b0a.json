{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport const getAwsChunkedEncodingStream = (readableStream, options) => {\n  const {\n    base64Encoder,\n    bodyLengthChecker,\n    checksumAlgorithmFn,\n    checksumLocationName,\n    streamHasher\n  } = options;\n  const checksumRequired = base64Encoder !== undefined && bodyLengthChecker !== undefined && checksumAlgorithmFn !== undefined && checksumLocationName !== undefined && streamHasher !== undefined;\n  const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n  const reader = readableStream.getReader();\n  return new ReadableStream({\n    pull(controller) {\n      return _asyncToGenerator(function* () {\n        const {\n          value,\n          done\n        } = yield reader.read();\n\n        if (done) {\n          controller.enqueue(`0\\r\\n`);\n\n          if (checksumRequired) {\n            const checksum = base64Encoder(yield digest);\n            controller.enqueue(`${checksumLocationName}:${checksum}\\r\\n`);\n            controller.enqueue(`\\r\\n`);\n          }\n\n          controller.close();\n        } else {\n          controller.enqueue(`${(bodyLengthChecker(value) || 0).toString(16)}\\r\\n${value}\\r\\n`);\n        }\n      })();\n    }\n\n  });\n};","map":{"version":3,"names":["getAwsChunkedEncodingStream","readableStream","options","base64Encoder","bodyLengthChecker","checksumAlgorithmFn","checksumLocationName","streamHasher","checksumRequired","undefined","digest","reader","getReader","ReadableStream","pull","controller","value","done","read","enqueue","checksum","close","toString"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/util-stream/dist-es/getAwsChunkedEncodingStream.browser.js"],"sourcesContent":["export const getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        bodyLengthChecker !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n        async pull(controller) {\n            const { value, done } = await reader.read();\n            if (done) {\n                controller.enqueue(`0\\r\\n`);\n                if (checksumRequired) {\n                    const checksum = base64Encoder(await digest);\n                    controller.enqueue(`${checksumLocationName}:${checksum}\\r\\n`);\n                    controller.enqueue(`\\r\\n`);\n                }\n                controller.close();\n            }\n            else {\n                controller.enqueue(`${(bodyLengthChecker(value) || 0).toString(16)}\\r\\n${value}\\r\\n`);\n            }\n        },\n    });\n};\n"],"mappings":";AAAA,OAAO,MAAMA,2BAA2B,GAAG,CAACC,cAAD,EAAiBC,OAAjB,KAA6B;EACpE,MAAM;IAAEC,aAAF;IAAiBC,iBAAjB;IAAoCC,mBAApC;IAAyDC,oBAAzD;IAA+EC;EAA/E,IAAgGL,OAAtG;EACA,MAAMM,gBAAgB,GAAGL,aAAa,KAAKM,SAAlB,IACrBL,iBAAiB,KAAKK,SADD,IAErBJ,mBAAmB,KAAKI,SAFH,IAGrBH,oBAAoB,KAAKG,SAHJ,IAIrBF,YAAY,KAAKE,SAJrB;EAKA,MAAMC,MAAM,GAAGF,gBAAgB,GAAGD,YAAY,CAACF,mBAAD,EAAsBJ,cAAtB,CAAf,GAAuDQ,SAAtF;EACA,MAAME,MAAM,GAAGV,cAAc,CAACW,SAAf,EAAf;EACA,OAAO,IAAIC,cAAJ,CAAmB;IAChBC,IAAN,CAAWC,UAAX,EAAuB;MAAA;QACnB,MAAM;UAAEC,KAAF;UAASC;QAAT,UAAwBN,MAAM,CAACO,IAAP,EAA9B;;QACA,IAAID,IAAJ,EAAU;UACNF,UAAU,CAACI,OAAX,CAAoB,OAApB;;UACA,IAAIX,gBAAJ,EAAsB;YAClB,MAAMY,QAAQ,GAAGjB,aAAa,OAAOO,MAAP,CAA9B;YACAK,UAAU,CAACI,OAAX,CAAoB,GAAEb,oBAAqB,IAAGc,QAAS,MAAvD;YACAL,UAAU,CAACI,OAAX,CAAoB,MAApB;UACH;;UACDJ,UAAU,CAACM,KAAX;QACH,CARD,MASK;UACDN,UAAU,CAACI,OAAX,CAAoB,GAAE,CAACf,iBAAiB,CAACY,KAAD,CAAjB,IAA4B,CAA7B,EAAgCM,QAAhC,CAAyC,EAAzC,CAA6C,OAAMN,KAAM,MAA/E;QACH;MAbkB;IActB;;EAfqB,CAAnB,CAAP;AAiBH,CA1BM"},"metadata":{},"sourceType":"module"}