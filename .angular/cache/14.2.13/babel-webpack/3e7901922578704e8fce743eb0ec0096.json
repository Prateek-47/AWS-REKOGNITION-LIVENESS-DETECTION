{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated\n *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the\n *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>\n *          <p>You can use CloudWatch Logs to:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <b>Monitor logs from EC2 instances in real-time</b>: You\n *           can use CloudWatch Logs to monitor applications and systems using log data. For example,\n *           CloudWatch Logs can track the number of errors that occur in your application logs and\n *           send you a notification whenever the rate of errors exceeds a threshold that you specify.\n *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For\n *           example, you can monitor application logs for specific literal terms (such as\n *           \"NullReferenceException\") or count the number of occurrences of a literal term at a\n *           particular position in log data (such as \"404\" status codes in an Apache access log). When\n *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch\n *           metric that you specify.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Monitor AWS CloudTrail logged events</b>: You can\n *           create alarms in CloudWatch and receive notifications of particular API activity as\n *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Archive log data</b>: You can use CloudWatch Logs to\n *           store your log data in highly durable storage. You can change the log retention setting so\n *           that any log events older than this setting are automatically deleted. The CloudWatch Logs\n *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host\n *           and into the log service. You can then access the raw log data when you need it.</p>\n *             </li>\n *          </ul>\n */\n\nvar CloudWatchLogsClient =\n/** @class */\nfunction (_super) {\n  __extends(CloudWatchLogsClient, _super);\n\n  function CloudWatchLogsClient(configuration) {\n    var _this = this;\n\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n\n    var _config_1 = resolveRegionConfig(_config_0);\n\n    var _config_2 = resolveEndpointsConfig(_config_1);\n\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n\n    var _config_4 = resolveRetryConfig(_config_3);\n\n    var _config_5 = resolveHostHeaderConfig(_config_4);\n\n    var _config_6 = resolveUserAgentConfig(_config_5);\n\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n\n    return _this;\n  }\n\n  CloudWatchLogsClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  return CloudWatchLogsClient;\n}(__Client);\n\nexport { CloudWatchLogsClient };","map":{"version":3,"names":["__assign","__extends","ClientDefaultValues","__ClientDefaultValues","resolveEndpointsConfig","resolveRegionConfig","getContentLengthPlugin","getHostHeaderPlugin","resolveHostHeaderConfig","getLoggerPlugin","getRetryPlugin","resolveRetryConfig","getAwsAuthPlugin","resolveAwsAuthConfig","getUserAgentPlugin","resolveUserAgentConfig","Client","__Client","CloudWatchLogsClient","_super","configuration","_this","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","call","config","middlewareStack","use","prototype","destroy"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-cloudwatch-logs/dist/es/CloudWatchLogsClient.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig, } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\n/**\n * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated\n *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the\n *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>\n *          <p>You can use CloudWatch Logs to:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <b>Monitor logs from EC2 instances in real-time</b>: You\n *           can use CloudWatch Logs to monitor applications and systems using log data. For example,\n *           CloudWatch Logs can track the number of errors that occur in your application logs and\n *           send you a notification whenever the rate of errors exceeds a threshold that you specify.\n *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For\n *           example, you can monitor application logs for specific literal terms (such as\n *           \"NullReferenceException\") or count the number of occurrences of a literal term at a\n *           particular position in log data (such as \"404\" status codes in an Apache access log). When\n *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch\n *           metric that you specify.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Monitor AWS CloudTrail logged events</b>: You can\n *           create alarms in CloudWatch and receive notifications of particular API activity as\n *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Archive log data</b>: You can use CloudWatch Logs to\n *           store your log data in highly durable storage. You can change the log retention setting so\n *           that any log events older than this setting are automatically deleted. The CloudWatch Logs\n *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host\n *           and into the log service. You can then access the raw log data when you need it.</p>\n *             </li>\n *          </ul>\n */\nvar CloudWatchLogsClient = /** @class */ (function (_super) {\n    __extends(CloudWatchLogsClient, _super);\n    function CloudWatchLogsClient(configuration) {\n        var _this = this;\n        var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n        var _config_1 = resolveRegionConfig(_config_0);\n        var _config_2 = resolveEndpointsConfig(_config_1);\n        var _config_3 = resolveAwsAuthConfig(_config_2);\n        var _config_4 = resolveRetryConfig(_config_3);\n        var _config_5 = resolveHostHeaderConfig(_config_4);\n        var _config_6 = resolveUserAgentConfig(_config_5);\n        _this = _super.call(this, _config_6) || this;\n        _this.config = _config_6;\n        _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n        _this.middlewareStack.use(getRetryPlugin(_this.config));\n        _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n        _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n        _this.middlewareStack.use(getLoggerPlugin(_this.config));\n        _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n        return _this;\n    }\n    CloudWatchLogsClient.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return CloudWatchLogsClient;\n}(__Client));\nexport { CloudWatchLogsClient };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAmB,IAAIC,qBAAhC,QAA6D,iBAA7D;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA6D,0BAA7D;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,mBAAT,EAA8BC,uBAA9B,QAA8D,iCAA9D;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,2BAAnD;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAwD,6BAAxD;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA4D,gCAA5D;AACA,SAASC,MAAM,IAAIC,QAAnB,QAAoC,wBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACxDlB,SAAS,CAACiB,oBAAD,EAAuBC,MAAvB,CAAT;;EACA,SAASD,oBAAT,CAA8BE,aAA9B,EAA6C;IACzC,IAAIC,KAAK,GAAG,IAAZ;;IACA,IAAIC,SAAS,GAAGtB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKG,qBAAL,CAAT,EAAsCiB,aAAtC,CAAxB;;IACA,IAAIG,SAAS,GAAGlB,mBAAmB,CAACiB,SAAD,CAAnC;;IACA,IAAIE,SAAS,GAAGpB,sBAAsB,CAACmB,SAAD,CAAtC;;IACA,IAAIE,SAAS,GAAGZ,oBAAoB,CAACW,SAAD,CAApC;;IACA,IAAIE,SAAS,GAAGf,kBAAkB,CAACc,SAAD,CAAlC;;IACA,IAAIE,SAAS,GAAGnB,uBAAuB,CAACkB,SAAD,CAAvC;;IACA,IAAIE,SAAS,GAAGb,sBAAsB,CAACY,SAAD,CAAtC;;IACAN,KAAK,GAAGF,MAAM,CAACU,IAAP,CAAY,IAAZ,EAAkBD,SAAlB,KAAgC,IAAxC;IACAP,KAAK,CAACS,MAAN,GAAeF,SAAf;;IACAP,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0BpB,gBAAgB,CAACS,KAAK,CAACS,MAAP,CAA1C;;IACAT,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0BtB,cAAc,CAACW,KAAK,CAACS,MAAP,CAAxC;;IACAT,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0B1B,sBAAsB,CAACe,KAAK,CAACS,MAAP,CAAhD;;IACAT,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0BzB,mBAAmB,CAACc,KAAK,CAACS,MAAP,CAA7C;;IACAT,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0BvB,eAAe,CAACY,KAAK,CAACS,MAAP,CAAzC;;IACAT,KAAK,CAACU,eAAN,CAAsBC,GAAtB,CAA0BlB,kBAAkB,CAACO,KAAK,CAACS,MAAP,CAA5C;;IACA,OAAOT,KAAP;EACH;;EACDH,oBAAoB,CAACe,SAArB,CAA+BC,OAA/B,GAAyC,YAAY;IACjDf,MAAM,CAACc,SAAP,CAAiBC,OAAjB,CAAyBL,IAAzB,CAA8B,IAA9B;EACH,CAFD;;EAGA,OAAOX,oBAAP;AACH,CAzByC,CAyBxCD,QAzBwC,CAA1C;;AA0BA,SAASC,oBAAT"},"metadata":{},"sourceType":"module"}