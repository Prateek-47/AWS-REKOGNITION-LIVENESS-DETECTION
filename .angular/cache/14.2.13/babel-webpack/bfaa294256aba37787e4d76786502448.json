{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { Logger } from '@aws-amplify/core';\nimport { createMultipartUpload, uploadPart, listObjectsV2, listParts, completeMultipartUpload, abortMultipartUpload } from '../AwsClients/S3';\nimport { isCancelError, CANCELED_ERROR_MESSAGE } from '../AwsClients/S3/utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE } from '../common/S3ClientUtils';\nimport { byteLength, isFile } from '../common/StorageUtils';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nvar logger = new Logger('AWSS3UploadTask');\nexport var AWSS3UploadTaskState;\n\n(function (AWSS3UploadTaskState) {\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"INIT\"] = 0] = \"INIT\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"IN_PROGRESS\"] = 1] = \"IN_PROGRESS\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"PAUSED\"] = 2] = \"PAUSED\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"COMPLETED\"] = 4] = \"COMPLETED\";\n})(AWSS3UploadTaskState || (AWSS3UploadTaskState = {}));\n\nexport var TaskEvents;\n\n(function (TaskEvents) {\n  TaskEvents[\"CANCEL\"] = \"cancel\";\n  TaskEvents[\"UPLOAD_COMPLETE\"] = \"uploadComplete\";\n  TaskEvents[\"UPLOAD_PROGRESS\"] = \"uploadPartProgress\";\n  TaskEvents[\"ERROR\"] = \"error\";\n})(TaskEvents || (TaskEvents = {}));\n\nfunction comparePartNumber(a, b) {\n  return a.PartNumber - b.PartNumber;\n}\n\nvar AWSS3UploadTask =\n/** @class */\nfunction () {\n  function AWSS3UploadTask(_a) {\n    var s3Config = _a.s3Config,\n        file = _a.file,\n        emitter = _a.emitter,\n        storage = _a.storage,\n        params = _a.params,\n        level = _a.level,\n        prefixPromise = _a.prefixPromise;\n    this.queueSize = DEFAULT_QUEUE_SIZE;\n    this.partSize = DEFAULT_PART_SIZE;\n    this.inProgress = [];\n    this.completedParts = [];\n    this.queued = [];\n    this.bytesUploaded = 0;\n    this.totalBytes = 0;\n    this.state = AWSS3UploadTaskState.INIT;\n    this.prefixPromise = prefixPromise;\n    this.s3Config = s3Config;\n    this.storage = storage;\n    this.storageSync = Promise.resolve();\n\n    if (typeof this.storage['sync'] === 'function') {\n      this.storageSync = this.storage['sync']();\n    }\n\n    this.params = params;\n    this.file = file;\n    this.totalBytes = this.file.size;\n    this.bytesUploaded = 0;\n    this.emitter = emitter;\n    this.queued = [];\n    this.fileId = this._getFileId(level);\n\n    this._validateParams(); // event emitter will re-throw an error if an event emits an error unless there's a listener, attaching a no-op\n    // function to it unless user adds their own onError callback\n\n\n    this.emitter.on(TaskEvents.ERROR, function () {});\n  }\n\n  Object.defineProperty(AWSS3UploadTask.prototype, \"percent\", {\n    get: function () {\n      return this.bytesUploaded / this.totalBytes * 100;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AWSS3UploadTask.prototype, \"isInProgress\", {\n    get: function () {\n      return this.state === AWSS3UploadTaskState.IN_PROGRESS;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AWSS3UploadTask.prototype._listSingleFile = function (_a) {\n    var key = _a.key,\n        bucket = _a.bucket;\n    return __awaiter(this, void 0, void 0, function () {\n      var objectKeyPrefix, _b, Contents, obj;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 1:\n            objectKeyPrefix = _c.sent();\n            return [4\n            /*yield*/\n            , listObjectsV2(this.s3Config, {\n              Bucket: bucket,\n              Prefix: objectKeyPrefix + key\n            })];\n\n          case 2:\n            _b = _c.sent().Contents, Contents = _b === void 0 ? [] : _b;\n            obj = Contents.find(function (o) {\n              return o.Key === \"\".concat(objectKeyPrefix).concat(key);\n            });\n            return [2\n            /*return*/\n            , obj];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._getFileId = function (level) {\n    // We should check if it's a File first because File is also instance of a Blob\n    if (isFile(this.file)) {\n      return [this.file.name, this.file.lastModified, this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');\n    } else {\n      return [this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');\n    }\n  };\n\n  AWSS3UploadTask.prototype._findCachedUploadParts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests, cachedUploadFileData, _a, Parts, _b, _c;\n\n      var _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._listCachedUploadTasks()];\n\n          case 1:\n            uploadRequests = _e.sent();\n\n            if (Object.keys(uploadRequests).length === 0 || !Object.prototype.hasOwnProperty.call(uploadRequests, this.fileId)) {\n              return [2\n              /*return*/\n              , {\n                parts: [],\n                uploadId: null\n              }];\n            }\n\n            cachedUploadFileData = uploadRequests[this.fileId];\n            cachedUploadFileData.lastTouched = Date.now();\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            _b = listParts;\n            _c = [this.s3Config];\n            _d = {\n              Bucket: this.params.Bucket\n            };\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 2:\n            return [4\n            /*yield*/\n            , _b.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d.UploadId = cachedUploadFileData.uploadId, _d)]))];\n\n          case 3:\n            _a = _e.sent().Parts, Parts = _a === void 0 ? [] : _a;\n            return [2\n            /*return*/\n            , {\n              parts: Parts,\n              uploadId: cachedUploadFileData.uploadId\n            }];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._emitEvent = function (event, payload) {\n    this.emitter.emit(event, payload);\n  };\n\n  AWSS3UploadTask.prototype._validateParams = function () {\n    if (this.totalBytes > MAX_OBJECT_SIZE) {\n      throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytes, \" Bytes\"));\n    }\n  };\n\n  AWSS3UploadTask.prototype._listCachedUploadTasks = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tasks;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.storageSync];\n\n          case 1:\n            _a.sent();\n\n            tasks = this.storage.getItem(UPLOADS_STORAGE_KEY) || '{}';\n            return [2\n            /*return*/\n            , JSON.parse(tasks)];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._cache = function (fileMetadata) {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._listCachedUploadTasks()];\n\n          case 1:\n            uploadRequests = _a.sent();\n            uploadRequests[this.fileId] = fileMetadata;\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._isCached = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = Object.prototype.hasOwnProperty).call;\n            return [4\n            /*yield*/\n            , this._listCachedUploadTasks()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.apply(_a, [_c.sent(), this.fileId])];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._removeFromCache = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._listCachedUploadTasks()];\n\n          case 1:\n            uploadRequests = _a.sent();\n            delete uploadRequests[this.fileId];\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._onPartUploadCompletion = function (_a) {\n    var eTag = _a.eTag,\n        partNumber = _a.partNumber,\n        chunk = _a.chunk;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        this.completedParts.push({\n          ETag: eTag,\n          PartNumber: partNumber\n        });\n        this.bytesUploaded += byteLength(chunk);\n\n        this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n          loaded: this.bytesUploaded,\n          total: this.totalBytes\n        }); // Remove the completed item from the inProgress array\n\n\n        this.inProgress = this.inProgress.filter(function (job) {\n          return job.uploadPartInput.PartNumber !== partNumber;\n        });\n        if (this.queued.length && this.state !== AWSS3UploadTaskState.PAUSED) this._startNextPart();\n        if (this._isDone()) this._completeUpload();\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._completeUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, err_1;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _d.trys.push([0, 4,, 5]);\n\n            _a = completeMultipartUpload;\n            _b = [this.s3Config];\n            _c = {\n              Bucket: this.params.Bucket\n            };\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, _b.concat([(_c.Key = _d.sent() + this.params.Key, _c.UploadId = this.uploadId, _c.MultipartUpload = {\n              // Parts are not always completed in order, we need to manually sort them\n              Parts: __spreadArray([], __read(this.completedParts), false).sort(comparePartNumber)\n            }, _c)]))];\n\n          case 2:\n            _d.sent();\n\n            return [4\n            /*yield*/\n            , this._verifyFileSize()];\n\n          case 3:\n            _d.sent();\n\n            this._emitEvent(TaskEvents.UPLOAD_COMPLETE, {\n              key: this.params.Key\n            });\n\n            this._removeFromCache();\n\n            this.state = AWSS3UploadTaskState.COMPLETED;\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_1 = _d.sent();\n            logger.error('error completing upload', err_1);\n\n            this._emitEvent(TaskEvents.ERROR, err_1);\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._makeUploadPartRequest = function (input, abortSignal) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res, _a, _b, _c, err_2;\n\n      var _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 4,, 5]);\n\n            _a = uploadPart;\n            _b = [__assign(__assign({}, this.s3Config), {\n              abortSignal: abortSignal\n            })];\n            _c = [__assign({}, input)];\n            _d = {};\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d)]))]))];\n\n          case 2:\n            res = _e.sent();\n            return [4\n            /*yield*/\n            , this._onPartUploadCompletion({\n              eTag: res.ETag,\n              partNumber: input.PartNumber,\n              chunk: input.Body\n            })];\n\n          case 3:\n            _e.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            err_2 = _e.sent();\n\n            if (this.state === AWSS3UploadTaskState.PAUSED) {\n              logger.log('upload paused');\n            } else if (this.state === AWSS3UploadTaskState.CANCELLED) {\n              logger.log('upload aborted');\n            } else {\n              logger.error('error starting next part of upload: ', err_2);\n            } // xhr transfer handlers' cancel will also throw an error, however we don't need to emit an event in that case as it's an\n            // expected behavior\n\n\n            if (!isCancelError(err_2) && err_2.message !== CANCELED_ERROR_MESSAGE) {\n              this._emitEvent(TaskEvents.ERROR, err_2);\n\n              this.pause();\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._startNextPart = function () {\n    if (this.queued.length > 0 && this.state !== AWSS3UploadTaskState.PAUSED) {\n      var abortController = new AbortController();\n      var nextPart = this.queued.shift();\n      this.inProgress.push({\n        uploadPartInput: nextPart,\n        s3Request: this._makeUploadPartRequest(nextPart, abortController.signal),\n        abortController: abortController\n      });\n    }\n  };\n  /**\n   * Verify on S3 side that the file size matches the one on the client side.\n   *\n   * @async\n   * @throws throws an error if the file size does not match between local copy of the file and the file on s3.\n   */\n\n\n  AWSS3UploadTask.prototype._verifyFileSize = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var valid, obj, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._listSingleFile({\n              key: this.params.Key,\n              bucket: this.params.Bucket\n            })];\n\n          case 1:\n            obj = _a.sent();\n            valid = Boolean(obj && obj.Size === this.file.size);\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_1 = _a.sent();\n            logger.log('Could not get file on s3 for size matching: ', e_1); // Don't gate verification on auth or other errors\n            // unrelated to file size verification\n\n            return [2\n            /*return*/\n            ];\n\n          case 3:\n            if (!valid) {\n              throw new Error('File size does not match between local file and file on s3');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._isDone = function () {\n    return !this.queued.length && !this.inProgress.length && this.bytesUploaded === this.totalBytes;\n  };\n\n  AWSS3UploadTask.prototype._createParts = function () {\n    var size = this.file.size;\n    var parts = [];\n\n    for (var bodyStart = 0; bodyStart < size;) {\n      var bodyEnd = Math.min(bodyStart + this.partSize, size);\n      parts.push({\n        Body: this.file.slice(bodyStart, bodyEnd),\n        Key: this.params.Key,\n        Bucket: this.params.Bucket,\n        PartNumber: parts.length + 1,\n        UploadId: this.uploadId\n      });\n      bodyStart += this.partSize;\n    }\n\n    return parts;\n  };\n\n  AWSS3UploadTask.prototype._initCachedUploadParts = function (cachedParts) {\n    this.bytesUploaded += cachedParts.reduce(function (acc, part) {\n      return acc + part.Size;\n    }, 0); // Find the set of part numbers that have already been uploaded\n\n    var uploadedPartNumSet = new Set(cachedParts.map(function (part) {\n      return part.PartNumber;\n    }));\n    this.queued = this.queued.filter(function (part) {\n      return !uploadedPartNumSet.has(part.PartNumber);\n    });\n    this.completedParts = cachedParts.map(function (part) {\n      return {\n        PartNumber: part.PartNumber,\n        ETag: part.ETag\n      };\n    });\n\n    this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytes\n    });\n  };\n\n  AWSS3UploadTask.prototype._initMultipartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res, _a, _b, _c;\n\n      var _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = createMultipartUpload;\n            _b = [this.s3Config];\n            _c = [__assign({}, this.params)];\n            _d = {};\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d)]))]))];\n\n          case 2:\n            res = _e.sent();\n\n            this._cache({\n              uploadId: res.UploadId,\n              lastTouched: Date.now(),\n              bucket: this.params.Bucket,\n              key: this.params.Key,\n              fileName: this.file instanceof File ? this.file.name : ''\n            });\n\n            return [2\n            /*return*/\n            , res.UploadId];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._initializeUploadTask = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, parts, uploadId, uploadId, err_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.state = AWSS3UploadTaskState.IN_PROGRESS;\n            this.partSize = calculatePartSize(this.totalBytes);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , this._isCached()];\n\n          case 2:\n            if (!_b.sent()) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._findCachedUploadParts()];\n\n          case 3:\n            _a = _b.sent(), parts = _a.parts, uploadId = _a.uploadId;\n            this.uploadId = uploadId;\n            this.queued = this._createParts();\n\n            this._initCachedUploadParts(parts);\n\n            if (this._isDone()) {\n              this._completeUpload();\n            } else {\n              this._startUpload();\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            if (!!this.uploadId) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._initMultipartUpload()];\n\n          case 5:\n            uploadId = _b.sent();\n            this.uploadId = uploadId;\n            this.queued = this._createParts();\n\n            this._startUpload();\n\n            _b.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            err_3 = _b.sent();\n\n            if (!isCancelError(err_3)) {\n              logger.error('Error initializing the upload task', err_3);\n\n              this._emitEvent(TaskEvents.ERROR, err_3);\n            }\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype.resume = function () {\n    if (this.state === AWSS3UploadTaskState.CANCELLED) {\n      logger.warn('This task has already been cancelled');\n    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n      logger.warn('This task has already been completed');\n    } else if (this.state === AWSS3UploadTaskState.IN_PROGRESS) {\n      logger.warn('Upload task already in progress'); // first time running resume, find any cached parts on s3 or start a new multipart upload request before\n      // starting the upload\n    } else if (!this.uploadId) {\n      this._initializeUploadTask();\n    } else {\n      this._startUpload();\n    }\n  };\n\n  AWSS3UploadTask.prototype._startUpload = function () {\n    this.state = AWSS3UploadTaskState.IN_PROGRESS;\n\n    for (var i = 0; i < this.queueSize; i++) {\n      this._startNextPart();\n    }\n  };\n\n  AWSS3UploadTask.prototype._cancel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, err_4;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!(this.state === AWSS3UploadTaskState.CANCELLED)) return [3\n            /*break*/\n            , 1];\n            logger.warn('This task has already been cancelled');\n            return [2\n            /*return*/\n            , false];\n\n          case 1:\n            if (!(this.state === AWSS3UploadTaskState.COMPLETED)) return [3\n            /*break*/\n            , 2];\n            logger.warn('This task has already been completed');\n            return [2\n            /*return*/\n            , false];\n\n          case 2:\n            this.pause();\n            this.queued = [];\n            this.completedParts = [];\n            this.bytesUploaded = 0;\n            this.state = AWSS3UploadTaskState.CANCELLED;\n            _d.label = 3;\n\n          case 3:\n            _d.trys.push([3, 7,, 8]);\n\n            _a = abortMultipartUpload;\n            _b = [this.s3Config];\n            _c = {\n              Bucket: this.params.Bucket\n            };\n            return [4\n            /*yield*/\n            , this.prefixPromise];\n\n          case 4:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, _b.concat([(_c.Key = _d.sent() + this.params.Key, _c.UploadId = this.uploadId, _c)]))];\n\n          case 5:\n            _d.sent();\n\n            return [4\n            /*yield*/\n            , this._removeFromCache()];\n\n          case 6:\n            _d.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 7:\n            err_4 = _d.sent();\n            logger.error('Error cancelling upload task', err_4);\n            return [2\n            /*return*/\n            , false];\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * pause this particular upload task\n   **/\n\n\n  AWSS3UploadTask.prototype.pause = function () {\n    var _a;\n\n    if (this.state === AWSS3UploadTaskState.CANCELLED) {\n      logger.warn('This task has already been cancelled');\n    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n      logger.warn('This task has already been completed');\n    } else if (this.state === AWSS3UploadTaskState.PAUSED) {\n      logger.warn('This task is already paused');\n    }\n\n    this.state = AWSS3UploadTaskState.PAUSED; // Abort the part request immediately\n    // Add the inProgress parts back to pending\n\n    var removedInProgressReq = this.inProgress.splice(0, this.inProgress.length);\n    removedInProgressReq.forEach(function (req) {\n      req.abortController.abort();\n    }); // Put all removed in progress parts back into the queue\n\n    (_a = this.queued).unshift.apply(_a, __spreadArray([], __read(removedInProgressReq.map(function (req) {\n      return req.uploadPartInput;\n    })), false));\n  };\n\n  return AWSS3UploadTask;\n}();\n\nexport { AWSS3UploadTask };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArray","to","from","pack","l","Array","slice","concat","Logger","createMultipartUpload","uploadPart","listObjectsV2","listParts","completeMultipartUpload","abortMultipartUpload","isCancelError","CANCELED_ERROR_MESSAGE","calculatePartSize","DEFAULT_PART_SIZE","DEFAULT_QUEUE_SIZE","MAX_OBJECT_SIZE","byteLength","isFile","UPLOADS_STORAGE_KEY","logger","AWSS3UploadTaskState","TaskEvents","comparePartNumber","a","b","PartNumber","AWSS3UploadTask","_a","s3Config","file","emitter","storage","params","level","prefixPromise","queueSize","partSize","inProgress","completedParts","queued","bytesUploaded","totalBytes","state","INIT","storageSync","size","fileId","_getFileId","_validateParams","on","ERROR","defineProperty","get","enumerable","configurable","IN_PROGRESS","_listSingleFile","key","bucket","objectKeyPrefix","_b","Contents","obj","_c","Bucket","Prefix","find","Key","name","lastModified","type","join","_findCachedUploadParts","uploadRequests","cachedUploadFileData","Parts","_d","_e","_listCachedUploadTasks","keys","parts","uploadId","lastTouched","Date","now","setItem","JSON","stringify","UploadId","_emitEvent","event","payload","emit","Error","tasks","getItem","parse","_cache","fileMetadata","_isCached","_removeFromCache","_onPartUploadCompletion","eTag","partNumber","chunk","ETag","UPLOAD_PROGRESS","loaded","total","filter","job","uploadPartInput","PAUSED","_startNextPart","_isDone","_completeUpload","err_1","MultipartUpload","sort","_verifyFileSize","UPLOAD_COMPLETE","COMPLETED","_makeUploadPartRequest","input","abortSignal","res","err_2","Body","log","CANCELLED","message","pause","abortController","AbortController","nextPart","shift","s3Request","signal","valid","e_1","Boolean","Size","_createParts","bodyStart","bodyEnd","Math","min","_initCachedUploadParts","cachedParts","reduce","acc","part","uploadedPartNumSet","Set","map","has","_initMultipartUpload","fileName","File","_initializeUploadTask","err_3","_startUpload","resume","warn","_cancel","err_4","removedInProgressReq","splice","forEach","req","abort","unshift"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3UploadTask.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Logger } from '@aws-amplify/core';\nimport { createMultipartUpload, uploadPart, listObjectsV2, listParts, completeMultipartUpload, abortMultipartUpload, } from '../AwsClients/S3';\nimport { isCancelError, CANCELED_ERROR_MESSAGE } from '../AwsClients/S3/utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, } from '../common/S3ClientUtils';\nimport { byteLength, isFile } from '../common/StorageUtils';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nvar logger = new Logger('AWSS3UploadTask');\nexport var AWSS3UploadTaskState;\n(function (AWSS3UploadTaskState) {\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"INIT\"] = 0] = \"INIT\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"IN_PROGRESS\"] = 1] = \"IN_PROGRESS\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"PAUSED\"] = 2] = \"PAUSED\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"COMPLETED\"] = 4] = \"COMPLETED\";\n})(AWSS3UploadTaskState || (AWSS3UploadTaskState = {}));\nexport var TaskEvents;\n(function (TaskEvents) {\n    TaskEvents[\"CANCEL\"] = \"cancel\";\n    TaskEvents[\"UPLOAD_COMPLETE\"] = \"uploadComplete\";\n    TaskEvents[\"UPLOAD_PROGRESS\"] = \"uploadPartProgress\";\n    TaskEvents[\"ERROR\"] = \"error\";\n})(TaskEvents || (TaskEvents = {}));\nfunction comparePartNumber(a, b) {\n    return a.PartNumber - b.PartNumber;\n}\nvar AWSS3UploadTask = /** @class */ (function () {\n    function AWSS3UploadTask(_a) {\n        var s3Config = _a.s3Config, file = _a.file, emitter = _a.emitter, storage = _a.storage, params = _a.params, level = _a.level, prefixPromise = _a.prefixPromise;\n        this.queueSize = DEFAULT_QUEUE_SIZE;\n        this.partSize = DEFAULT_PART_SIZE;\n        this.inProgress = [];\n        this.completedParts = [];\n        this.queued = [];\n        this.bytesUploaded = 0;\n        this.totalBytes = 0;\n        this.state = AWSS3UploadTaskState.INIT;\n        this.prefixPromise = prefixPromise;\n        this.s3Config = s3Config;\n        this.storage = storage;\n        this.storageSync = Promise.resolve();\n        if (typeof this.storage['sync'] === 'function') {\n            this.storageSync = this.storage['sync']();\n        }\n        this.params = params;\n        this.file = file;\n        this.totalBytes = this.file.size;\n        this.bytesUploaded = 0;\n        this.emitter = emitter;\n        this.queued = [];\n        this.fileId = this._getFileId(level);\n        this._validateParams();\n        // event emitter will re-throw an error if an event emits an error unless there's a listener, attaching a no-op\n        // function to it unless user adds their own onError callback\n        this.emitter.on(TaskEvents.ERROR, function () { });\n    }\n    Object.defineProperty(AWSS3UploadTask.prototype, \"percent\", {\n        get: function () {\n            return (this.bytesUploaded / this.totalBytes) * 100;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AWSS3UploadTask.prototype, \"isInProgress\", {\n        get: function () {\n            return this.state === AWSS3UploadTaskState.IN_PROGRESS;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AWSS3UploadTask.prototype._listSingleFile = function (_a) {\n        var key = _a.key, bucket = _a.bucket;\n        return __awaiter(this, void 0, void 0, function () {\n            var objectKeyPrefix, _b, Contents, obj;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.prefixPromise];\n                    case 1:\n                        objectKeyPrefix = _c.sent();\n                        return [4 /*yield*/, listObjectsV2(this.s3Config, {\n                                Bucket: bucket,\n                                Prefix: objectKeyPrefix + key,\n                            })];\n                    case 2:\n                        _b = (_c.sent()).Contents, Contents = _b === void 0 ? [] : _b;\n                        obj = Contents.find(function (o) { return o.Key === \"\".concat(objectKeyPrefix).concat(key); });\n                        return [2 /*return*/, obj];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._getFileId = function (level) {\n        // We should check if it's a File first because File is also instance of a Blob\n        if (isFile(this.file)) {\n            return [\n                this.file.name,\n                this.file.lastModified,\n                this.file.size,\n                this.file.type,\n                this.params.Bucket,\n                level,\n                this.params.Key,\n            ].join('-');\n        }\n        else {\n            return [\n                this.file.size,\n                this.file.type,\n                this.params.Bucket,\n                level,\n                this.params.Key,\n            ].join('-');\n        }\n    };\n    AWSS3UploadTask.prototype._findCachedUploadParts = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests, cachedUploadFileData, _a, Parts, _b, _c;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _e.sent();\n                        if (Object.keys(uploadRequests).length === 0 ||\n                            !Object.prototype.hasOwnProperty.call(uploadRequests, this.fileId)) {\n                            return [2 /*return*/, { parts: [], uploadId: null }];\n                        }\n                        cachedUploadFileData = uploadRequests[this.fileId];\n                        cachedUploadFileData.lastTouched = Date.now();\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        _b = listParts;\n                        _c = [this.s3Config];\n                        _d = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 2: return [4 /*yield*/, _b.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key,\n                                _d.UploadId = cachedUploadFileData.uploadId,\n                                _d)]))];\n                    case 3:\n                        _a = (_e.sent()).Parts, Parts = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, {\n                                parts: Parts,\n                                uploadId: cachedUploadFileData.uploadId,\n                            }];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._emitEvent = function (event, payload) {\n        this.emitter.emit(event, payload);\n    };\n    AWSS3UploadTask.prototype._validateParams = function () {\n        if (this.totalBytes > MAX_OBJECT_SIZE) {\n            throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytes, \" Bytes\"));\n        }\n    };\n    AWSS3UploadTask.prototype._listCachedUploadTasks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tasks;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.storageSync];\n                    case 1:\n                        _a.sent();\n                        tasks = this.storage.getItem(UPLOADS_STORAGE_KEY) || '{}';\n                        return [2 /*return*/, JSON.parse(tasks)];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._cache = function (fileMetadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _a.sent();\n                        uploadRequests[this.fileId] = fileMetadata;\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._isCached = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = Object.prototype.hasOwnProperty).call;\n                        return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent(), this.fileId])];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._removeFromCache = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _a.sent();\n                        delete uploadRequests[this.fileId];\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._onPartUploadCompletion = function (_a) {\n        var eTag = _a.eTag, partNumber = _a.partNumber, chunk = _a.chunk;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                this.completedParts.push({\n                    ETag: eTag,\n                    PartNumber: partNumber,\n                });\n                this.bytesUploaded += byteLength(chunk);\n                this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n                    loaded: this.bytesUploaded,\n                    total: this.totalBytes,\n                });\n                // Remove the completed item from the inProgress array\n                this.inProgress = this.inProgress.filter(function (job) { return job.uploadPartInput.PartNumber !== partNumber; });\n                if (this.queued.length && this.state !== AWSS3UploadTaskState.PAUSED)\n                    this._startNextPart();\n                if (this._isDone())\n                    this._completeUpload();\n                return [2 /*return*/];\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._completeUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, err_1;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _d.trys.push([0, 4, , 5]);\n                        _a = completeMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = (_d.sent()) + this.params.Key,\n                                _c.UploadId = this.uploadId,\n                                _c.MultipartUpload = {\n                                    // Parts are not always completed in order, we need to manually sort them\n                                    Parts: __spreadArray([], __read(this.completedParts), false).sort(comparePartNumber),\n                                },\n                                _c)]))];\n                    case 2:\n                        _d.sent();\n                        return [4 /*yield*/, this._verifyFileSize()];\n                    case 3:\n                        _d.sent();\n                        this._emitEvent(TaskEvents.UPLOAD_COMPLETE, {\n                            key: this.params.Key,\n                        });\n                        this._removeFromCache();\n                        this.state = AWSS3UploadTaskState.COMPLETED;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_1 = _d.sent();\n                        logger.error('error completing upload', err_1);\n                        this._emitEvent(TaskEvents.ERROR, err_1);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._makeUploadPartRequest = function (input, abortSignal) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, _c, err_2;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 4, , 5]);\n                        _a = uploadPart;\n                        _b = [__assign(__assign({}, this.s3Config), { abortSignal: abortSignal })];\n                        _c = [__assign({}, input)];\n                        _d = {};\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key, _d)]))]))];\n                    case 2:\n                        res = _e.sent();\n                        return [4 /*yield*/, this._onPartUploadCompletion({\n                                eTag: res.ETag,\n                                partNumber: input.PartNumber,\n                                chunk: input.Body,\n                            })];\n                    case 3:\n                        _e.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_2 = _e.sent();\n                        if (this.state === AWSS3UploadTaskState.PAUSED) {\n                            logger.log('upload paused');\n                        }\n                        else if (this.state === AWSS3UploadTaskState.CANCELLED) {\n                            logger.log('upload aborted');\n                        }\n                        else {\n                            logger.error('error starting next part of upload: ', err_2);\n                        }\n                        // xhr transfer handlers' cancel will also throw an error, however we don't need to emit an event in that case as it's an\n                        // expected behavior\n                        if (!isCancelError(err_2) && err_2.message !== CANCELED_ERROR_MESSAGE) {\n                            this._emitEvent(TaskEvents.ERROR, err_2);\n                            this.pause();\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._startNextPart = function () {\n        if (this.queued.length > 0 && this.state !== AWSS3UploadTaskState.PAUSED) {\n            var abortController = new AbortController();\n            var nextPart = this.queued.shift();\n            this.inProgress.push({\n                uploadPartInput: nextPart,\n                s3Request: this._makeUploadPartRequest(nextPart, abortController.signal),\n                abortController: abortController,\n            });\n        }\n    };\n    /**\n     * Verify on S3 side that the file size matches the one on the client side.\n     *\n     * @async\n     * @throws throws an error if the file size does not match between local copy of the file and the file on s3.\n     */\n    AWSS3UploadTask.prototype._verifyFileSize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var valid, obj, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._listSingleFile({\n                                key: this.params.Key,\n                                bucket: this.params.Bucket,\n                            })];\n                    case 1:\n                        obj = _a.sent();\n                        valid = Boolean(obj && obj.Size === this.file.size);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _a.sent();\n                        logger.log('Could not get file on s3 for size matching: ', e_1);\n                        // Don't gate verification on auth or other errors\n                        // unrelated to file size verification\n                        return [2 /*return*/];\n                    case 3:\n                        if (!valid) {\n                            throw new Error('File size does not match between local file and file on s3');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._isDone = function () {\n        return (!this.queued.length &&\n            !this.inProgress.length &&\n            this.bytesUploaded === this.totalBytes);\n    };\n    AWSS3UploadTask.prototype._createParts = function () {\n        var size = this.file.size;\n        var parts = [];\n        for (var bodyStart = 0; bodyStart < size;) {\n            var bodyEnd = Math.min(bodyStart + this.partSize, size);\n            parts.push({\n                Body: this.file.slice(bodyStart, bodyEnd),\n                Key: this.params.Key,\n                Bucket: this.params.Bucket,\n                PartNumber: parts.length + 1,\n                UploadId: this.uploadId,\n            });\n            bodyStart += this.partSize;\n        }\n        return parts;\n    };\n    AWSS3UploadTask.prototype._initCachedUploadParts = function (cachedParts) {\n        this.bytesUploaded += cachedParts.reduce(function (acc, part) { return acc + part.Size; }, 0);\n        // Find the set of part numbers that have already been uploaded\n        var uploadedPartNumSet = new Set(cachedParts.map(function (part) { return part.PartNumber; }));\n        this.queued = this.queued.filter(function (part) { return !uploadedPartNumSet.has(part.PartNumber); });\n        this.completedParts = cachedParts.map(function (part) { return ({\n            PartNumber: part.PartNumber,\n            ETag: part.ETag,\n        }); });\n        this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n            loaded: this.bytesUploaded,\n            total: this.totalBytes,\n        });\n    };\n    AWSS3UploadTask.prototype._initMultipartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, _c;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = createMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = [__assign({}, this.params)];\n                        _d = {};\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key, _d)]))]))];\n                    case 2:\n                        res = _e.sent();\n                        this._cache({\n                            uploadId: res.UploadId,\n                            lastTouched: Date.now(),\n                            bucket: this.params.Bucket,\n                            key: this.params.Key,\n                            fileName: this.file instanceof File ? this.file.name : '',\n                        });\n                        return [2 /*return*/, res.UploadId];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._initializeUploadTask = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, parts, uploadId, uploadId, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = AWSS3UploadTaskState.IN_PROGRESS;\n                        this.partSize = calculatePartSize(this.totalBytes);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 7, , 8]);\n                        return [4 /*yield*/, this._isCached()];\n                    case 2:\n                        if (!_b.sent()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._findCachedUploadParts()];\n                    case 3:\n                        _a = _b.sent(), parts = _a.parts, uploadId = _a.uploadId;\n                        this.uploadId = uploadId;\n                        this.queued = this._createParts();\n                        this._initCachedUploadParts(parts);\n                        if (this._isDone()) {\n                            this._completeUpload();\n                        }\n                        else {\n                            this._startUpload();\n                        }\n                        return [3 /*break*/, 6];\n                    case 4:\n                        if (!!this.uploadId) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._initMultipartUpload()];\n                    case 5:\n                        uploadId = _b.sent();\n                        this.uploadId = uploadId;\n                        this.queued = this._createParts();\n                        this._startUpload();\n                        _b.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        err_3 = _b.sent();\n                        if (!isCancelError(err_3)) {\n                            logger.error('Error initializing the upload task', err_3);\n                            this._emitEvent(TaskEvents.ERROR, err_3);\n                        }\n                        return [3 /*break*/, 8];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype.resume = function () {\n        if (this.state === AWSS3UploadTaskState.CANCELLED) {\n            logger.warn('This task has already been cancelled');\n        }\n        else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n            logger.warn('This task has already been completed');\n        }\n        else if (this.state === AWSS3UploadTaskState.IN_PROGRESS) {\n            logger.warn('Upload task already in progress');\n            // first time running resume, find any cached parts on s3 or start a new multipart upload request before\n            // starting the upload\n        }\n        else if (!this.uploadId) {\n            this._initializeUploadTask();\n        }\n        else {\n            this._startUpload();\n        }\n    };\n    AWSS3UploadTask.prototype._startUpload = function () {\n        this.state = AWSS3UploadTaskState.IN_PROGRESS;\n        for (var i = 0; i < this.queueSize; i++) {\n            this._startNextPart();\n        }\n    };\n    AWSS3UploadTask.prototype._cancel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, err_4;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!(this.state === AWSS3UploadTaskState.CANCELLED)) return [3 /*break*/, 1];\n                        logger.warn('This task has already been cancelled');\n                        return [2 /*return*/, false];\n                    case 1:\n                        if (!(this.state === AWSS3UploadTaskState.COMPLETED)) return [3 /*break*/, 2];\n                        logger.warn('This task has already been completed');\n                        return [2 /*return*/, false];\n                    case 2:\n                        this.pause();\n                        this.queued = [];\n                        this.completedParts = [];\n                        this.bytesUploaded = 0;\n                        this.state = AWSS3UploadTaskState.CANCELLED;\n                        _d.label = 3;\n                    case 3:\n                        _d.trys.push([3, 7, , 8]);\n                        _a = abortMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 4: return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = (_d.sent()) + this.params.Key,\n                                _c.UploadId = this.uploadId,\n                                _c)]))];\n                    case 5:\n                        _d.sent();\n                        return [4 /*yield*/, this._removeFromCache()];\n                    case 6:\n                        _d.sent();\n                        return [2 /*return*/, true];\n                    case 7:\n                        err_4 = _d.sent();\n                        logger.error('Error cancelling upload task', err_4);\n                        return [2 /*return*/, false];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * pause this particular upload task\n     **/\n    AWSS3UploadTask.prototype.pause = function () {\n        var _a;\n        if (this.state === AWSS3UploadTaskState.CANCELLED) {\n            logger.warn('This task has already been cancelled');\n        }\n        else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n            logger.warn('This task has already been completed');\n        }\n        else if (this.state === AWSS3UploadTaskState.PAUSED) {\n            logger.warn('This task is already paused');\n        }\n        this.state = AWSS3UploadTaskState.PAUSED;\n        // Abort the part request immediately\n        // Add the inProgress parts back to pending\n        var removedInProgressReq = this.inProgress.splice(0, this.inProgress.length);\n        removedInProgressReq.forEach(function (req) {\n            req.abortController.abort();\n        });\n        // Put all removed in progress parts back into the queue\n        (_a = this.queued).unshift.apply(_a, __spreadArray([], __read(removedInProgressReq.map(function (req) { return req.uploadPartInput; })), false));\n    };\n    return AWSS3UploadTask;\n}());\nexport { AWSS3UploadTask };\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACL,KAAV,CAAgBE,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASA,IAAIM,WAAW,GAAI,QAAQ,KAAKA,WAAd,IAA8B,UAAUjB,OAAV,EAAmBkB,IAAnB,EAAyB;EACrE,IAAIC,CAAC,GAAG;IAAEC,KAAK,EAAE,CAAT;IAAYC,IAAI,EAAE,YAAW;MAAE,IAAIjC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc,MAAMA,CAAC,CAAC,CAAD,CAAP;MAAY,OAAOA,CAAC,CAAC,CAAD,CAAR;IAAc,CAAvE;IAAyEkC,IAAI,EAAE,EAA/E;IAAmFC,GAAG,EAAE;EAAxF,CAAR;EAAA,IAAsGC,CAAtG;EAAA,IAAyGC,CAAzG;EAAA,IAA4GrC,CAA5G;EAAA,IAA+GsC,CAA/G;EACA,OAAOA,CAAC,GAAG;IAAEf,IAAI,EAAEgB,IAAI,CAAC,CAAD,CAAZ;IAAiB,SAASA,IAAI,CAAC,CAAD,CAA9B;IAAmC,UAAUA,IAAI,CAAC,CAAD;EAAjD,CAAJ,EAA4D,OAAOC,MAAP,KAAkB,UAAlB,KAAiCF,CAAC,CAACE,MAAM,CAACC,QAAR,CAAD,GAAqB,YAAW;IAAE,OAAO,IAAP;EAAc,CAAjF,CAA5D,EAAgJH,CAAvJ;;EACA,SAASC,IAAT,CAAcpC,CAAd,EAAiB;IAAE,OAAO,UAAUuC,CAAV,EAAa;MAAE,OAAOpB,IAAI,CAAC,CAACnB,CAAD,EAAIuC,CAAJ,CAAD,CAAX;IAAsB,CAA5C;EAA+C;;EAClE,SAASpB,IAAT,CAAcqB,EAAd,EAAkB;IACd,IAAIP,CAAJ,EAAO,MAAM,IAAIQ,SAAJ,CAAc,iCAAd,CAAN;;IACP,OAAON,CAAC,KAAKA,CAAC,GAAG,CAAJ,EAAOK,EAAE,CAAC,CAAD,CAAF,KAAUZ,CAAC,GAAG,CAAd,CAAZ,CAAD,EAAgCA,CAAvC,EAA0C,IAAI;MAC1C,IAAIK,CAAC,GAAG,CAAJ,EAAOC,CAAC,KAAKrC,CAAC,GAAG2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR,GAAYN,CAAC,CAAC,QAAD,CAAb,GAA0BM,EAAE,CAAC,CAAD,CAAF,GAAQN,CAAC,CAAC,OAAD,CAAD,KAAe,CAACrC,CAAC,GAAGqC,CAAC,CAAC,QAAD,CAAN,KAAqBrC,CAAC,CAACS,IAAF,CAAO4B,CAAP,CAArB,EAAgC,CAA/C,CAAR,GAA4DA,CAAC,CAACd,IAAjG,CAAD,IAA2G,CAAC,CAACvB,CAAC,GAAGA,CAAC,CAACS,IAAF,CAAO4B,CAAP,EAAUM,EAAE,CAAC,CAAD,CAAZ,CAAL,EAAuBhB,IAA9I,EAAoJ,OAAO3B,CAAP;MACpJ,IAAIqC,CAAC,GAAG,CAAJ,EAAOrC,CAAX,EAAc2C,EAAE,GAAG,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,EAAY3C,CAAC,CAACiB,KAAd,CAAL;;MACd,QAAQ0B,EAAE,CAAC,CAAD,CAAV;QACI,KAAK,CAAL;QAAQ,KAAK,CAAL;UAAQ3C,CAAC,GAAG2C,EAAJ;UAAQ;;QACxB,KAAK,CAAL;UAAQZ,CAAC,CAACC,KAAF;UAAW,OAAO;YAAEf,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAX;YAAgBhB,IAAI,EAAE;UAAtB,CAAP;;QACnB,KAAK,CAAL;UAAQI,CAAC,CAACC,KAAF;UAAWK,CAAC,GAAGM,EAAE,CAAC,CAAD,CAAN;UAAWA,EAAE,GAAG,CAAC,CAAD,CAAL;UAAU;;QACxC,KAAK,CAAL;UAAQA,EAAE,GAAGZ,CAAC,CAACI,GAAF,CAAMU,GAAN,EAAL;;UAAkBd,CAAC,CAACG,IAAF,CAAOW,GAAP;;UAAc;;QACxC;UACI,IAAI,EAAE7C,CAAC,GAAG+B,CAAC,CAACG,IAAN,EAAYlC,CAAC,GAAGA,CAAC,CAACK,MAAF,GAAW,CAAX,IAAgBL,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAAnC,MAAuDsC,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAhF,CAAJ,EAAwF;YAAEZ,CAAC,GAAG,CAAJ;YAAO;UAAW;;UAC5G,IAAIY,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,KAAgB,CAAC3C,CAAD,IAAO2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAT,IAAgB2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAhD,CAAJ,EAA2D;YAAE+B,CAAC,CAACC,KAAF,GAAUW,EAAE,CAAC,CAAD,CAAZ;YAAiB;UAAQ;;UACtF,IAAIA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeZ,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAA9B,EAAmC;YAAE+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;YAAgBA,CAAC,GAAG2C,EAAJ;YAAQ;UAAQ;;UACrE,IAAI3C,CAAC,IAAI+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAApB,EAAyB;YAAE+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;;YAAgB+B,CAAC,CAACI,GAAF,CAAMW,IAAN,CAAWH,EAAX;;YAAgB;UAAQ;;UACnE,IAAI3C,CAAC,CAAC,CAAD,CAAL,EAAU+B,CAAC,CAACI,GAAF,CAAMU,GAAN;;UACVd,CAAC,CAACG,IAAF,CAAOW,GAAP;;UAAc;MAXtB;;MAaAF,EAAE,GAAGb,IAAI,CAACrB,IAAL,CAAUG,OAAV,EAAmBmB,CAAnB,CAAL;IACH,CAjByC,CAiBxC,OAAOP,CAAP,EAAU;MAAEmB,EAAE,GAAG,CAAC,CAAD,EAAInB,CAAJ,CAAL;MAAaa,CAAC,GAAG,CAAJ;IAAQ,CAjBO,SAiBE;MAAED,CAAC,GAAGpC,CAAC,GAAG,CAAR;IAAY;;IAC1D,IAAI2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAZ,EAAe,MAAMA,EAAE,CAAC,CAAD,CAAR;IAAa,OAAO;MAAE1B,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAV,GAAgB,KAAK,CAA9B;MAAiChB,IAAI,EAAE;IAAvC,CAAP;EAC/B;AACJ,CA1BD;;AA2BA,IAAIoB,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAa7C,CAAb,EAAgB;EAClD,IAAI8C,CAAC,GAAG,OAAOT,MAAP,KAAkB,UAAlB,IAAgCQ,CAAC,CAACR,MAAM,CAACC,QAAR,CAAzC;EACA,IAAI,CAACQ,CAAL,EAAQ,OAAOD,CAAP;EACR,IAAI9C,CAAC,GAAG+C,CAAC,CAACxC,IAAF,CAAOuC,CAAP,CAAR;EAAA,IAAmBE,CAAnB;EAAA,IAAsBC,EAAE,GAAG,EAA3B;EAAA,IAA+B3B,CAA/B;;EACA,IAAI;IACA,OAAO,CAACrB,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAAC+C,CAAC,GAAGhD,CAAC,CAACqB,IAAF,EAAL,EAAeI,IAApD,EAA0DwB,EAAE,CAACL,IAAH,CAAQI,CAAC,CAACjC,KAAV;EAC7D,CAFD,CAGA,OAAOmC,KAAP,EAAc;IAAE5B,CAAC,GAAG;MAAE4B,KAAK,EAAEA;IAAT,CAAJ;EAAuB,CAHvC,SAIQ;IACJ,IAAI;MACA,IAAIF,CAAC,IAAI,CAACA,CAAC,CAACvB,IAAR,KAAiBsB,CAAC,GAAG/C,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuC+C,CAAC,CAACxC,IAAF,CAAOP,CAAP;IAC1C,CAFD,SAGQ;MAAE,IAAIsB,CAAJ,EAAO,MAAMA,CAAC,CAAC4B,KAAR;IAAgB;EACpC;;EACD,OAAOD,EAAP;AACH,CAfD;;AAgBA,IAAIE,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;EAC1E,IAAIA,IAAI,IAAIpD,SAAS,CAACC,MAAV,KAAqB,CAAjC,EAAoC,KAAK,IAAIH,CAAC,GAAG,CAAR,EAAWuD,CAAC,GAAGF,IAAI,CAAClD,MAApB,EAA4B8C,EAAjC,EAAqCjD,CAAC,GAAGuD,CAAzC,EAA4CvD,CAAC,EAA7C,EAAiD;IACjF,IAAIiD,EAAE,IAAI,EAAEjD,CAAC,IAAIqD,IAAP,CAAV,EAAwB;MACpB,IAAI,CAACJ,EAAL,EAASA,EAAE,GAAGO,KAAK,CAACnD,SAAN,CAAgBoD,KAAhB,CAAsBlD,IAAtB,CAA2B8C,IAA3B,EAAiC,CAAjC,EAAoCrD,CAApC,CAAL;MACTiD,EAAE,CAACjD,CAAD,CAAF,GAAQqD,IAAI,CAACrD,CAAD,CAAZ;IACH;EACJ;EACD,OAAOoD,EAAE,CAACM,MAAH,CAAUT,EAAE,IAAIO,KAAK,CAACnD,SAAN,CAAgBoD,KAAhB,CAAsBlD,IAAtB,CAA2B8C,IAA3B,CAAhB,CAAP;AACH,CARD;;AASA,SAASM,MAAT,QAAuB,mBAAvB;AACA,SAASC,qBAAT,EAAgCC,UAAhC,EAA4CC,aAA5C,EAA2DC,SAA3D,EAAsEC,uBAAtE,EAA+FC,oBAA/F,QAA4H,kBAA5H;AACA,SAASC,aAAT,EAAwBC,sBAAxB,QAAsD,wBAAtD;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,kBAA/C,EAAmEC,eAAnE,QAA2F,yBAA3F;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,wBAAnC;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,IAAIC,MAAM,GAAG,IAAIhB,MAAJ,CAAW,iBAAX,CAAb;AACA,OAAO,IAAIiB,oBAAJ;;AACP,CAAC,UAAUA,oBAAV,EAAgC;EAC7BA,oBAAoB,CAACA,oBAAoB,CAAC,MAAD,CAApB,GAA+B,CAAhC,CAApB,GAAyD,MAAzD;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,aAAD,CAApB,GAAsC,CAAvC,CAApB,GAAgE,aAAhE;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,QAAD,CAApB,GAAiC,CAAlC,CAApB,GAA2D,QAA3D;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,WAAD,CAApB,GAAoC,CAArC,CAApB,GAA8D,WAA9D;EACAA,oBAAoB,CAACA,oBAAoB,CAAC,WAAD,CAApB,GAAoC,CAArC,CAApB,GAA8D,WAA9D;AACH,CAND,EAMGA,oBAAoB,KAAKA,oBAAoB,GAAG,EAA5B,CANvB;;AAOA,OAAO,IAAIC,UAAJ;;AACP,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,QAAD,CAAV,GAAuB,QAAvB;EACAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,gBAAhC;EACAA,UAAU,CAAC,iBAAD,CAAV,GAAgC,oBAAhC;EACAA,UAAU,CAAC,OAAD,CAAV,GAAsB,OAAtB;AACH,CALD,EAKGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CALb;;AAMA,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;EAC7B,OAAOD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAxB;AACH;;AACD,IAAIC,eAAe;AAAG;AAAe,YAAY;EAC7C,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;IACzB,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;IAAA,IAA4BC,IAAI,GAAGF,EAAE,CAACE,IAAtC;IAAA,IAA4CC,OAAO,GAAGH,EAAE,CAACG,OAAzD;IAAA,IAAkEC,OAAO,GAAGJ,EAAE,CAACI,OAA/E;IAAA,IAAwFC,MAAM,GAAGL,EAAE,CAACK,MAApG;IAAA,IAA4GC,KAAK,GAAGN,EAAE,CAACM,KAAvH;IAAA,IAA8HC,aAAa,GAAGP,EAAE,CAACO,aAAjJ;IACA,KAAKC,SAAL,GAAiBrB,kBAAjB;IACA,KAAKsB,QAAL,GAAgBvB,iBAAhB;IACA,KAAKwB,UAAL,GAAkB,EAAlB;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKC,KAAL,GAAatB,oBAAoB,CAACuB,IAAlC;IACA,KAAKT,aAAL,GAAqBA,aAArB;IACA,KAAKN,QAAL,GAAgBA,QAAhB;IACA,KAAKG,OAAL,GAAeA,OAAf;IACA,KAAKa,WAAL,GAAmBnF,OAAO,CAACD,OAAR,EAAnB;;IACA,IAAI,OAAO,KAAKuE,OAAL,CAAa,MAAb,CAAP,KAAgC,UAApC,EAAgD;MAC5C,KAAKa,WAAL,GAAmB,KAAKb,OAAL,CAAa,MAAb,GAAnB;IACH;;IACD,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKH,IAAL,GAAYA,IAAZ;IACA,KAAKY,UAAL,GAAkB,KAAKZ,IAAL,CAAUgB,IAA5B;IACA,KAAKL,aAAL,GAAqB,CAArB;IACA,KAAKV,OAAL,GAAeA,OAAf;IACA,KAAKS,MAAL,GAAc,EAAd;IACA,KAAKO,MAAL,GAAc,KAAKC,UAAL,CAAgBd,KAAhB,CAAd;;IACA,KAAKe,eAAL,GAxByB,CAyBzB;IACA;;;IACA,KAAKlB,OAAL,CAAamB,EAAb,CAAgB5B,UAAU,CAAC6B,KAA3B,EAAkC,YAAY,CAAG,CAAjD;EACH;;EACD9G,MAAM,CAAC+G,cAAP,CAAsBzB,eAAe,CAAC7E,SAAtC,EAAiD,SAAjD,EAA4D;IACxDuG,GAAG,EAAE,YAAY;MACb,OAAQ,KAAKZ,aAAL,GAAqB,KAAKC,UAA3B,GAAyC,GAAhD;IACH,CAHuD;IAIxDY,UAAU,EAAE,KAJ4C;IAKxDC,YAAY,EAAE;EAL0C,CAA5D;EAOAlH,MAAM,CAAC+G,cAAP,CAAsBzB,eAAe,CAAC7E,SAAtC,EAAiD,cAAjD,EAAiE;IAC7DuG,GAAG,EAAE,YAAY;MACb,OAAO,KAAKV,KAAL,KAAetB,oBAAoB,CAACmC,WAA3C;IACH,CAH4D;IAI7DF,UAAU,EAAE,KAJiD;IAK7DC,YAAY,EAAE;EAL+C,CAAjE;;EAOA5B,eAAe,CAAC7E,SAAhB,CAA0B2G,eAA1B,GAA4C,UAAU7B,EAAV,EAAc;IACtD,IAAI8B,GAAG,GAAG9B,EAAE,CAAC8B,GAAb;IAAA,IAAkBC,MAAM,GAAG/B,EAAE,CAAC+B,MAA9B;IACA,OAAOzG,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI0G,eAAJ,EAAqBC,EAArB,EAAyBC,QAAzB,EAAmCC,GAAnC;;MACA,OAAO3F,WAAW,CAAC,IAAD,EAAO,UAAU4F,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACzF,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK4D,aAAnB,CAAP;;UACR,KAAK,CAAL;YACIyB,eAAe,GAAGI,EAAE,CAACxF,IAAH,EAAlB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc+B,aAAa,CAAC,KAAKsB,QAAN,EAAgB;cAC1CoC,MAAM,EAAEN,MADkC;cAE1CO,MAAM,EAAEN,eAAe,GAAGF;YAFgB,CAAhB,CAA3B,CAAP;;UAIJ,KAAK,CAAL;YACIG,EAAE,GAAIG,EAAE,CAACxF,IAAH,EAAD,CAAYsF,QAAjB,EAA2BA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA3D;YACAE,GAAG,GAAGD,QAAQ,CAACK,IAAT,CAAc,UAAU5E,CAAV,EAAa;cAAE,OAAOA,CAAC,CAAC6E,GAAF,KAAU,GAAGjE,MAAH,CAAUyD,eAAV,EAA2BzD,MAA3B,CAAkCuD,GAAlC,CAAjB;YAA0D,CAAvF,CAAN;YACA,OAAO,CAAC;YAAE;YAAH,EAAeK,GAAf,CAAP;QAXR;MAaH,CAdiB,CAAlB;IAeH,CAjBe,CAAhB;EAkBH,CApBD;;EAqBApC,eAAe,CAAC7E,SAAhB,CAA0BkG,UAA1B,GAAuC,UAAUd,KAAV,EAAiB;IACpD;IACA,IAAIhB,MAAM,CAAC,KAAKY,IAAN,CAAV,EAAuB;MACnB,OAAO,CACH,KAAKA,IAAL,CAAUuC,IADP,EAEH,KAAKvC,IAAL,CAAUwC,YAFP,EAGH,KAAKxC,IAAL,CAAUgB,IAHP,EAIH,KAAKhB,IAAL,CAAUyC,IAJP,EAKH,KAAKtC,MAAL,CAAYgC,MALT,EAMH/B,KANG,EAOH,KAAKD,MAAL,CAAYmC,GAPT,EAQLI,IARK,CAQA,GARA,CAAP;IASH,CAVD,MAWK;MACD,OAAO,CACH,KAAK1C,IAAL,CAAUgB,IADP,EAEH,KAAKhB,IAAL,CAAUyC,IAFP,EAGH,KAAKtC,MAAL,CAAYgC,MAHT,EAIH/B,KAJG,EAKH,KAAKD,MAAL,CAAYmC,GALT,EAMLI,IANK,CAMA,GANA,CAAP;IAOH;EACJ,CAtBD;;EAuBA7C,eAAe,CAAC7E,SAAhB,CAA0B2H,sBAA1B,GAAmD,YAAY;IAC3D,OAAOvH,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIwH,cAAJ,EAAoBC,oBAApB,EAA0C/C,EAA1C,EAA8CgD,KAA9C,EAAqDf,EAArD,EAAyDG,EAAzD;;MACA,IAAIa,EAAJ;;MACA,OAAOzG,WAAW,CAAC,IAAD,EAAO,UAAU0G,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACvG,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKwG,sBAAL,EAAd,CAAP;;UACR,KAAK,CAAL;YACIL,cAAc,GAAGI,EAAE,CAACtG,IAAH,EAAjB;;YACA,IAAInC,MAAM,CAAC2I,IAAP,CAAYN,cAAZ,EAA4B9H,MAA5B,KAAuC,CAAvC,IACA,CAACP,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC0H,cAArC,EAAqD,KAAK3B,MAA1D,CADL,EACwE;cACpE,OAAO,CAAC;cAAE;cAAH,EAAe;gBAAEkC,KAAK,EAAE,EAAT;gBAAaC,QAAQ,EAAE;cAAvB,CAAf,CAAP;YACH;;YACDP,oBAAoB,GAAGD,cAAc,CAAC,KAAK3B,MAAN,CAArC;YACA4B,oBAAoB,CAACQ,WAArB,GAAmCC,IAAI,CAACC,GAAL,EAAnC;YACA,KAAKrD,OAAL,CAAasD,OAAb,CAAqBnE,mBAArB,EAA0CoE,IAAI,CAACC,SAAL,CAAed,cAAf,CAA1C;YACAb,EAAE,GAAGrD,SAAL;YACAwD,EAAE,GAAG,CAAC,KAAKnC,QAAN,CAAL;YACAgD,EAAE,GAAG;cACDZ,MAAM,EAAE,KAAKhC,MAAL,CAAYgC;YADnB,CAAL;YAGA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK9B,aAAnB,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc0B,EAAE,CAAC5G,KAAH,CAAS,KAAK,CAAd,EAAiB+G,EAAE,CAAC7D,MAAH,CAAU,EAAE0E,EAAE,CAACT,GAAH,GAAUU,EAAE,CAACtG,IAAH,EAAD,GAAc,KAAKyD,MAAL,CAAYmC,GAAnC,EAC9CS,EAAE,CAACY,QAAH,GAAcd,oBAAoB,CAACO,QADW,EAE9CL,EAF4C,EAAV,CAAjB,CAAd,CAAP;;UAGR,KAAK,CAAL;YACIjD,EAAE,GAAIkD,EAAE,CAACtG,IAAH,EAAD,CAAYoG,KAAjB,EAAwBA,KAAK,GAAGhD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAArD;YACA,OAAO,CAAC;YAAE;YAAH,EAAe;cACdqD,KAAK,EAAEL,KADO;cAEdM,QAAQ,EAAEP,oBAAoB,CAACO;YAFjB,CAAf,CAAP;QAtBR;MA2BH,CA5BiB,CAAlB;IA6BH,CAhCe,CAAhB;EAiCH,CAlCD;;EAmCAvD,eAAe,CAAC7E,SAAhB,CAA0B4I,UAA1B,GAAuC,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;IAC7D,KAAK7D,OAAL,CAAa8D,IAAb,CAAkBF,KAAlB,EAAyBC,OAAzB;EACH,CAFD;;EAGAjE,eAAe,CAAC7E,SAAhB,CAA0BmG,eAA1B,GAA4C,YAAY;IACpD,IAAI,KAAKP,UAAL,GAAkB1B,eAAtB,EAAuC;MACnC,MAAM,IAAI8E,KAAJ,CAAU,qDAAqD3F,MAArD,CAA4D,KAAKuC,UAAjE,EAA6E,QAA7E,CAAV,CAAN;IACH;EACJ,CAJD;;EAKAf,eAAe,CAAC7E,SAAhB,CAA0BiI,sBAA1B,GAAmD,YAAY;IAC3D,OAAO7H,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI6I,KAAJ;MACA,OAAO3H,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACrD,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKsE,WAAnB,CAAP;;UACR,KAAK,CAAL;YACIjB,EAAE,CAACpD,IAAH;;YACAuH,KAAK,GAAG,KAAK/D,OAAL,CAAagE,OAAb,CAAqB7E,mBAArB,KAA6C,IAArD;YACA,OAAO,CAAC;YAAE;YAAH,EAAeoE,IAAI,CAACU,KAAL,CAAWF,KAAX,CAAf,CAAP;QALR;MAOH,CARiB,CAAlB;IASH,CAXe,CAAhB;EAYH,CAbD;;EAcApE,eAAe,CAAC7E,SAAhB,CAA0BoJ,MAA1B,GAAmC,UAAUC,YAAV,EAAwB;IACvD,OAAOjJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIwH,cAAJ;MACA,OAAOtG,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACrD,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKwG,sBAAL,EAAd,CAAP;;UACR,KAAK,CAAL;YACIL,cAAc,GAAG9C,EAAE,CAACpD,IAAH,EAAjB;YACAkG,cAAc,CAAC,KAAK3B,MAAN,CAAd,GAA8BoD,YAA9B;YACA,KAAKnE,OAAL,CAAasD,OAAb,CAAqBnE,mBAArB,EAA0CoE,IAAI,CAACC,SAAL,CAAed,cAAf,CAA1C;YACA,OAAO,CAAC;YAAE;YAAH,CAAP;QANR;MAQH,CATiB,CAAlB;IAUH,CAZe,CAAhB;EAaH,CAdD;;EAeA/C,eAAe,CAAC7E,SAAhB,CAA0BsJ,SAA1B,GAAsC,YAAY;IAC9C,OAAOlJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI0E,EAAJ,EAAQiC,EAAR;;MACA,OAAOzF,WAAW,CAAC,IAAD,EAAO,UAAU4F,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACzF,KAAX;UACI,KAAK,CAAL;YACIsF,EAAE,GAAG,CAACjC,EAAE,GAAGvF,MAAM,CAACS,SAAP,CAAiBC,cAAvB,EAAuCC,IAA5C;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK+H,sBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAelB,EAAE,CAAC5G,KAAH,CAAS2E,EAAT,EAAa,CAACoC,EAAE,CAACxF,IAAH,EAAD,EAAY,KAAKuE,MAAjB,CAAb,CAAf,CAAP;QAJZ;MAMH,CAPiB,CAAlB;IAQH,CAVe,CAAhB;EAWH,CAZD;;EAaApB,eAAe,CAAC7E,SAAhB,CAA0BuJ,gBAA1B,GAA6C,YAAY;IACrD,OAAOnJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIwH,cAAJ;MACA,OAAOtG,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACrD,KAAX;UACI,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKwG,sBAAL,EAAd,CAAP;;UACR,KAAK,CAAL;YACIL,cAAc,GAAG9C,EAAE,CAACpD,IAAH,EAAjB;YACA,OAAOkG,cAAc,CAAC,KAAK3B,MAAN,CAArB;YACA,KAAKf,OAAL,CAAasD,OAAb,CAAqBnE,mBAArB,EAA0CoE,IAAI,CAACC,SAAL,CAAed,cAAf,CAA1C;YACA,OAAO,CAAC;YAAE;YAAH,CAAP;QANR;MAQH,CATiB,CAAlB;IAUH,CAZe,CAAhB;EAaH,CAdD;;EAeA/C,eAAe,CAAC7E,SAAhB,CAA0BwJ,uBAA1B,GAAoD,UAAU1E,EAAV,EAAc;IAC9D,IAAI2E,IAAI,GAAG3E,EAAE,CAAC2E,IAAd;IAAA,IAAoBC,UAAU,GAAG5E,EAAE,CAAC4E,UAApC;IAAA,IAAgDC,KAAK,GAAG7E,EAAE,CAAC6E,KAA3D;IACA,OAAOvJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOkB,WAAW,CAAC,IAAD,EAAO,UAAUyF,EAAV,EAAc;QACnC,KAAKtB,cAAL,CAAoBlD,IAApB,CAAyB;UACrBqH,IAAI,EAAEH,IADe;UAErB7E,UAAU,EAAE8E;QAFS,CAAzB;QAIA,KAAK/D,aAAL,IAAsBxB,UAAU,CAACwF,KAAD,CAAhC;;QACA,KAAKf,UAAL,CAAgBpE,UAAU,CAACqF,eAA3B,EAA4C;UACxCC,MAAM,EAAE,KAAKnE,aAD2B;UAExCoE,KAAK,EAAE,KAAKnE;QAF4B,CAA5C,EANmC,CAUnC;;;QACA,KAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBwE,MAAhB,CAAuB,UAAUC,GAAV,EAAe;UAAE,OAAOA,GAAG,CAACC,eAAJ,CAAoBtF,UAApB,KAAmC8E,UAA1C;QAAuD,CAA/F,CAAlB;QACA,IAAI,KAAKhE,MAAL,CAAY5F,MAAZ,IAAsB,KAAK+F,KAAL,KAAetB,oBAAoB,CAAC4F,MAA9D,EACI,KAAKC,cAAL;QACJ,IAAI,KAAKC,OAAL,EAAJ,EACI,KAAKC,eAAL;QACJ,OAAO,CAAC;QAAE;QAAH,CAAP;MACH,CAjBiB,CAAlB;IAkBH,CAnBe,CAAhB;EAoBH,CAtBD;;EAuBAzF,eAAe,CAAC7E,SAAhB,CAA0BsK,eAA1B,GAA4C,YAAY;IACpD,OAAOlK,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI0E,EAAJ,EAAQiC,EAAR,EAAYwD,KAAZ;;MACA,IAAIrD,EAAJ;;MACA,OAAO5F,WAAW,CAAC,IAAD,EAAO,UAAUyG,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACtG,KAAX;UACI,KAAK,CAAL;YACIsG,EAAE,CAACpG,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACAuC,EAAE,GAAGnB,uBAAL;YACAoD,EAAE,GAAG,CAAC,KAAKhC,QAAN,CAAL;YACAmC,EAAE,GAAG;cACDC,MAAM,EAAE,KAAKhC,MAAL,CAAYgC;YADnB,CAAL;YAGA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK9B,aAAnB,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAcP,EAAE,CAAC3E,KAAH,CAAS,KAAK,CAAd,EAAiB4G,EAAE,CAAC1D,MAAH,CAAU,EAAE6D,EAAE,CAACI,GAAH,GAAUS,EAAE,CAACrG,IAAH,EAAD,GAAc,KAAKyD,MAAL,CAAYmC,GAAnC,EAC9CJ,EAAE,CAACyB,QAAH,GAAc,KAAKP,QAD2B,EAE9ClB,EAAE,CAACsD,eAAH,GAAqB;cACjB;cACA1C,KAAK,EAAEhF,aAAa,CAAC,EAAD,EAAKN,MAAM,CAAC,KAAKiD,cAAN,CAAX,EAAkC,KAAlC,CAAb,CAAsDgF,IAAtD,CAA2DhG,iBAA3D;YAFU,CAFyB,EAM9CyC,EAN4C,EAAV,CAAjB,CAAd,CAAP;;UAOR,KAAK,CAAL;YACIa,EAAE,CAACrG,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKgJ,eAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACI3C,EAAE,CAACrG,IAAH;;YACA,KAAKkH,UAAL,CAAgBpE,UAAU,CAACmG,eAA3B,EAA4C;cACxC/D,GAAG,EAAE,KAAKzB,MAAL,CAAYmC;YADuB,CAA5C;;YAGA,KAAKiC,gBAAL;;YACA,KAAK1D,KAAL,GAAatB,oBAAoB,CAACqG,SAAlC;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIL,KAAK,GAAGxC,EAAE,CAACrG,IAAH,EAAR;YACA4C,MAAM,CAACzB,KAAP,CAAa,yBAAb,EAAwC0H,KAAxC;;YACA,KAAK3B,UAAL,CAAgBpE,UAAU,CAAC6B,KAA3B,EAAkCkE,KAAlC;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAhCZ;MAkCH,CAnCiB,CAAlB;IAoCH,CAvCe,CAAhB;EAwCH,CAzCD;;EA0CA1F,eAAe,CAAC7E,SAAhB,CAA0B6K,sBAA1B,GAAmD,UAAUC,KAAV,EAAiBC,WAAjB,EAA8B;IAC7E,OAAO3K,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI4K,GAAJ,EAASlG,EAAT,EAAaiC,EAAb,EAAiBG,EAAjB,EAAqB+D,KAArB;;MACA,IAAIlD,EAAJ;;MACA,OAAOzG,WAAW,CAAC,IAAD,EAAO,UAAU0G,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACvG,KAAX;UACI,KAAK,CAAL;YACIuG,EAAE,CAACrG,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACAuC,EAAE,GAAGtB,UAAL;YACAuD,EAAE,GAAG,CAACzH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK,KAAKyF,QAAV,CAAT,EAA8B;cAAEgG,WAAW,EAAEA;YAAf,CAA9B,CAAT,CAAL;YACA7D,EAAE,GAAG,CAAC5H,QAAQ,CAAC,EAAD,EAAKwL,KAAL,CAAT,CAAL;YACA/C,EAAE,GAAG,EAAL;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK1C,aAAnB,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAcP,EAAE,CAAC3E,KAAH,CAAS,KAAK,CAAd,EAAiB4G,EAAE,CAAC1D,MAAH,CAAU,CAAC/D,QAAQ,CAACa,KAAT,CAAe,KAAK,CAApB,EAAuB+G,EAAE,CAAC7D,MAAH,CAAU,EAAE0E,EAAE,CAACT,GAAH,GAAUU,EAAE,CAACtG,IAAH,EAAD,GAAc,KAAKyD,MAAL,CAAYmC,GAAnC,EAAwCS,EAA1C,EAAV,CAAvB,CAAD,CAAV,CAAjB,CAAd,CAAP;;UACR,KAAK,CAAL;YACIiD,GAAG,GAAGhD,EAAE,CAACtG,IAAH,EAAN;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK8H,uBAAL,CAA6B;cAC1CC,IAAI,EAAEuB,GAAG,CAACpB,IADgC;cAE1CF,UAAU,EAAEoB,KAAK,CAAClG,UAFwB;cAG1C+E,KAAK,EAAEmB,KAAK,CAACI;YAH6B,CAA7B,CAAd,CAAP;;UAKJ,KAAK,CAAL;YACIlD,EAAE,CAACtG,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIuJ,KAAK,GAAGjD,EAAE,CAACtG,IAAH,EAAR;;YACA,IAAI,KAAKmE,KAAL,KAAetB,oBAAoB,CAAC4F,MAAxC,EAAgD;cAC5C7F,MAAM,CAAC6G,GAAP,CAAW,eAAX;YACH,CAFD,MAGK,IAAI,KAAKtF,KAAL,KAAetB,oBAAoB,CAAC6G,SAAxC,EAAmD;cACpD9G,MAAM,CAAC6G,GAAP,CAAW,gBAAX;YACH,CAFI,MAGA;cACD7G,MAAM,CAACzB,KAAP,CAAa,sCAAb,EAAqDoI,KAArD;YACH,CAVL,CAWI;YACA;;;YACA,IAAI,CAACpH,aAAa,CAACoH,KAAD,CAAd,IAAyBA,KAAK,CAACI,OAAN,KAAkBvH,sBAA/C,EAAuE;cACnE,KAAK8E,UAAL,CAAgBpE,UAAU,CAAC6B,KAA3B,EAAkC4E,KAAlC;;cACA,KAAKK,KAAL;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QArCZ;MAuCH,CAxCiB,CAAlB;IAyCH,CA5Ce,CAAhB;EA6CH,CA9CD;;EA+CAzG,eAAe,CAAC7E,SAAhB,CAA0BoK,cAA1B,GAA2C,YAAY;IACnD,IAAI,KAAK1E,MAAL,CAAY5F,MAAZ,GAAqB,CAArB,IAA0B,KAAK+F,KAAL,KAAetB,oBAAoB,CAAC4F,MAAlE,EAA0E;MACtE,IAAIoB,eAAe,GAAG,IAAIC,eAAJ,EAAtB;MACA,IAAIC,QAAQ,GAAG,KAAK/F,MAAL,CAAYgG,KAAZ,EAAf;MACA,KAAKlG,UAAL,CAAgBjD,IAAhB,CAAqB;QACjB2H,eAAe,EAAEuB,QADA;QAEjBE,SAAS,EAAE,KAAKd,sBAAL,CAA4BY,QAA5B,EAAsCF,eAAe,CAACK,MAAtD,CAFM;QAGjBL,eAAe,EAAEA;MAHA,CAArB;IAKH;EACJ,CAVD;EAWA;AACJ;AACA;AACA;AACA;AACA;;;EACI1G,eAAe,CAAC7E,SAAhB,CAA0B0K,eAA1B,GAA4C,YAAY;IACpD,OAAOtK,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIyL,KAAJ,EAAW5E,GAAX,EAAgB6E,GAAhB;MACA,OAAOxK,WAAW,CAAC,IAAD,EAAO,UAAUwD,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACrD,KAAX;UACI,KAAK,CAAL;YACIqD,EAAE,CAACnD,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKoE,eAAL,CAAqB;cAClCC,GAAG,EAAE,KAAKzB,MAAL,CAAYmC,GADiB;cAElCT,MAAM,EAAE,KAAK1B,MAAL,CAAYgC;YAFc,CAArB,CAAd,CAAP;;UAIJ,KAAK,CAAL;YACIF,GAAG,GAAGnC,EAAE,CAACpD,IAAH,EAAN;YACAmK,KAAK,GAAGE,OAAO,CAAC9E,GAAG,IAAIA,GAAG,CAAC+E,IAAJ,KAAa,KAAKhH,IAAL,CAAUgB,IAA/B,CAAf;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACI8F,GAAG,GAAGhH,EAAE,CAACpD,IAAH,EAAN;YACA4C,MAAM,CAAC6G,GAAP,CAAW,8CAAX,EAA2DW,GAA3D,EAFJ,CAGI;YACA;;YACA,OAAO,CAAC;YAAE;YAAH,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,CAACD,KAAL,EAAY;cACR,MAAM,IAAI7C,KAAJ,CAAU,4DAAV,CAAN;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,CAAP;QArBR;MAuBH,CAxBiB,CAAlB;IAyBH,CA3Be,CAAhB;EA4BH,CA7BD;;EA8BAnE,eAAe,CAAC7E,SAAhB,CAA0BqK,OAA1B,GAAoC,YAAY;IAC5C,OAAQ,CAAC,KAAK3E,MAAL,CAAY5F,MAAb,IACJ,CAAC,KAAK0F,UAAL,CAAgB1F,MADb,IAEJ,KAAK6F,aAAL,KAAuB,KAAKC,UAFhC;EAGH,CAJD;;EAKAf,eAAe,CAAC7E,SAAhB,CAA0BiM,YAA1B,GAAyC,YAAY;IACjD,IAAIjG,IAAI,GAAG,KAAKhB,IAAL,CAAUgB,IAArB;IACA,IAAImC,KAAK,GAAG,EAAZ;;IACA,KAAK,IAAI+D,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGlG,IAApC,GAA2C;MACvC,IAAImG,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASH,SAAS,GAAG,KAAK3G,QAA1B,EAAoCS,IAApC,CAAd;MACAmC,KAAK,CAAC5F,IAAN,CAAW;QACP2I,IAAI,EAAE,KAAKlG,IAAL,CAAU5B,KAAV,CAAgB8I,SAAhB,EAA2BC,OAA3B,CADC;QAEP7E,GAAG,EAAE,KAAKnC,MAAL,CAAYmC,GAFV;QAGPH,MAAM,EAAE,KAAKhC,MAAL,CAAYgC,MAHb;QAIPvC,UAAU,EAAEuD,KAAK,CAACrI,MAAN,GAAe,CAJpB;QAKP6I,QAAQ,EAAE,KAAKP;MALR,CAAX;MAOA8D,SAAS,IAAI,KAAK3G,QAAlB;IACH;;IACD,OAAO4C,KAAP;EACH,CAfD;;EAgBAtD,eAAe,CAAC7E,SAAhB,CAA0BsM,sBAA1B,GAAmD,UAAUC,WAAV,EAAuB;IACtE,KAAK5G,aAAL,IAAsB4G,WAAW,CAACC,MAAZ,CAAmB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;MAAE,OAAOD,GAAG,GAAGC,IAAI,CAACV,IAAlB;IAAyB,CAAnE,EAAqE,CAArE,CAAtB,CADsE,CAEtE;;IACA,IAAIW,kBAAkB,GAAG,IAAIC,GAAJ,CAAQL,WAAW,CAACM,GAAZ,CAAgB,UAAUH,IAAV,EAAgB;MAAE,OAAOA,IAAI,CAAC9H,UAAZ;IAAyB,CAA3D,CAAR,CAAzB;IACA,KAAKc,MAAL,GAAc,KAAKA,MAAL,CAAYsE,MAAZ,CAAmB,UAAU0C,IAAV,EAAgB;MAAE,OAAO,CAACC,kBAAkB,CAACG,GAAnB,CAAuBJ,IAAI,CAAC9H,UAA5B,CAAR;IAAkD,CAAvF,CAAd;IACA,KAAKa,cAAL,GAAsB8G,WAAW,CAACM,GAAZ,CAAgB,UAAUH,IAAV,EAAgB;MAAE,OAAQ;QAC5D9H,UAAU,EAAE8H,IAAI,CAAC9H,UAD2C;QAE5DgF,IAAI,EAAE8C,IAAI,CAAC9C;MAFiD,CAAR;IAGnD,CAHiB,CAAtB;;IAIA,KAAKhB,UAAL,CAAgBpE,UAAU,CAACqF,eAA3B,EAA4C;MACxCC,MAAM,EAAE,KAAKnE,aAD2B;MAExCoE,KAAK,EAAE,KAAKnE;IAF4B,CAA5C;EAIH,CAbD;;EAcAf,eAAe,CAAC7E,SAAhB,CAA0B+M,oBAA1B,GAAiD,YAAY;IACzD,OAAO3M,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI4K,GAAJ,EAASlG,EAAT,EAAaiC,EAAb,EAAiBG,EAAjB;;MACA,IAAIa,EAAJ;;MACA,OAAOzG,WAAW,CAAC,IAAD,EAAO,UAAU0G,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACvG,KAAX;UACI,KAAK,CAAL;YACIqD,EAAE,GAAGvB,qBAAL;YACAwD,EAAE,GAAG,CAAC,KAAKhC,QAAN,CAAL;YACAmC,EAAE,GAAG,CAAC5H,QAAQ,CAAC,EAAD,EAAK,KAAK6F,MAAV,CAAT,CAAL;YACA4C,EAAE,GAAG,EAAL;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK1C,aAAnB,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAcP,EAAE,CAAC3E,KAAH,CAAS,KAAK,CAAd,EAAiB4G,EAAE,CAAC1D,MAAH,CAAU,CAAC/D,QAAQ,CAACa,KAAT,CAAe,KAAK,CAApB,EAAuB+G,EAAE,CAAC7D,MAAH,CAAU,EAAE0E,EAAE,CAACT,GAAH,GAAUU,EAAE,CAACtG,IAAH,EAAD,GAAc,KAAKyD,MAAL,CAAYmC,GAAnC,EAAwCS,EAA1C,EAAV,CAAvB,CAAD,CAAV,CAAjB,CAAd,CAAP;;UACR,KAAK,CAAL;YACIiD,GAAG,GAAGhD,EAAE,CAACtG,IAAH,EAAN;;YACA,KAAK0H,MAAL,CAAY;cACRhB,QAAQ,EAAE4C,GAAG,CAACrC,QADN;cAERN,WAAW,EAAEC,IAAI,CAACC,GAAL,EAFL;cAGR1B,MAAM,EAAE,KAAK1B,MAAL,CAAYgC,MAHZ;cAIRP,GAAG,EAAE,KAAKzB,MAAL,CAAYmC,GAJT;cAKR0F,QAAQ,EAAE,KAAKhI,IAAL,YAAqBiI,IAArB,GAA4B,KAAKjI,IAAL,CAAUuC,IAAtC,GAA6C;YAL/C,CAAZ;;YAOA,OAAO,CAAC;YAAE;YAAH,EAAeyD,GAAG,CAACrC,QAAnB,CAAP;QAjBR;MAmBH,CApBiB,CAAlB;IAqBH,CAxBe,CAAhB;EAyBH,CA1BD;;EA2BA9D,eAAe,CAAC7E,SAAhB,CAA0BkN,qBAA1B,GAAkD,YAAY;IAC1D,OAAO9M,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI0E,EAAJ,EAAQqD,KAAR,EAAeC,QAAf,EAAyBA,QAAzB,EAAmC+E,KAAnC;;MACA,OAAO7L,WAAW,CAAC,IAAD,EAAO,UAAUyF,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACtF,KAAX;UACI,KAAK,CAAL;YACI,KAAKoE,KAAL,GAAatB,oBAAoB,CAACmC,WAAlC;YACA,KAAKnB,QAAL,GAAgBxB,iBAAiB,CAAC,KAAK6B,UAAN,CAAjC;YACAmB,EAAE,CAACtF,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIsF,EAAE,CAACpF,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK+G,SAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,CAACvC,EAAE,CAACrF,IAAH,EAAL,EAAgB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YAChB,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKiG,sBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACI7C,EAAE,GAAGiC,EAAE,CAACrF,IAAH,EAAL,EAAgByG,KAAK,GAAGrD,EAAE,CAACqD,KAA3B,EAAkCC,QAAQ,GAAGtD,EAAE,CAACsD,QAAhD;YACA,KAAKA,QAAL,GAAgBA,QAAhB;YACA,KAAK1C,MAAL,GAAc,KAAKuG,YAAL,EAAd;;YACA,KAAKK,sBAAL,CAA4BnE,KAA5B;;YACA,IAAI,KAAKkC,OAAL,EAAJ,EAAoB;cAChB,KAAKC,eAAL;YACH,CAFD,MAGK;cACD,KAAK8C,YAAL;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,CAAC,CAAC,KAAKhF,QAAX,EAAqB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACrB,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK2E,oBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACI3E,QAAQ,GAAGrB,EAAE,CAACrF,IAAH,EAAX;YACA,KAAK0G,QAAL,GAAgBA,QAAhB;YACA,KAAK1C,MAAL,GAAc,KAAKuG,YAAL,EAAd;;YACA,KAAKmB,YAAL;;YACArG,EAAE,CAACtF,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACR,KAAK,CAAL;YACI0L,KAAK,GAAGpG,EAAE,CAACrF,IAAH,EAAR;;YACA,IAAI,CAACmC,aAAa,CAACsJ,KAAD,CAAlB,EAA2B;cACvB7I,MAAM,CAACzB,KAAP,CAAa,oCAAb,EAAmDsK,KAAnD;;cACA,KAAKvE,UAAL,CAAgBpE,UAAU,CAAC6B,KAA3B,EAAkC8G,KAAlC;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAxCZ;MA0CH,CA3CiB,CAAlB;IA4CH,CA9Ce,CAAhB;EA+CH,CAhDD;;EAiDAtI,eAAe,CAAC7E,SAAhB,CAA0BqN,MAA1B,GAAmC,YAAY;IAC3C,IAAI,KAAKxH,KAAL,KAAetB,oBAAoB,CAAC6G,SAAxC,EAAmD;MAC/C9G,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;IACH,CAFD,MAGK,IAAI,KAAKzH,KAAL,KAAetB,oBAAoB,CAACqG,SAAxC,EAAmD;MACpDtG,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;IACH,CAFI,MAGA,IAAI,KAAKzH,KAAL,KAAetB,oBAAoB,CAACmC,WAAxC,EAAqD;MACtDpC,MAAM,CAACgJ,IAAP,CAAY,iCAAZ,EADsD,CAEtD;MACA;IACH,CAJI,MAKA,IAAI,CAAC,KAAKlF,QAAV,EAAoB;MACrB,KAAK8E,qBAAL;IACH,CAFI,MAGA;MACD,KAAKE,YAAL;IACH;EACJ,CAlBD;;EAmBAvI,eAAe,CAAC7E,SAAhB,CAA0BoN,YAA1B,GAAyC,YAAY;IACjD,KAAKvH,KAAL,GAAatB,oBAAoB,CAACmC,WAAlC;;IACA,KAAK,IAAI/G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2F,SAAzB,EAAoC3F,CAAC,EAArC,EAAyC;MACrC,KAAKyK,cAAL;IACH;EACJ,CALD;;EAMAvF,eAAe,CAAC7E,SAAhB,CAA0BuN,OAA1B,GAAoC,YAAY;IAC5C,OAAOnN,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI0E,EAAJ,EAAQiC,EAAR,EAAYyG,KAAZ;;MACA,IAAItG,EAAJ;;MACA,OAAO5F,WAAW,CAAC,IAAD,EAAO,UAAUyG,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACtG,KAAX;UACI,KAAK,CAAL;YACI,IAAI,EAAE,KAAKoE,KAAL,KAAetB,oBAAoB,CAAC6G,SAAtC,CAAJ,EAAsD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACtD9G,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAf,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,EAAE,KAAKzH,KAAL,KAAetB,oBAAoB,CAACqG,SAAtC,CAAJ,EAAsD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACtDtG,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAf,CAAP;;UACJ,KAAK,CAAL;YACI,KAAKhC,KAAL;YACA,KAAK5F,MAAL,GAAc,EAAd;YACA,KAAKD,cAAL,GAAsB,EAAtB;YACA,KAAKE,aAAL,GAAqB,CAArB;YACA,KAAKE,KAAL,GAAatB,oBAAoB,CAAC6G,SAAlC;YACArD,EAAE,CAACtG,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIsG,EAAE,CAACpG,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACAuC,EAAE,GAAGlB,oBAAL;YACAmD,EAAE,GAAG,CAAC,KAAKhC,QAAN,CAAL;YACAmC,EAAE,GAAG;cACDC,MAAM,EAAE,KAAKhC,MAAL,CAAYgC;YADnB,CAAL;YAGA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK9B,aAAnB,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAcP,EAAE,CAAC3E,KAAH,CAAS,KAAK,CAAd,EAAiB4G,EAAE,CAAC1D,MAAH,CAAU,EAAE6D,EAAE,CAACI,GAAH,GAAUS,EAAE,CAACrG,IAAH,EAAD,GAAc,KAAKyD,MAAL,CAAYmC,GAAnC,EAC9CJ,EAAE,CAACyB,QAAH,GAAc,KAAKP,QAD2B,EAE9ClB,EAF4C,EAAV,CAAjB,CAAd,CAAP;;UAGR,KAAK,CAAL;YACIa,EAAE,CAACrG,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK6H,gBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIxB,EAAE,CAACrG,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,IAAf,CAAP;;UACJ,KAAK,CAAL;YACI8L,KAAK,GAAGzF,EAAE,CAACrG,IAAH,EAAR;YACA4C,MAAM,CAACzB,KAAP,CAAa,8BAAb,EAA6C2K,KAA7C;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAf,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QArCZ;MAuCH,CAxCiB,CAAlB;IAyCH,CA5Ce,CAAhB;EA6CH,CA9CD;EA+CA;AACJ;AACA;;;EACI3I,eAAe,CAAC7E,SAAhB,CAA0BsL,KAA1B,GAAkC,YAAY;IAC1C,IAAIxG,EAAJ;;IACA,IAAI,KAAKe,KAAL,KAAetB,oBAAoB,CAAC6G,SAAxC,EAAmD;MAC/C9G,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;IACH,CAFD,MAGK,IAAI,KAAKzH,KAAL,KAAetB,oBAAoB,CAACqG,SAAxC,EAAmD;MACpDtG,MAAM,CAACgJ,IAAP,CAAY,sCAAZ;IACH,CAFI,MAGA,IAAI,KAAKzH,KAAL,KAAetB,oBAAoB,CAAC4F,MAAxC,EAAgD;MACjD7F,MAAM,CAACgJ,IAAP,CAAY,6BAAZ;IACH;;IACD,KAAKzH,KAAL,GAAatB,oBAAoB,CAAC4F,MAAlC,CAX0C,CAY1C;IACA;;IACA,IAAIsD,oBAAoB,GAAG,KAAKjI,UAAL,CAAgBkI,MAAhB,CAAuB,CAAvB,EAA0B,KAAKlI,UAAL,CAAgB1F,MAA1C,CAA3B;IACA2N,oBAAoB,CAACE,OAArB,CAA6B,UAAUC,GAAV,EAAe;MACxCA,GAAG,CAACrC,eAAJ,CAAoBsC,KAApB;IACH,CAFD,EAf0C,CAkB1C;;IACA,CAAC/I,EAAE,GAAG,KAAKY,MAAX,EAAmBoI,OAAnB,CAA2B3N,KAA3B,CAAiC2E,EAAjC,EAAqChC,aAAa,CAAC,EAAD,EAAKN,MAAM,CAACiL,oBAAoB,CAACZ,GAArB,CAAyB,UAAUe,GAAV,EAAe;MAAE,OAAOA,GAAG,CAAC1D,eAAX;IAA6B,CAAvE,CAAD,CAAX,EAAuF,KAAvF,CAAlD;EACH,CApBD;;EAqBA,OAAOrF,eAAP;AACH,CA3iBoC,EAArC;;AA4iBA,SAASA,eAAT"},"metadata":{},"sourceType":"module"}