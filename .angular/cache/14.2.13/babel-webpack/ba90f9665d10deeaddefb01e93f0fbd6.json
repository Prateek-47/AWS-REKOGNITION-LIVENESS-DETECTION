{"ast":null,"code":"import { __assign } from \"tslib\";\nexport var REGION_ENV_NAME = \"AWS_REGION\";\nexport var REGION_INI_NAME = \"region\";\nexport var NODE_REGION_CONFIG_OPTIONS = {\n  environmentVariableSelector: function (env) {\n    return env[REGION_ENV_NAME];\n  },\n  configFileSelector: function (profile) {\n    return profile[REGION_INI_NAME];\n  },\n  default: function () {\n    throw new Error(\"Region is missing\");\n  }\n};\nexport var NODE_REGION_CONFIG_FILE_OPTIONS = {\n  preferredFile: \"credentials\"\n};\nexport var resolveRegionConfig = function (input) {\n  if (!input.region) {\n    throw new Error(\"Region is missing\");\n  }\n\n  return __assign(__assign({}, input), {\n    region: normalizeRegion(input.region)\n  });\n};\n\nvar normalizeRegion = function (region) {\n  if (typeof region === \"string\") {\n    var promisified_1 = Promise.resolve(region);\n    return function () {\n      return promisified_1;\n    };\n  }\n\n  return region;\n};","map":{"version":3,"names":["__assign","REGION_ENV_NAME","REGION_INI_NAME","NODE_REGION_CONFIG_OPTIONS","environmentVariableSelector","env","configFileSelector","profile","default","Error","NODE_REGION_CONFIG_FILE_OPTIONS","preferredFile","resolveRegionConfig","input","region","normalizeRegion","promisified_1","Promise","resolve"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-kinesis/node_modules/@aws-sdk/config-resolver/dist/es/RegionConfig.js"],"sourcesContent":["import { __assign } from \"tslib\";\nexport var REGION_ENV_NAME = \"AWS_REGION\";\nexport var REGION_INI_NAME = \"region\";\nexport var NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) { return env[REGION_ENV_NAME]; },\n    configFileSelector: function (profile) { return profile[REGION_INI_NAME]; },\n    default: function () {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport var NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\nexport var resolveRegionConfig = function (input) {\n    if (!input.region) {\n        throw new Error(\"Region is missing\");\n    }\n    return __assign(__assign({}, input), { region: normalizeRegion(input.region) });\n};\nvar normalizeRegion = function (region) {\n    if (typeof region === \"string\") {\n        var promisified_1 = Promise.resolve(region);\n        return function () { return promisified_1; };\n    }\n    return region;\n};\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,IAAIC,eAAe,GAAG,YAAtB;AACP,OAAO,IAAIC,eAAe,GAAG,QAAtB;AACP,OAAO,IAAIC,0BAA0B,GAAG;EACpCC,2BAA2B,EAAE,UAAUC,GAAV,EAAe;IAAE,OAAOA,GAAG,CAACJ,eAAD,CAAV;EAA8B,CADxC;EAEpCK,kBAAkB,EAAE,UAAUC,OAAV,EAAmB;IAAE,OAAOA,OAAO,CAACL,eAAD,CAAd;EAAkC,CAFvC;EAGpCM,OAAO,EAAE,YAAY;IACjB,MAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;EACH;AALmC,CAAjC;AAOP,OAAO,IAAIC,+BAA+B,GAAG;EACzCC,aAAa,EAAE;AAD0B,CAAtC;AAGP,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,KAAV,EAAiB;EAC9C,IAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;IACf,MAAM,IAAIL,KAAJ,CAAU,mBAAV,CAAN;EACH;;EACD,OAAOT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKa,KAAL,CAAT,EAAsB;IAAEC,MAAM,EAAEC,eAAe,CAACF,KAAK,CAACC,MAAP;EAAzB,CAAtB,CAAf;AACH,CALM;;AAMP,IAAIC,eAAe,GAAG,UAAUD,MAAV,EAAkB;EACpC,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC5B,IAAIE,aAAa,GAAGC,OAAO,CAACC,OAAR,CAAgBJ,MAAhB,CAApB;IACA,OAAO,YAAY;MAAE,OAAOE,aAAP;IAAuB,CAA5C;EACH;;EACD,OAAOF,MAAP;AACH,CAND"},"metadata":{},"sourceType":"module"}