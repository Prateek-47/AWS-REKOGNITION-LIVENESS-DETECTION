{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    numOrSizeSplits,\n    axis\n  } = attrs;\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice = slice({\n      inputs: {\n        x\n      },\n      attrs: {\n        begin,\n        size: xSliceSize\n      },\n      backend\n    });\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\nexport const splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV\n};","map":{"version":3,"names":["SplitV","util","backend_util","slice","splitV","args","inputs","attrs","backend","x","numOrSizeSplits","axis","$axis","parseAxisParam","shape","splitSizes","prepareSplitSize","begin","Array","length","fill","size","map","s","xSliceSize","xSlice","splitVConfig","kernelName","backendName","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SplitV.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const begin = new Array(x.shape.length).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const xSliceSize = [...size];\n        xSliceSize[$axis] = s;\n        const xSlice = slice({ inputs: { x }, attrs: { begin, size: xSliceSize }, backend });\n        begin[$axis] += s;\n        return xSlice;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'wasm',\n    kernelFunc: splitV\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACzB,MAAM;IAAEC,MAAF;IAAUC,KAAV;IAAiBC;EAAjB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAQH,MAAd;EACA,MAAM;IAAEI,eAAF;IAAmBC;EAAnB,IAA4BJ,KAAlC;EACA,MAAMK,KAAK,GAAGX,IAAI,CAACY,cAAL,CAAoBF,IAApB,EAA0BF,CAAC,CAACK,KAA5B,EAAmC,CAAnC,CAAd;EACA,MAAMC,UAAU,GAAGb,YAAY,CAACc,gBAAb,CAA8BP,CAA9B,EAAiCC,eAAjC,EAAkDE,KAAlD,CAAnB;EACA,MAAMK,KAAK,GAAG,IAAIC,KAAJ,CAAUT,CAAC,CAACK,KAAF,CAAQK,MAAlB,EAA0BC,IAA1B,CAA+B,CAA/B,CAAd;EACA,MAAMC,IAAI,GAAGZ,CAAC,CAACK,KAAF,CAAQX,KAAR,EAAb;EACA,OAAOY,UAAU,CAACO,GAAX,CAAeC,CAAC,IAAI;IACvB,MAAMC,UAAU,GAAG,CAAC,GAAGH,IAAJ,CAAnB;IACAG,UAAU,CAACZ,KAAD,CAAV,GAAoBW,CAApB;IACA,MAAME,MAAM,GAAGtB,KAAK,CAAC;MAAEG,MAAM,EAAE;QAAEG;MAAF,CAAV;MAAiBF,KAAK,EAAE;QAAEU,KAAF;QAASI,IAAI,EAAEG;MAAf,CAAxB;MAAqDhB;IAArD,CAAD,CAApB;IACAS,KAAK,CAACL,KAAD,CAAL,IAAgBW,CAAhB;IACA,OAAOE,MAAP;EACH,CANM,CAAP;AAOH;AACD,OAAO,MAAMC,YAAY,GAAG;EACxBC,UAAU,EAAE3B,MADY;EAExB4B,WAAW,EAAE,MAFW;EAGxBC,UAAU,EAAEzB;AAHY,CAArB"},"metadata":{},"sourceType":"module"}