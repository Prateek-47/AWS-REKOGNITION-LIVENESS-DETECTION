{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FaceLivenessDetector } from '@aws-amplify/ui-react-liveness';\nimport * as AWS from 'aws-sdk';\nimport awsmobile from './aws-exports';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"faceLivenessReactContainer\"];\nconst containerElementName = 'faceLivenessReactContainer';\nexport class FaceLivenessReactWrapperComponent {\n  constructor() {\n    var _this = this;\n\n    this.counter = 10;\n    this.sessionId = null;\n    this.livenessResults = new EventEmitter();\n    this.livenessErrors = new EventEmitter();\n    this.region = awsmobile['aws_project_region'];\n    this.handleAnalysisComplete = /*#__PURE__*/_asyncToGenerator(function* () {\n      var rekognition = new AWS.Rekognition();\n      var params = {\n        SessionId: _this.sessionId\n      };\n      rekognition.getFaceLivenessSessionResults(params).promise().then(data => {\n        _this.livenessResults.emit(data);\n\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    this.handleError = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (err) {\n        _this.livenessErrors.emit(err);\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  ngOnInit() {\n    console.log('Component Loaded' + this.sessionId);\n  }\n\n  ngOnChanges(changes) {\n    this.render();\n  }\n\n  ngAfterViewInit() {\n    this.render();\n  }\n\n  ngOnDestroy() {\n    ReactDOM.unmountComponentAtNode(this.containerRef.nativeElement);\n  }\n\n  render() {\n    const {\n      counter\n    } = this;\n    ReactDOM.render(React.createElement(React.StrictMode, null, React.createElement(\"div\", null, React.createElement(FaceLivenessDetector, {\n      sessionId: this.sessionId,\n      region: this.region,\n      onAnalysisComplete: this.handleAnalysisComplete,\n      onError: this.handleError\n    }))), this.containerRef.nativeElement);\n  }\n\n}\n\nFaceLivenessReactWrapperComponent.ɵfac = function FaceLivenessReactWrapperComponent_Factory(t) {\n  return new (t || FaceLivenessReactWrapperComponent)();\n};\n\nFaceLivenessReactWrapperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FaceLivenessReactWrapperComponent,\n  selectors: [[\"app-faceliveness-react-wrapper\"]],\n  viewQuery: function FaceLivenessReactWrapperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    counter: \"counter\",\n    sessionId: \"sessionId\"\n  },\n  outputs: {\n    livenessResults: \"livenessResults\",\n    livenessErrors: \"livenessErrors\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"faceLivenessReactContainer\", \"\"]],\n  template: function FaceLivenessReactWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"span\", null, 0);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAAA,SAGIA,UAHJ,EAIIC,YAJJ,EAUIC,aAVJ,QAaO,eAbP;AAcA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;;AAEA,MAAMC,oBAAoB,GAAG,4BAA7B;AAQA,OAAM,MAAOC,iCAAP,CAAwC;EAS1CC;IAAA;;IANgB,eAAU,EAAV;IACA,iBAAY,IAAZ;IACC,uBAAkB,IAAIT,YAAJ,EAAlB;IACA,sBAAiB,IAAIA,YAAJ,EAAjB;IACjB,cAASM,SAAS,CAAC,oBAAD,CAAlB;IAqBA,6DAAyB,aAAW;MAChC,IAAII,WAAW,GAAG,IAAIL,GAAG,CAACM,WAAR,EAAlB;MACA,IAAIC,MAAM,GAAG;QACTC,SAAS,EAAE,KAAI,CAACC;MADP,CAAb;MAGAJ,WAAW,CAACK,6BAAZ,CAA0CH,MAA1C,EAAkDI,OAAlD,GAA4DC,IAA5D,CAAiEC,IAAI,IAAG;QACpE,KAAI,CAACC,eAAL,CAAqBC,IAArB,CAA0BF,IAA1B;;QACAG,OAAO,CAACC,GAAR,CAAYJ,IAAZ;MACH,CAHD,EAGGK,KAHH,CAGSC,GAAG,IAAG;QACXH,OAAO,CAACC,GAAR,CAAYE,GAAZ;MACH,CALD;IAMH,CAXD;;IAaA;MAAA,8BAAc,WAAOA,GAAP,EAAmB;QAC7B,KAAI,CAACC,cAAL,CAAoBL,IAApB,CAAyBI,GAAzB;MACH,CAFD;;MAAA;QAAA;MAAA;IAAA;EA/BC;;EAEDE,QAAQ;IACJL,OAAO,CAACC,GAAR,CAAY,qBAAqB,KAAKR,SAAtC;EACH;;EAEDa,WAAW,CAACC,OAAD,EAAuB;IAC9B,KAAKC,MAAL;EACH;;EAEDC,eAAe;IACX,KAAKD,MAAL;EACH;;EAEDE,WAAW;IACP5B,QAAQ,CAAC6B,sBAAT,CAAgC,KAAKC,YAAL,CAAkBC,aAAlD;EACH;;EAoBOL,MAAM;IACV,MAAM;MAAEM;IAAF,IAAc,IAApB;IAEAhC,QAAQ,CAAC0B,MAAT,CACI3B,oBAACA,KAAK,CAACkC,UAAP,EAAiB,IAAjB,EACIlC,iCACIA,oBAACE,oBAAD,EAAqB;MAACU,SAAS,EAAE,KAAKA,SAAjB;MAA4BuB,MAAM,EAAE,KAAKA,MAAzC;MAAiDC,kBAAkB,EAAE,KAAKC,sBAA1E;MACrBC,OAAO,EAAE,KAAKC;IADO,CAArB,CADJ,CADJ,CADJ,EAQM,KAAKR,YAAL,CAAkBC,aARxB;EASH;;AA1DyC;;;mBAAjC1B;AAAiC;;;QAAjCA;EAAiCkC;EAAAC;IAAA","names":["ElementRef","EventEmitter","SimpleChanges","React","ReactDOM","FaceLivenessDetector","AWS","awsmobile","containerElementName","FaceLivenessReactWrapperComponent","constructor","rekognition","Rekognition","params","SessionId","sessionId","getFaceLivenessSessionResults","promise","then","data","livenessResults","emit","console","log","catch","err","livenessErrors","ngOnInit","ngOnChanges","changes","render","ngAfterViewInit","ngOnDestroy","unmountComponentAtNode","containerRef","nativeElement","counter","StrictMode","region","onAnalysisComplete","handleAnalysisComplete","onError","handleError","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\aws-rekognition-liveness-detection-main\\src\\FaceLivenessReactWrapperComponent.tsx"],"sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FaceLivenessDetector } from '@aws-amplify/ui-react-liveness';\nimport * as AWS from 'aws-sdk';\nimport awsmobile from './aws-exports';\n\nconst containerElementName = 'faceLivenessReactContainer';\n\n@Component({\n    selector: 'app-faceliveness-react-wrapper',\n    template: `<span #${containerElementName}></span>`,\n    // styleUrls: [''],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FaceLivenessReactWrapperComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n    @ViewChild(containerElementName, { static: true }) containerRef!: ElementRef;\n\n    @Input() public counter = 10;\n    @Input() public sessionId = null;\n    @Output() public livenessResults = new EventEmitter<any>();\n    @Output() public livenessErrors = new EventEmitter<any>();\n    region = awsmobile['aws_project_region']\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        console.log('Component Loaded' + this.sessionId)\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.render();\n    }\n\n    ngAfterViewInit() {\n        this.render();\n    }\n\n    ngOnDestroy() {\n        ReactDOM.unmountComponentAtNode(this.containerRef.nativeElement);\n    }\n\n    handleAnalysisComplete = async () => {\n        var rekognition = new AWS.Rekognition();\n        var params = {\n            SessionId: this.sessionId\n        };\n        rekognition.getFaceLivenessSessionResults(params).promise().then(data => {\n            this.livenessResults.emit(data);\n            console.log(data);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    handleError = async (err: any) => {\n        this.livenessErrors.emit(err);\n    }\n\n\n    private render() {\n        const { counter } = this;\n\n        ReactDOM.render(\n            <React.StrictMode>\n                <div>\n                    <FaceLivenessDetector sessionId={this.sessionId} region={this.region} onAnalysisComplete={this.handleAnalysisComplete} \n                    onError={this.handleError}\n                    />\n                </div>\n            </React.StrictMode>\n            , this.containerRef.nativeElement);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}