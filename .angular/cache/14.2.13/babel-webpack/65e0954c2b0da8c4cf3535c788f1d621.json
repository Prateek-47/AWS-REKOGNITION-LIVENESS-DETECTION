{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\n\nexport var getHashedData = function (key, data) {\n  var sha256 = new Sha256(key);\n  sha256.update(data); // TODO: V6 flip to async digest\n\n  var hashedData = sha256.digestSync();\n  return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\n\nexport var getHashedDataAsHex = function (key, data) {\n  var hashedData = getHashedData(key, data);\n  return toHex(hashedData);\n};","map":{"version":3,"names":["Sha256","toHex","getHashedData","key","data","sha256","update","hashedData","digestSync","getHashedDataAsHex"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nexport var getHashedData = function (key, data) {\n    var sha256 = new Sha256(key);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    var hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nexport var getHashedDataAsHex = function (key, data) {\n    var hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,aAAa,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqB;EAC5C,IAAIC,MAAM,GAAG,IAAIL,MAAJ,CAAWG,GAAX,CAAb;EACAE,MAAM,CAACC,MAAP,CAAcF,IAAd,EAF4C,CAG5C;;EACA,IAAIG,UAAU,GAAGF,MAAM,CAACG,UAAP,EAAjB;EACA,OAAOD,UAAP;AACH,CANM;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIE,kBAAkB,GAAG,UAAUN,GAAV,EAAeC,IAAf,EAAqB;EACjD,IAAIG,UAAU,GAAGL,aAAa,CAACC,GAAD,EAAMC,IAAN,CAA9B;EACA,OAAOH,KAAK,CAACM,UAAD,CAAZ;AACH,CAHM"},"metadata":{},"sourceType":"module"}