{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\n\nvar RestClient =\n/** @class */\nfunction () {\n  /**\n   * @param {RestClientOptions} [options] - Instance options\n   */\n  function RestClient(options) {\n    this._region = 'us-east-1'; // this will be updated by endpoint function\n\n    this._service = 'execute-api'; // this can be updated by endpoint function\n\n    this._custom_header = undefined; // this can be updated by endpoint function\n\n    /**\n     * This weak map provides functionality to let clients cancel\n     * in-flight axios requests. https://github.com/axios/axios#cancellation\n     *\n     * 1. For every axios request, a unique cancel token is generated and added in the request.\n     * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n     * 3. The promise is returned to the client.\n     * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n     * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n     * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n     * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n     *\n     * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n     */\n\n    this._cancelTokenMap = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n\n    if (this._cancelTokenMap == null) {\n      this._cancelTokenMap = new WeakMap();\n    }\n  }\n  /**\n  * Update AWS credentials\n  * @param {AWSCredentials} credentials - AWS credentials\n  *\n  updateCredentials(credentials: AWSCredentials) {\n      this.options.credentials = credentials;\n  }\n  */\n\n  /**\n   * Basic HTTP request. Customizable\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {string} method - Request HTTP method\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parsed_url, url, region, service, custom_header, params, libraryHeaders, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl, credentials, error_1, signedParams, response, error_2, headers, dateHeader, responseDate, requestDate, rawClientDate;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            logger.debug(method, urlOrApiInfo);\n            region = 'us-east-1';\n            service = 'execute-api';\n            custom_header = undefined;\n\n            if (typeof urlOrApiInfo === 'string') {\n              parsed_url = this._parseUrl(urlOrApiInfo);\n              url = urlOrApiInfo;\n            } else {\n              url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service;\n              parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n            }\n\n            params = {\n              method: method,\n              url: url,\n              host: parsed_url.host,\n              path: parsed_url.path,\n              headers: {},\n              data: null,\n              responseType: 'json',\n              timeout: 0,\n              cancelToken: null\n            };\n            libraryHeaders = {};\n            initParams = Object.assign({}, init);\n            isAllResponse = initParams.response;\n\n            if (initParams.body) {\n              if (typeof FormData === 'function' && initParams.body instanceof FormData) {\n                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                params.data = initParams.body;\n              } else {\n                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                params.data = JSON.stringify(initParams.body);\n              }\n            }\n\n            if (initParams.responseType) {\n              params.responseType = initParams.responseType;\n            }\n\n            if (initParams.withCredentials) {\n              params['withCredentials'] = initParams.withCredentials;\n            }\n\n            if (initParams.timeout) {\n              params.timeout = initParams.timeout;\n            }\n\n            if (initParams.cancellableToken) {\n              params.cancelToken = initParams.cancellableToken.token;\n            }\n\n            params['signerServiceInfo'] = initParams.signerServiceInfo;\n            if (!(typeof custom_header === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , custom_header()];\n\n          case 1:\n            _a = _c.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = undefined;\n            _c.label = 3;\n\n          case 3:\n            custom_header_obj = _a;\n            params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n            _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n            params.url = format(__assign(__assign({}, parsedUrl), {\n              query: __assign(__assign({}, parsedUrl.query), initParams.queryStringParameters || {})\n            })); // Do not sign the request if client has added 'Authorization' header,\n            // which means custom authorizer.\n\n            if (typeof params.headers['Authorization'] !== 'undefined') {\n              params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                if (params.headers[k]) {\n                  acc[k] = params.headers[k];\n                }\n\n                return acc; // tslint:disable-next-line:align\n              }, {});\n              return [2\n              /*return*/\n              , this._request(params, isAllResponse)];\n            }\n\n            _c.label = 4;\n\n          case 4:\n            _c.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this.Credentials.get()];\n\n          case 5:\n            credentials = _c.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            error_1 = _c.sent();\n            logger.debug('No credentials available, the request will be unsigned');\n            return [2\n            /*return*/\n            , this._request(params, isAllResponse)];\n\n          case 7:\n            _c.trys.push([7, 9,, 10]);\n\n            signedParams = this._sign(__assign({}, params), credentials, {\n              region: region,\n              service: service\n            });\n            return [4\n            /*yield*/\n            , axios(signedParams)];\n\n          case 8:\n            response = _c.sent();\n            return [2\n            /*return*/\n            , isAllResponse ? response : response.data];\n\n          case 9:\n            error_2 = _c.sent();\n            logger.debug(error_2);\n\n            if (DateUtils.isClockSkewError(error_2)) {\n              headers = error_2.response.headers;\n              dateHeader = headers && (headers.date || headers.Date);\n              responseDate = new Date(dateHeader);\n              requestDate = DateUtils.getDateFromHeaderString(signedParams.headers['x-amz-date']); // Compare local clock to the server clock\n\n              if (DateUtils.isClockSkewed(responseDate)) {\n                rawClientDate = requestDate.getTime() - DateUtils.getClockOffset();\n                DateUtils.setClockOffset(responseDate.getTime() - rawClientDate);\n                return [2\n                /*return*/\n                , this.ajax(urlOrApiInfo, method, init)];\n              }\n            }\n\n            throw error_2;\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * GET HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {JSON} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.get = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'GET', init);\n  };\n  /**\n   * PUT HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.put = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PUT', init);\n  };\n  /**\n   * PATCH HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.patch = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'PATCH', init);\n  };\n  /**\n   * POST HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.post = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'POST', init);\n  };\n  /**\n   * DELETE HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.del = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'DELETE', init);\n  };\n  /**\n   * HEAD HTTP request\n   * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n   * @param {json} init - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestClient.prototype.head = function (urlOrApiInfo, init) {\n    return this.ajax(urlOrApiInfo, 'HEAD', init);\n  };\n  /**\n   * Cancel an inflight API request\n   * @param {Promise<any>} request - The request promise to cancel\n   * @param {string} [message] - A message to include in the cancelation exception\n   */\n\n\n  RestClient.prototype.cancel = function (request, message) {\n    var source = this._cancelTokenMap.get(request);\n\n    if (source) {\n      source.cancel(message);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  RestClient.prototype.hasCancelToken = function (request) {\n    return this._cancelTokenMap.has(request);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  RestClient.prototype.isCancel = function (error) {\n    return axios.isCancel(error);\n  };\n  /**\n   * Retrieves a new and unique cancel token which can be\n   * provided in an axios request to be cancelled later.\n   */\n\n\n  RestClient.prototype.getCancellableToken = function () {\n    return axios.CancelToken.source();\n  };\n  /**\n   * Updates the weakmap with a response promise and its\n   * cancel token such that the cancel token can be easily\n   * retrieved (and used for cancelling the request)\n   */\n\n\n  RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n    this._cancelTokenMap.set(promise, cancelTokenSource);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  RestClient.prototype.endpoint = function (apiName) {\n    var _this = this;\n\n    var cloud_logic_array = this._options.endpoints;\n    var response = '';\n\n    if (!Array.isArray(cloud_logic_array)) {\n      return response;\n    }\n\n    cloud_logic_array.forEach(function (v) {\n      if (v.name === apiName) {\n        response = v.endpoint;\n\n        if (typeof v.region === 'string') {\n          _this._region = v.region;\n        } else if (typeof _this._options.region === 'string') {\n          _this._region = _this._options.region;\n        }\n\n        if (typeof v.service === 'string') {\n          _this._service = v.service || 'execute-api';\n        } else {\n          _this._service = 'execute-api';\n        }\n\n        if (typeof v.custom_header === 'function') {\n          _this._custom_header = v.custom_header;\n        } else {\n          _this._custom_header = undefined;\n        }\n      }\n    });\n    return response;\n  };\n  /** private methods **/\n\n\n  RestClient.prototype._sign = function (params, credentials, _a) {\n    var service = _a.service,\n        region = _a.region;\n\n    var signerServiceInfoParams = params.signerServiceInfo,\n        otherParams = __rest(params, [\"signerServiceInfo\"]);\n\n    var endpoint_region = region || this._region || this._options.region;\n    var endpoint_service = service || this._service || this._options.service;\n    var creds = {\n      secret_key: credentials.secretAccessKey,\n      access_key: credentials.accessKeyId,\n      session_token: credentials.sessionToken\n    };\n    var endpointInfo = {\n      region: endpoint_region,\n      service: endpoint_service\n    };\n    var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n    var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n\n    if (signed_params.data) {\n      signed_params.body = signed_params.data;\n    }\n\n    logger.debug('Signed Request: ', signed_params);\n    delete signed_params.headers['host'];\n    return signed_params;\n  };\n\n  RestClient.prototype._request = function (params, isAllResponse) {\n    if (isAllResponse === void 0) {\n      isAllResponse = false;\n    }\n\n    return axios(params).then(function (response) {\n      return isAllResponse ? response : response.data;\n    }).catch(function (error) {\n      logger.debug(error);\n      throw error;\n    });\n  };\n\n  RestClient.prototype._parseUrl = function (url) {\n    var parts = url.split('/');\n    return {\n      host: parts[2],\n      path: '/' + parts.slice(3).join('/')\n    };\n  };\n\n  return RestClient;\n}();\n\nexport { RestClient };","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","ConsoleLogger","Logger","Credentials","DateUtils","Signer","axios","parse","format","logger","RestClient","options","_region","_service","_custom_header","undefined","_cancelTokenMap","_options","debug","WeakMap","prototype","ajax","urlOrApiInfo","method","init","parsed_url","url","region","service","custom_header","params","libraryHeaders","initParams","isAllResponse","custom_header_obj","_a","_b","search","parsedUrl","credentials","error_1","signedParams","response","error_2","headers","dateHeader","responseDate","requestDate","rawClientDate","_c","label","_parseUrl","endpoint","host","path","data","responseType","timeout","cancelToken","Object","assign","body","FormData","JSON","stringify","withCredentials","cancellableToken","token","signerServiceInfo","sent","query","queryStringParameters","keys","reduce","acc","k","_request","trys","push","get","_sign","isClockSkewError","date","Date","getDateFromHeaderString","isClockSkewed","getTime","getClockOffset","setClockOffset","put","patch","post","del","head","cancel","request","message","source","hasCancelToken","has","isCancel","error","getCancellableToken","CancelToken","updateRequestToBeCancellable","promise","cancelTokenSource","set","apiName","_this","cloud_logic_array","endpoints","Array","isArray","forEach","v","name","signerServiceInfoParams","otherParams","endpoint_region","endpoint_service","creds","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","endpointInfo","signed_params","sign","then","catch","parts","split","slice","join"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/api-rest/lib-esm/RestClient.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { ConsoleLogger as Logger, Credentials, DateUtils, Signer, } from '@aws-amplify/core';\nimport axios from 'axios';\nimport { parse, format } from 'url';\nvar logger = new Logger('RestClient');\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nvar RestClient = /** @class */ (function () {\n    /**\n     * @param {RestClientOptions} [options] - Instance options\n     */\n    function RestClient(options) {\n        this._region = 'us-east-1'; // this will be updated by endpoint function\n        this._service = 'execute-api'; // this can be updated by endpoint function\n        this._custom_header = undefined; // this can be updated by endpoint function\n        /**\n         * This weak map provides functionality to let clients cancel\n         * in-flight axios requests. https://github.com/axios/axios#cancellation\n         *\n         * 1. For every axios request, a unique cancel token is generated and added in the request.\n         * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n         * 3. The promise is returned to the client.\n         * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n         * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n         * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n         * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n         *\n         * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n         */\n        this._cancelTokenMap = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n        if (this._cancelTokenMap == null) {\n            this._cancelTokenMap = new WeakMap();\n        }\n    }\n    /**\n    * Update AWS credentials\n    * @param {AWSCredentials} credentials - AWS credentials\n    *\n    updateCredentials(credentials: AWSCredentials) {\n        this.options.credentials = credentials;\n    }\n*/\n    /**\n     * Basic HTTP request. Customizable\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {string} method - Request HTTP method\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.ajax = function (urlOrApiInfo, method, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsed_url, url, region, service, custom_header, params, libraryHeaders, initParams, isAllResponse, custom_header_obj, _a, _b, search, parsedUrl, credentials, error_1, signedParams, response, error_2, headers, dateHeader, responseDate, requestDate, rawClientDate;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        logger.debug(method, urlOrApiInfo);\n                        region = 'us-east-1';\n                        service = 'execute-api';\n                        custom_header = undefined;\n                        if (typeof urlOrApiInfo === 'string') {\n                            parsed_url = this._parseUrl(urlOrApiInfo);\n                            url = urlOrApiInfo;\n                        }\n                        else {\n                            (url = urlOrApiInfo.endpoint, custom_header = urlOrApiInfo.custom_header, region = urlOrApiInfo.region, service = urlOrApiInfo.service);\n                            parsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n                        }\n                        params = {\n                            method: method,\n                            url: url,\n                            host: parsed_url.host,\n                            path: parsed_url.path,\n                            headers: {},\n                            data: null,\n                            responseType: 'json',\n                            timeout: 0,\n                            cancelToken: null,\n                        };\n                        libraryHeaders = {};\n                        initParams = Object.assign({}, init);\n                        isAllResponse = initParams.response;\n                        if (initParams.body) {\n                            if (typeof FormData === 'function' &&\n                                initParams.body instanceof FormData) {\n                                libraryHeaders['Content-Type'] = 'multipart/form-data';\n                                params.data = initParams.body;\n                            }\n                            else {\n                                libraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n                                params.data = JSON.stringify(initParams.body);\n                            }\n                        }\n                        if (initParams.responseType) {\n                            params.responseType = initParams.responseType;\n                        }\n                        if (initParams.withCredentials) {\n                            params['withCredentials'] = initParams.withCredentials;\n                        }\n                        if (initParams.timeout) {\n                            params.timeout = initParams.timeout;\n                        }\n                        if (initParams.cancellableToken) {\n                            params.cancelToken = initParams.cancellableToken.token;\n                        }\n                        params['signerServiceInfo'] = initParams.signerServiceInfo;\n                        if (!(typeof custom_header === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, custom_header()];\n                    case 1:\n                        _a = _c.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = undefined;\n                        _c.label = 3;\n                    case 3:\n                        custom_header_obj = _a;\n                        params.headers = __assign(__assign(__assign({}, libraryHeaders), custom_header_obj), initParams.headers);\n                        _b = parse(url, true, true), search = _b.search, parsedUrl = __rest(_b, [\"search\"]);\n                        params.url = format(__assign(__assign({}, parsedUrl), { query: __assign(__assign({}, parsedUrl.query), (initParams.queryStringParameters || {})) }));\n                        // Do not sign the request if client has added 'Authorization' header,\n                        // which means custom authorizer.\n                        if (typeof params.headers['Authorization'] !== 'undefined') {\n                            params.headers = Object.keys(params.headers).reduce(function (acc, k) {\n                                if (params.headers[k]) {\n                                    acc[k] = params.headers[k];\n                                }\n                                return acc;\n                                // tslint:disable-next-line:align\n                            }, {});\n                            return [2 /*return*/, this._request(params, isAllResponse)];\n                        }\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.Credentials.get()];\n                    case 5:\n                        credentials = _c.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        error_1 = _c.sent();\n                        logger.debug('No credentials available, the request will be unsigned');\n                        return [2 /*return*/, this._request(params, isAllResponse)];\n                    case 7:\n                        _c.trys.push([7, 9, , 10]);\n                        signedParams = this._sign(__assign({}, params), credentials, {\n                            region: region,\n                            service: service,\n                        });\n                        return [4 /*yield*/, axios(signedParams)];\n                    case 8:\n                        response = _c.sent();\n                        return [2 /*return*/, isAllResponse ? response : response.data];\n                    case 9:\n                        error_2 = _c.sent();\n                        logger.debug(error_2);\n                        if (DateUtils.isClockSkewError(error_2)) {\n                            headers = error_2.response.headers;\n                            dateHeader = headers && (headers.date || headers.Date);\n                            responseDate = new Date(dateHeader);\n                            requestDate = DateUtils.getDateFromHeaderString(signedParams.headers['x-amz-date']);\n                            // Compare local clock to the server clock\n                            if (DateUtils.isClockSkewed(responseDate)) {\n                                rawClientDate = requestDate.getTime() - DateUtils.getClockOffset();\n                                DateUtils.setClockOffset(responseDate.getTime() - rawClientDate);\n                                return [2 /*return*/, this.ajax(urlOrApiInfo, method, init)];\n                            }\n                        }\n                        throw error_2;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * GET HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {JSON} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.get = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'GET', init);\n    };\n    /**\n     * PUT HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.put = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'PUT', init);\n    };\n    /**\n     * PATCH HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.patch = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'PATCH', init);\n    };\n    /**\n     * POST HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.post = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'POST', init);\n    };\n    /**\n     * DELETE HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.del = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'DELETE', init);\n    };\n    /**\n     * HEAD HTTP request\n     * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n     * @param {json} init - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestClient.prototype.head = function (urlOrApiInfo, init) {\n        return this.ajax(urlOrApiInfo, 'HEAD', init);\n    };\n    /**\n     * Cancel an inflight API request\n     * @param {Promise<any>} request - The request promise to cancel\n     * @param {string} [message] - A message to include in the cancelation exception\n     */\n    RestClient.prototype.cancel = function (request, message) {\n        var source = this._cancelTokenMap.get(request);\n        if (source) {\n            source.cancel(message);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    RestClient.prototype.hasCancelToken = function (request) {\n        return this._cancelTokenMap.has(request);\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestClient.prototype.isCancel = function (error) {\n        return axios.isCancel(error);\n    };\n    /**\n     * Retrieves a new and unique cancel token which can be\n     * provided in an axios request to be cancelled later.\n     */\n    RestClient.prototype.getCancellableToken = function () {\n        return axios.CancelToken.source();\n    };\n    /**\n     * Updates the weakmap with a response promise and its\n     * cancel token such that the cancel token can be easily\n     * retrieved (and used for cancelling the request)\n     */\n    RestClient.prototype.updateRequestToBeCancellable = function (promise, cancelTokenSource) {\n        this._cancelTokenMap.set(promise, cancelTokenSource);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestClient.prototype.endpoint = function (apiName) {\n        var _this = this;\n        var cloud_logic_array = this._options.endpoints;\n        var response = '';\n        if (!Array.isArray(cloud_logic_array)) {\n            return response;\n        }\n        cloud_logic_array.forEach(function (v) {\n            if (v.name === apiName) {\n                response = v.endpoint;\n                if (typeof v.region === 'string') {\n                    _this._region = v.region;\n                }\n                else if (typeof _this._options.region === 'string') {\n                    _this._region = _this._options.region;\n                }\n                if (typeof v.service === 'string') {\n                    _this._service = v.service || 'execute-api';\n                }\n                else {\n                    _this._service = 'execute-api';\n                }\n                if (typeof v.custom_header === 'function') {\n                    _this._custom_header = v.custom_header;\n                }\n                else {\n                    _this._custom_header = undefined;\n                }\n            }\n        });\n        return response;\n    };\n    /** private methods **/\n    RestClient.prototype._sign = function (params, credentials, _a) {\n        var service = _a.service, region = _a.region;\n        var signerServiceInfoParams = params.signerServiceInfo, otherParams = __rest(params, [\"signerServiceInfo\"]);\n        var endpoint_region = region || this._region || this._options.region;\n        var endpoint_service = service || this._service || this._options.service;\n        var creds = {\n            secret_key: credentials.secretAccessKey,\n            access_key: credentials.accessKeyId,\n            session_token: credentials.sessionToken,\n        };\n        var endpointInfo = {\n            region: endpoint_region,\n            service: endpoint_service,\n        };\n        var signerServiceInfo = Object.assign(endpointInfo, signerServiceInfoParams);\n        var signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n        if (signed_params.data) {\n            signed_params.body = signed_params.data;\n        }\n        logger.debug('Signed Request: ', signed_params);\n        delete signed_params.headers['host'];\n        return signed_params;\n    };\n    RestClient.prototype._request = function (params, isAllResponse) {\n        if (isAllResponse === void 0) { isAllResponse = false; }\n        return axios(params)\n            .then(function (response) { return (isAllResponse ? response : response.data); })\n            .catch(function (error) {\n            logger.debug(error);\n            throw error;\n        });\n    };\n    RestClient.prototype._parseUrl = function (url) {\n        var parts = url.split('/');\n        return {\n            host: parts[2],\n            path: '/' + parts.slice(3).join('/'),\n        };\n    };\n    return RestClient;\n}());\nexport { RestClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}