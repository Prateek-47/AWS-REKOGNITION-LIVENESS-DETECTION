{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { ConsoleLogger as Logger, Credentials, StorageHelper, Hub, parseAWSExports, StorageAction } from '@aws-amplify/core';\nimport { copyObject, getObject, getPresignedGetObjectUrl, headObject, deleteObject, listObjectsV2, SERVICE_NAME as S3_SERVICE_NAME } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from '../AwsClients/S3/utils';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { getPrefix, loadS3Config } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\n\nexport var AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    var _this = this;\n\n    this._config = config ? config : {};\n    this._storage = new StorageHelper().getStorage();\n    Hub.listen('auth', function (data) {\n      var payload = data.payload;\n\n      if (payload.event === 'signOut' || payload.event === 'signIn') {\n        _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n      }\n    });\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n\n  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n    var _a;\n\n    var s3Config = addTaskInput.s3Config,\n        emitter = addTaskInput.emitter,\n        key = addTaskInput.key,\n        file = addTaskInput.file,\n        params = addTaskInput.params;\n    var progressCallback = config.progressCallback,\n        completeCallback = config.completeCallback,\n        errorCallback = config.errorCallback,\n        track = (_a = config.track, _a === void 0 ? false : _a);\n\n    if (!(file instanceof Blob)) {\n      throw new Error(StorageErrorStrings.INVALID_BLOB);\n    }\n\n    emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          progressCallback(event);\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n      if (completeCallback) {\n        if (typeof completeCallback === 'function') {\n          completeCallback(event);\n        } else {\n          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.ERROR, function (err) {\n      if (errorCallback) {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        } else {\n          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n        }\n      }\n    }); // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n    // when its doing a final check with _listSingleFile function\n\n    var prefixPromise = Credentials.get().then(function (credentials) {\n      var cred = Credentials.shear(credentials);\n      return getPrefix(__assign(__assign({}, config), {\n        level: addTaskInput.accessLevel,\n        credentials: cred\n      }));\n    });\n    var task = new AWSS3UploadTask({\n      s3Config: s3Config,\n      file: file,\n      emitter: emitter,\n      level: addTaskInput.accessLevel,\n      storage: this._storage,\n      params: params,\n      prefixPromise: prefixPromise\n    });\n    dispatchStorageEvent(track, 'upload', {\n      method: 'put',\n      result: 'success'\n    }, null, \"Upload Task created successfully for \".concat(key)); // automatically start the upload task\n\n    task.resume();\n    return task;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n\n\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, srcLevel, srcIdentityId, srcKey, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, error_1;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            srcLevel = (_a = src.level, _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a), srcIdentityId = src.identityId, srcKey = src.key;\n            destLevel = (_b = dest.level, _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b), destKey = dest.key;\n\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \".concat(srcLevel));\n            }\n\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = \"\".concat(bucket, \"/\").concat(srcPrefix).concat(srcKey);\n            finalDestKey = \"\".concat(destPrefix).concat(destKey);\n            logger.debug(\"copying \".concat(finalSrcKey, \" to \").concat(finalDestKey));\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n\n            if (acl) params.ACL = acl;\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , copyObject(loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.Copy\n            })), params)];\n\n          case 3:\n            _c.sent();\n\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \".concat(srcKey, \" to \").concat(destKey));\n            return [2\n            /*return*/\n            , {\n              key: destKey\n            }];\n\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \".concat(srcKey, \" to \").concat(destKey));\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, validateObjectExistence, prefix, final_key, emitter, s3Config, params, response, error_2, error_3, url, _b, _c, error_4;\n\n      var _d, _e;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _f.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback, validateObjectExistence = (_d = opt.validateObjectExistence, _d === void 0 ? false : _d);\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              emitter: emitter,\n              storageAction: StorageAction.Get\n            }));\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            if (!(download === true)) return [3\n            /*break*/\n            , 5];\n            _f.label = 2;\n\n          case 2:\n            _f.trys.push([2, 4,, 5]);\n\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n\n            return [4\n            /*yield*/\n            , getObject(s3Config, params)];\n\n          case 3:\n            response = _f.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \".concat(key));\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_2 = _f.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \".concat(error_2.message));\n            throw error_2;\n\n          case 5:\n            if (!validateObjectExistence) return [3\n            /*break*/\n            , 9];\n            _f.label = 6;\n\n          case 6:\n            _f.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , headObject(s3Config, params)];\n\n          case 7:\n            _f.sent();\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            error_3 = _f.sent();\n\n            if (((_a = error_3.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n              dispatchStorageEvent(track, 'getSignedUrl', {\n                method: 'get',\n                result: 'failed'\n              }, null, \"\".concat(key, \" not found\"));\n            }\n\n            throw error_3;\n\n          case 9:\n            _f.trys.push([9, 12,, 13]);\n\n            _b = getPresignedGetObjectUrl;\n            _c = [__assign({}, s3Config)];\n            _e = {\n              expiration: expires || DEFAULT_PRESIGN_EXPIRATION\n            };\n            return [4\n            /*yield*/\n            , s3Config.credentials()];\n\n          case 10:\n            return [4\n            /*yield*/\n            , _b.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.credentials = _f.sent(), _e.signingRegion = s3Config.region, _e.signingService = S3_SERVICE_NAME, _e)])), params])];\n\n          case 11:\n            url = _f.sent();\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \".concat(url));\n            return [2\n            /*return*/\n            , url];\n\n          case 12:\n            error_4 = _f.sent();\n            logger.warn('get signed url error', error_4);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \".concat(key));\n            throw error_4;\n\n          case 13:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get Properties of the object\n   *\n   * @param {string} key - key of the object\n   * @param {S3ProviderGetPropertiesConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderGetPropertiesOutput>} - A promise resolves to contentType,\n   * contentLength, eTag, lastModified, metadata\n   */\n\n\n  AWSS3Provider.prototype.getProperties = function (key, config) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, prefix, final_key, s3Config, params, response, getPropertiesResponse, error_5;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = (_b = opt.track, _b === void 0 ? false : _b), SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug(\"getProperties \".concat(key, \" from \").concat(final_key));\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.GetProperties\n            }));\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , headObject(s3Config, params)];\n\n          case 3:\n            response = _c.sent();\n            getPropertiesResponse = {\n              contentLength: response.ContentLength,\n              contentType: response.ContentType,\n              eTag: response.ETag,\n              lastModified: response.LastModified,\n              metadata: response.Metadata\n            };\n            dispatchStorageEvent(track, 'getProperties', {\n              method: 'getProperties',\n              result: 'success'\n            }, null, \"getProperties successful for \".concat(key));\n            return [2\n            /*return*/\n            , getPropertiesResponse];\n\n          case 4:\n            error_5 = _c.sent();\n\n            if (((_a = error_5.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n              dispatchStorageEvent(track, 'getProperties', {\n                method: 'getProperties',\n                result: 'failed'\n              }, null, \"\".concat(key, \" not found\"));\n            }\n\n            throw error_5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param key - key of the object\n   * @param object - File to be put in Amazon S3 bucket\n   * @param [config] - Optional configuration for the underlying S3 command\n   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n   * success.\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    var opt = Object.assign({}, this._config, config);\n    var bucket = opt.bucket,\n        track = opt.track,\n        progressCallback = opt.progressCallback,\n        level = opt.level,\n        resumable = opt.resumable;\n    var contentType = opt.contentType,\n        contentDisposition = opt.contentDisposition,\n        contentEncoding = opt.contentEncoding,\n        cacheControl = opt.cacheControl,\n        expires = opt.expires,\n        metadata = opt.metadata,\n        tagging = opt.tagging,\n        acl = opt.acl;\n    var serverSideEncryption = opt.serverSideEncryption,\n        SSECustomerAlgorithm = opt.SSECustomerAlgorithm,\n        SSECustomerKey = opt.SSECustomerKey,\n        SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,\n        SSEKMSKeyId = opt.SSEKMSKeyId;\n    var type = contentType ? contentType : 'binary/octet-stream';\n    var params = {\n      Bucket: bucket,\n      Key: key,\n      Body: object,\n      ContentType: type\n    };\n\n    if (cacheControl) {\n      params.CacheControl = cacheControl;\n    }\n\n    if (contentDisposition) {\n      params.ContentDisposition = contentDisposition;\n    }\n\n    if (contentEncoding) {\n      params.ContentEncoding = contentEncoding;\n    }\n\n    if (expires) {\n      params.Expires = expires;\n    }\n\n    if (metadata) {\n      params.Metadata = metadata;\n    }\n\n    if (tagging) {\n      params.Tagging = tagging;\n    }\n\n    if (serverSideEncryption) {\n      params.ServerSideEncryption = serverSideEncryption;\n    }\n\n    if (SSECustomerAlgorithm) {\n      params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n    }\n\n    if (SSECustomerKey) {\n      params.SSECustomerKey = SSECustomerKey;\n    }\n\n    if (SSECustomerKeyMD5) {\n      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n    }\n\n    if (SSEKMSKeyId) {\n      params.SSEKMSKeyId = SSEKMSKeyId;\n    }\n\n    var emitter = new events.EventEmitter();\n    var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n    if (acl) {\n      params.ACL = acl;\n    }\n\n    if (resumable === true) {\n      var s3Config = loadS3Config(__assign(__assign({}, opt), {\n        storageAction: StorageAction.Put\n      }));\n      var addTaskInput = {\n        bucket: bucket,\n        key: key,\n        s3Config: s3Config,\n        file: object,\n        emitter: emitter,\n        accessLevel: level,\n        params: params\n      }; // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n\n      return this.startResumableUpload(addTaskInput, config);\n    }\n\n    try {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            progressCallback(progress);\n          });\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n\n      return uploader.upload().then(function (response) {\n        logger.debug('upload result', response);\n        dispatchStorageEvent(track, 'upload', {\n          method: 'put',\n          result: 'success'\n        }, null, \"Upload success for \".concat(key));\n        return {\n          key: key\n        };\n      });\n    } catch (error) {\n      logger.warn('error uploading', error);\n      dispatchStorageEvent(track, 'upload', {\n        method: 'put',\n        result: 'failed'\n      }, null, \"Error uploading \".concat(key));\n      throw error;\n    }\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, params, s3Config, response, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.Remove\n            }));\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , deleteObject(s3Config, params)];\n\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \".concat(key, \" successfully\"));\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_6 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \".concat(key, \" failed with \").concat(error_6));\n            throw error_6;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._list = function (params, opt, prefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var list, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            list = {\n              results: [],\n              hasNextToken: false\n            };\n            return [4\n            /*yield*/\n            , listObjectsV2(loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.List\n            })), __assign({}, params))];\n\n          case 1:\n            response = _a.sent();\n\n            if (response && response.Contents) {\n              list.results = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n              list.nextToken = response.NextContinuationToken;\n              list.hasNextToken = response.IsTruncated;\n            }\n\n            return [2\n            /*return*/\n            , list];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified\n   * and file size for all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, pageSize, nextToken, prefix, final_path, list, MAX_PAGE_SIZE, listResult, params, error_7;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, pageSize = opt.pageSize, nextToken = opt.nextToken;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            logger.debug('list ' + path + ' from ' + final_path);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 10,, 11]);\n\n            list = {\n              results: [],\n              hasNextToken: false\n            };\n            MAX_PAGE_SIZE = 1000;\n            listResult = void 0;\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: MAX_PAGE_SIZE,\n              ContinuationToken: nextToken\n            };\n            params.ContinuationToken = nextToken;\n            if (!(pageSize === 'ALL')) return [3\n            /*break*/\n            , 7];\n            _c.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , this._list(params, opt, prefix)];\n\n          case 4:\n            listResult = _c.sent();\n\n            (_a = list.results).push.apply(_a, __spreadArray([], __read(listResult.results), false));\n\n            if (listResult.nextToken) params.ContinuationToken = listResult.nextToken;\n            _c.label = 5;\n\n          case 5:\n            if (listResult.nextToken) return [3\n            /*break*/\n            , 3];\n            _c.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 9];\n\n          case 7:\n            if (pageSize && pageSize <= MAX_PAGE_SIZE && typeof pageSize === 'number') params.MaxKeys = pageSize;else logger.warn(\"pageSize should be from 0 - \".concat(MAX_PAGE_SIZE, \".\"));\n            return [4\n            /*yield*/\n            , this._list(params, opt, prefix)];\n\n          case 8:\n            listResult = _c.sent();\n\n            (_b = list.results).push.apply(_b, __spreadArray([], __read(listResult.results), false));\n\n            list.hasNextToken = listResult.hasNextToken;\n            list.nextToken = null !== null && null !== void 0 ? null : listResult.nextToken;\n            _c.label = 9;\n\n          case 9:\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, \"\".concat(list.results.length, \" items returned from list operation\"));\n            logger.debug('list', list);\n            return [2\n            /*return*/\n            , list];\n\n          case 10:\n            error_7 = _c.sent();\n            logger.error('list InvalidArgument', error_7);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \".concat(error_7.message));\n            throw error_7;\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_8 = _a.sent();\n            logger.warn('ensure credentials error', error_8);\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArray","to","from","pack","l","Array","slice","concat","ConsoleLogger","Logger","Credentials","StorageHelper","Hub","parseAWSExports","StorageAction","copyObject","getObject","getPresignedGetObjectUrl","headObject","deleteObject","listObjectsV2","SERVICE_NAME","S3_SERVICE_NAME","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","StorageErrorStrings","dispatchStorageEvent","getPrefix","loadS3Config","AWSS3ProviderManagedUpload","AWSS3UploadTask","TaskEvents","UPLOADS_STORAGE_KEY","events","logger","DEFAULT_STORAGE_LEVEL","DEFAULT_PRESIGN_EXPIRATION","AWSS3Provider","config","_this","_config","_storage","getStorage","listen","data","payload","event","removeItem","debug","getCategory","CATEGORY","getProviderName","PROVIDER_NAME","configure","amplifyConfig","Storage","bucket","startResumableUpload","addTaskInput","_a","s3Config","emitter","key","file","params","progressCallback","completeCallback","errorCallback","track","Blob","Error","INVALID_BLOB","on","UPLOAD_PROGRESS","warn","UPLOAD_COMPLETE","ERROR","err","prefixPromise","get","credentials","cred","shear","level","accessLevel","task","storage","method","resume","copy","src","dest","credentialsOK","opt","acl","cacheControl","expires","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","srcLevel","srcIdentityId","srcKey","destLevel","destKey","srcPrefix","destPrefix","finalSrcKey","finalDestKey","error_1","_b","_c","_ensureCredentials","_isWithCredentials","NO_CREDENTIALS","identityId","NO_SRC_KEY","NO_DEST_KEY","_prefix","Bucket","CopySource","Key","MetadataDirective","CacheControl","Expires","ServerSideEncryption","ACL","storageAction","Copy","download","contentDisposition","contentEncoding","contentLanguage","contentType","validateObjectExistence","prefix","final_key","response","error_2","error_3","url","error_4","_d","_e","_f","EventEmitter","Get","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","progress","removeAllListeners","fileSize","Number","Body","message","$metadata","httpStatusCode","expiration","signingRegion","region","signingService","getProperties","getPropertiesResponse","error_5","GetProperties","contentLength","ContentLength","ContentType","eTag","ETag","lastModified","LastModified","metadata","Metadata","put","object","resumable","tagging","type","ContentDisposition","ContentEncoding","Tagging","uploader","Put","upload","remove","error_6","Remove","_list","list","results","hasNextToken","List","Contents","map","item","substr","size","Size","nextToken","NextContinuationToken","IsTruncated","path","pageSize","final_path","MAX_PAGE_SIZE","listResult","error_7","Prefix","MaxKeys","ContinuationToken","error_8","customPrefix","privatePath","private","undefined","protectedPath","protected","publicPath","public"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger, Credentials, StorageHelper, Hub, parseAWSExports, StorageAction, } from '@aws-amplify/core';\nimport { copyObject, getObject, getPresignedGetObjectUrl, headObject, deleteObject, listObjectsV2, SERVICE_NAME as S3_SERVICE_NAME, } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from '../AwsClients/S3/utils';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { getPrefix, loadS3Config, } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nexport var AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        var _this = this;\n        this._config = config ? config : {};\n        this._storage = new StorageHelper().getStorage();\n        Hub.listen('auth', function (data) {\n            var payload = data.payload;\n            if (payload.event === 'signOut' || payload.event === 'signIn') {\n                _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n            }\n        });\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n        var _a;\n        var s3Config = addTaskInput.s3Config, emitter = addTaskInput.emitter, key = addTaskInput.key, file = addTaskInput.file, params = addTaskInput.params;\n        var progressCallback = config.progressCallback, completeCallback = config.completeCallback, errorCallback = config.errorCallback, track = (_a = config.track, _a === void 0 ? false : _a);\n        if (!(file instanceof Blob)) {\n            throw new Error(StorageErrorStrings.INVALID_BLOB);\n        }\n        emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    progressCallback(event);\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n            if (completeCallback) {\n                if (typeof completeCallback === 'function') {\n                    completeCallback(event);\n                }\n                else {\n                    logger.warn('completeCallback should be a function, not a ' +\n                        typeof completeCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.ERROR, function (err) {\n            if (errorCallback) {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                else {\n                    logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n                }\n            }\n        });\n        // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n        // when its doing a final check with _listSingleFile function\n        var prefixPromise = Credentials.get().then(function (credentials) {\n            var cred = Credentials.shear(credentials);\n            return getPrefix(__assign(__assign({}, config), { level: addTaskInput.accessLevel, credentials: cred }));\n        });\n        var task = new AWSS3UploadTask({\n            s3Config: s3Config,\n            file: file,\n            emitter: emitter,\n            level: addTaskInput.accessLevel,\n            storage: this._storage,\n            params: params,\n            prefixPromise: prefixPromise,\n        });\n        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload Task created successfully for \".concat(key));\n        // automatically start the upload task\n        task.resume();\n        return task;\n    };\n    /**\n     * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n     * different level or identityId (if source object's level is 'protected').\n     *\n     * @async\n     * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n     * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n     * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n     * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n     */\n    AWSS3Provider.prototype.copy = function (src, dest, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, srcLevel, srcIdentityId, srcKey, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, error_1;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        srcLevel = (_a = src.level, _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a), srcIdentityId = src.identityId, srcKey = src.key;\n                        destLevel = (_b = dest.level, _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b), destKey = dest.key;\n                        if (!srcKey || typeof srcKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_SRC_KEY);\n                        }\n                        if (!destKey || typeof destKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_DEST_KEY);\n                        }\n                        if (srcLevel !== 'protected' && srcIdentityId) {\n                            logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \".concat(srcLevel));\n                        }\n                        srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), { level: srcLevel }), (srcIdentityId && { identityId: srcIdentityId })));\n                        destPrefix = this._prefix(__assign(__assign({}, opt), { level: destLevel }));\n                        finalSrcKey = \"\".concat(bucket, \"/\").concat(srcPrefix).concat(srcKey);\n                        finalDestKey = \"\".concat(destPrefix).concat(destKey);\n                        logger.debug(\"copying \".concat(finalSrcKey, \" to \").concat(finalDestKey));\n                        params = {\n                            Bucket: bucket,\n                            CopySource: finalSrcKey,\n                            Key: finalDestKey,\n                            // Copies over metadata like contentType as well\n                            MetadataDirective: 'COPY',\n                        };\n                        if (cacheControl)\n                            params.CacheControl = cacheControl;\n                        if (expires)\n                            params.Expires = expires;\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        if (acl)\n                            params.ACL = acl;\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, copyObject(loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Copy })), params)];\n                    case 3:\n                        _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'success',\n                        }, null, \"Copy success from \".concat(srcKey, \" to \").concat(destKey));\n                        return [2 /*return*/, {\n                                key: destKey,\n                            }];\n                    case 4:\n                        error_1 = _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'failed',\n                        }, null, \"Copy failed from \".concat(srcKey, \" to \").concat(destKey));\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype.get = function (key, config) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, validateObjectExistence, prefix, final_key, emitter, s3Config, params, response, error_2, error_3, url, _b, _c, error_4;\n            var _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _f.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback, validateObjectExistence = (_d = opt.validateObjectExistence, _d === void 0 ? false : _d);\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        emitter = new events.EventEmitter();\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { emitter: emitter, storageAction: StorageAction.Get }));\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (!(download === true)) return [3 /*break*/, 5];\n                        _f.label = 2;\n                    case 2:\n                        _f.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' +\n                                    typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, getObject(s3Config, params)];\n                    case 3:\n                        response = _f.sent();\n                        emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {\n                            fileSize: Number(response.Body['size'] || response.Body['length']),\n                        }, \"Download success for \".concat(key));\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_2 = _f.sent();\n                        dispatchStorageEvent(track, 'download', {\n                            method: 'get',\n                            result: 'failed',\n                        }, null, \"Download failed with \".concat(error_2.message));\n                        throw error_2;\n                    case 5:\n                        if (!validateObjectExistence) return [3 /*break*/, 9];\n                        _f.label = 6;\n                    case 6:\n                        _f.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, headObject(s3Config, params)];\n                    case 7:\n                        _f.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        error_3 = _f.sent();\n                        if (((_a = error_3.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n                            dispatchStorageEvent(track, 'getSignedUrl', {\n                                method: 'get',\n                                result: 'failed',\n                            }, null, \"\".concat(key, \" not found\"));\n                        }\n                        throw error_3;\n                    case 9:\n                        _f.trys.push([9, 12, , 13]);\n                        _b = getPresignedGetObjectUrl;\n                        _c = [__assign({}, s3Config)];\n                        _e = { expiration: expires || DEFAULT_PRESIGN_EXPIRATION };\n                        return [4 /*yield*/, s3Config.credentials()];\n                    case 10: return [4 /*yield*/, _b.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.credentials = _f.sent(), _e.signingRegion = s3Config.region, _e.signingService = S3_SERVICE_NAME, _e)])), params])];\n                    case 11:\n                        url = _f.sent();\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \".concat(url));\n                        return [2 /*return*/, url];\n                    case 12:\n                        error_4 = _f.sent();\n                        logger.warn('get signed url error', error_4);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \".concat(key));\n                        throw error_4;\n                    case 13: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get Properties of the object\n     *\n     * @param {string} key - key of the object\n     * @param {S3ProviderGetPropertiesConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderGetPropertiesOutput>} - A promise resolves to contentType,\n     * contentLength, eTag, lastModified, metadata\n     */\n    AWSS3Provider.prototype.getProperties = function (key, config) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, prefix, final_key, s3Config, params, response, getPropertiesResponse, error_5;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = (_b = opt.track, _b === void 0 ? false : _b), SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        logger.debug(\"getProperties \".concat(key, \" from \").concat(final_key));\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.GetProperties }));\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, headObject(s3Config, params)];\n                    case 3:\n                        response = _c.sent();\n                        getPropertiesResponse = {\n                            contentLength: response.ContentLength,\n                            contentType: response.ContentType,\n                            eTag: response.ETag,\n                            lastModified: response.LastModified,\n                            metadata: response.Metadata,\n                        };\n                        dispatchStorageEvent(track, 'getProperties', { method: 'getProperties', result: 'success' }, null, \"getProperties successful for \".concat(key));\n                        return [2 /*return*/, getPropertiesResponse];\n                    case 4:\n                        error_5 = _c.sent();\n                        if (((_a = error_5.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n                            dispatchStorageEvent(track, 'getProperties', {\n                                method: 'getProperties',\n                                result: 'failed',\n                            }, null, \"\".concat(key, \" not found\"));\n                        }\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param key - key of the object\n     * @param object - File to be put in Amazon S3 bucket\n     * @param [config] - Optional configuration for the underlying S3 command\n     * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n     * success.\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        var opt = Object.assign({}, this._config, config);\n        var bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback, level = opt.level, resumable = opt.resumable;\n        var contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n        var serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n        var type = contentType ? contentType : 'binary/octet-stream';\n        var params = {\n            Bucket: bucket,\n            Key: key,\n            Body: object,\n            ContentType: type,\n        };\n        if (cacheControl) {\n            params.CacheControl = cacheControl;\n        }\n        if (contentDisposition) {\n            params.ContentDisposition = contentDisposition;\n        }\n        if (contentEncoding) {\n            params.ContentEncoding = contentEncoding;\n        }\n        if (expires) {\n            params.Expires = expires;\n        }\n        if (metadata) {\n            params.Metadata = metadata;\n        }\n        if (tagging) {\n            params.Tagging = tagging;\n        }\n        if (serverSideEncryption) {\n            params.ServerSideEncryption = serverSideEncryption;\n        }\n        if (SSECustomerAlgorithm) {\n            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n        }\n        if (SSECustomerKey) {\n            params.SSECustomerKey = SSECustomerKey;\n        }\n        if (SSECustomerKeyMD5) {\n            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n        }\n        if (SSEKMSKeyId) {\n            params.SSEKMSKeyId = SSEKMSKeyId;\n        }\n        var emitter = new events.EventEmitter();\n        var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n        if (acl) {\n            params.ACL = acl;\n        }\n        if (resumable === true) {\n            var s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Put }));\n            var addTaskInput = {\n                bucket: bucket,\n                key: key,\n                s3Config: s3Config,\n                file: object,\n                emitter: emitter,\n                accessLevel: level,\n                params: params,\n            };\n            // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n            return this.startResumableUpload(addTaskInput, config);\n        }\n        try {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                        progressCallback(progress);\n                    });\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n            return uploader.upload().then(function (response) {\n                logger.debug('upload result', response);\n                dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \".concat(key));\n                return { key: key };\n            });\n        }\n        catch (error) {\n            logger.warn('error uploading', error);\n            dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \".concat(key));\n            throw error;\n        }\n    };\n    /**\n     * Remove the object for specified key\n     * @param {string} key - key of the object\n     * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, params, s3Config, response, error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Remove }));\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, deleteObject(s3Config, params)];\n                    case 3:\n                        response = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \".concat(key, \" successfully\"));\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_6 = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \".concat(key, \" failed with \").concat(error_6));\n                        throw error_6;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._list = function (params, opt, prefix) {\n        return __awaiter(this, void 0, void 0, function () {\n            var list, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        list = {\n                            results: [],\n                            hasNextToken: false,\n                        };\n                        return [4 /*yield*/, listObjectsV2(loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.List })), __assign({}, params))];\n                    case 1:\n                        response = _a.sent();\n                        if (response && response.Contents) {\n                            list.results = response.Contents.map(function (item) {\n                                return {\n                                    key: item.Key.substr(prefix.length),\n                                    eTag: item.ETag,\n                                    lastModified: item.LastModified,\n                                    size: item.Size,\n                                };\n                            });\n                            list.nextToken = response.NextContinuationToken;\n                            list.hasNextToken = response.IsTruncated;\n                        }\n                        return [2 /*return*/, list];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {string} path - the path that contains objects\n     * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified\n     * and file size for all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, pageSize, nextToken, prefix, final_path, list, MAX_PAGE_SIZE, listResult, params, error_7;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, pageSize = opt.pageSize, nextToken = opt.nextToken;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 10, , 11]);\n                        list = {\n                            results: [],\n                            hasNextToken: false,\n                        };\n                        MAX_PAGE_SIZE = 1000;\n                        listResult = void 0;\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: MAX_PAGE_SIZE,\n                            ContinuationToken: nextToken,\n                        };\n                        params.ContinuationToken = nextToken;\n                        if (!(pageSize === 'ALL')) return [3 /*break*/, 7];\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 4:\n                        listResult = _c.sent();\n                        (_a = list.results).push.apply(_a, __spreadArray([], __read(listResult.results), false));\n                        if (listResult.nextToken)\n                            params.ContinuationToken = listResult.nextToken;\n                        _c.label = 5;\n                    case 5:\n                        if (listResult.nextToken) return [3 /*break*/, 3];\n                        _c.label = 6;\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        if (pageSize &&\n                            pageSize <= MAX_PAGE_SIZE &&\n                            typeof pageSize === 'number')\n                            params.MaxKeys = pageSize;\n                        else\n                            logger.warn(\"pageSize should be from 0 - \".concat(MAX_PAGE_SIZE, \".\"));\n                        return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 8:\n                        listResult = _c.sent();\n                        (_b = list.results).push.apply(_b, __spreadArray([], __read(listResult.results), false));\n                        list.hasNextToken = listResult.hasNextToken;\n                        list.nextToken = null !== null && null !== void 0 ? null : listResult.nextToken;\n                        _c.label = 9;\n                    case 9:\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, \"\".concat(list.results.length, \" items returned from list operation\"));\n                        logger.debug('list', list);\n                        return [2 /*return*/, list];\n                    case 10:\n                        error_7 = _c.sent();\n                        logger.error('list InvalidArgument', error_7);\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \".concat(error_7.message));\n                        throw error_7;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, cred, error_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, false];\n                        cred = Credentials.shear(credentials);\n                        logger.debug('set credentials for storage', cred);\n                        this._config.credentials = cred;\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_8 = _a.sent();\n                        logger.warn('ensure credentials error', error_8);\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._isWithCredentials = function (config) {\n        return typeof config === 'object' && config.hasOwnProperty('credentials');\n    };\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n            identityId +\n            '/';\n        var protectedPath = (customPrefix.protected !== undefined\n            ? customPrefix.protected\n            : 'protected/') +\n            identityId +\n            '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}