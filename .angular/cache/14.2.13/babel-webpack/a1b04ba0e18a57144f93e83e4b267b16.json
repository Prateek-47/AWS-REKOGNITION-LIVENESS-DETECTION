{"ast":null,"code":"var util = require('../util');\n\nvar JsonBuilder = require('../json/builder');\n\nvar JsonParser = require('../json/parser');\n\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n  if (version === 1) version = '1.0';\n\n  if (api.awsQueryCompatible) {\n    if (!httpRequest.params) {\n      httpRequest.params = {};\n    } // because Query protocol does this.\n\n\n    Object.assign(httpRequest.params, req.params);\n  }\n\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      var code = e.__type || e.code || e.Code;\n\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = e.message || e.Message || null;\n      } // The minimized models do not have error shapes, so\n      // without expanding the model size, it's not possible\n      // to validate the response shape (members) or\n      // check if any are sensitive to logging.\n      // Assign the fields as non-enumerable, allowing specific access only.\n\n\n      for (var key in e || {}) {\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n\n        error['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(error, key, {\n          value: e[key],\n          enumerable: false,\n          writable: true\n        });\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n/**\n * @api private\n */\n\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};","map":{"version":3,"names":["util","require","JsonBuilder","JsonParser","populateHostPrefix","buildRequest","req","httpRequest","api","service","target","targetPrefix","operations","operation","name","version","jsonVersion","input","builder","awsQueryCompatible","params","Object","assign","body","build","headers","extractError","resp","error","httpResponse","code","split","length","e","JSON","parse","toString","__type","Code","pop","message","Message","key","defineProperty","value","enumerable","writable","statusCode","statusMessage","Error","extractData","request","config","convertResponseTypes","data","shape","output","parser","module","exports"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/aws-sdk/lib/protocol/json.js"],"sourcesContent":["var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n\n  if (api.awsQueryCompatible) {\n    if (!httpRequest.params) {\n      httpRequest.params = {};\n    }\n    // because Query protocol does this.\n    Object.assign(httpRequest.params, req.params);\n  }\n\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n\n      var code = e.__type || e.code || e.Code;\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n\n      // The minimized models do not have error shapes, so\n      // without expanding the model size, it's not possible\n      // to validate the response shape (members) or\n      // check if any are sensitive to logging.\n\n      // Assign the fields as non-enumerable, allowing specific access only.\n      for (var key in e || {}) {\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n        error['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(error, key, {\n          value: e[key],\n          enumerable: false,\n          writable: true\n        });\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}