{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createBinaryKernelConfig(kernelName, supportsFullBroadcast, dtype) {\n  let wasmFunc;\n\n  function setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null\n    /* void */\n    , ['number', 'array', 'number', 'number', 'array', 'number', 'number', 'number' // out_id\n    ]);\n  }\n\n  function kernelFunc(args) {\n    const {\n      backend,\n      inputs\n    } = args;\n    const {\n      a,\n      b\n    } = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType); // Short-circuit zero-sized tensors.\n\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    const kernelFunc = () => wasmFunc(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, CppDType[a.dtype], outId); // Currently only some float operations support full broadcast.\n\n\n    if (supportsFullBroadcast && a.dtype === 'float32') {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(`Broadcasting along outer dims is not yet ` + `supported for ${a.dtype} ${kernelName}.`);\n    }\n  }\n\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc\n  };\n}","map":{"version":3,"names":["backend_util","util","CppDType","createBinaryKernelConfig","kernelName","supportsFullBroadcast","dtype","wasmFunc","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","a","b","aId","dataIdMap","get","dataId","id","bId","outputType","newShape","assertAndGetBroadcastShape","shape","out","makeOutput","sizeFromShape","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","outId","length","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","Error","backendName"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/binary_kernel.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createBinaryKernelConfig(kernelName, supportsFullBroadcast, dtype) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n            'number',\n            'array',\n            'number',\n            'number',\n            'array',\n            'number',\n            'number',\n            'number' // out_id\n        ]);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs } = args;\n        const { a, b } = inputs;\n        const aId = backend.dataIdMap.get(a.dataId).id;\n        const bId = backend.dataIdMap.get(b.dataId).id;\n        const outputType = dtype != null ? dtype : a.dtype;\n        const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        const out = backend.makeOutput(newShape, outputType);\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(newShape) === 0) {\n            return out;\n        }\n        const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n        const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        const kernelFunc = () => wasmFunc(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, CppDType[a.dtype], outId);\n        // Currently only some float operations support full broadcast.\n        if (supportsFullBroadcast && a.dtype === 'float32') {\n            kernelFunc();\n            return out;\n        }\n        const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n        const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n        const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n        const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n        if (loopsOverAllOfA && loopsOverAllOfB) {\n            kernelFunc();\n            return out;\n        }\n        else {\n            throw new Error(`Broadcasting along outer dims is not yet ` +\n                `supported for ${a.dtype} ${kernelName}.`);\n        }\n    }\n    return { kernelName, backendName: 'wasm', setupFunc, kernelFunc };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}