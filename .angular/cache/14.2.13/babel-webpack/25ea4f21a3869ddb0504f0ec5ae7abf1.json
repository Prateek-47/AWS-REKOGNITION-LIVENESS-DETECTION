{"ast":null,"code":"import $6vYhU$react from \"react\";\nimport { createContextScope as $6vYhU$createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs as $6vYhU$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Slot as $6vYhU$Slot } from \"@radix-ui/react-slot\"; // We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {\n  /* -----------------------------------------------------------------------------------------------\n  * CollectionProvider\n  * ---------------------------------------------------------------------------------------------*/\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = $6vYhU$createContextScope(PROVIDER_NAME);\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n    collectionRef: {\n      current: null\n    },\n    itemMap: new Map()\n  });\n\n  const CollectionProvider = props => {\n    const {\n      scope: scope,\n      children: children\n    } = props;\n    const ref = $6vYhU$react.useRef(null);\n    const itemMap = $6vYhU$react.useRef(new Map()).current;\n    return /*#__PURE__*/$6vYhU$react.createElement(CollectionProviderImpl, {\n      scope: scope,\n      itemMap: itemMap,\n      collectionRef: ref\n    }, children);\n  };\n  /*#__PURE__*/\n\n\n  Object.assign(CollectionProvider, {\n    displayName: PROVIDER_NAME\n  });\n  /* -----------------------------------------------------------------------------------------------\n  * CollectionSlot\n  * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n  const CollectionSlot = /*#__PURE__*/$6vYhU$react.forwardRef((props, forwardedRef) => {\n    const {\n      scope: scope,\n      children: children\n    } = props;\n    const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n    const composedRefs = $6vYhU$useComposedRefs(forwardedRef, context.collectionRef);\n    return /*#__PURE__*/$6vYhU$react.createElement($6vYhU$Slot, {\n      ref: composedRefs\n    }, children);\n  });\n  /*#__PURE__*/\n\n  Object.assign(CollectionSlot, {\n    displayName: COLLECTION_SLOT_NAME\n  });\n  /* -----------------------------------------------------------------------------------------------\n  * CollectionItem\n  * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n  const CollectionItemSlot = /*#__PURE__*/$6vYhU$react.forwardRef((props, forwardedRef) => {\n    const {\n      scope: scope,\n      children: children,\n      ...itemData\n    } = props;\n    const ref = $6vYhU$react.useRef(null);\n    const composedRefs = $6vYhU$useComposedRefs(forwardedRef, ref);\n    const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n    $6vYhU$react.useEffect(() => {\n      context.itemMap.set(ref, {\n        ref: ref,\n        ...itemData\n      });\n      return () => void context.itemMap.delete(ref);\n    });\n    return /*#__PURE__*/$6vYhU$react.createElement($6vYhU$Slot, {\n      [ITEM_DATA_ATTR]: '',\n      ref: composedRefs\n    }, children);\n  });\n  /*#__PURE__*/\n\n  Object.assign(CollectionItemSlot, {\n    displayName: ITEM_SLOT_NAME\n  });\n  /* -----------------------------------------------------------------------------------------------\n  * useCollection\n  * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n    const getItems = $6vYhU$react.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort((a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current));\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n    return getItems;\n  }\n\n  return [{\n    Provider: CollectionProvider,\n    Slot: CollectionSlot,\n    ItemSlot: CollectionItemSlot\n  }, useCollection, createCollectionScope];\n}\n\nexport { $e02a7d9cb1dc128c$export$c74125a8e3af6bb2 as createCollection };","map":{"version":3,"names":["$6vYhU$react","createContextScope","$6vYhU$createContextScope","useComposedRefs","$6vYhU$useComposedRefs","Slot","$6vYhU$Slot","$e02a7d9cb1dc128c$export$c74125a8e3af6bb2","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","props","scope","children","ref","useRef","createElement","Object","assign","displayName","COLLECTION_SLOT_NAME","CollectionSlot","forwardRef","forwardedRef","context","composedRefs","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","useEffect","set","delete","useCollection","getItems","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","items","values","orderedItems","sort","a","b","indexOf","Provider","ItemSlot","createCollection"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@radix-ui/react-collection/dist/index.module.js"],"sourcesContent":["import $6vYhU$react from \"react\";\nimport {createContextScope as $6vYhU$createContextScope} from \"@radix-ui/react-context\";\nimport {useComposedRefs as $6vYhU$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {Slot as $6vYhU$Slot} from \"@radix-ui/react-slot\";\n\n\n\n\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\nfunction $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/ const PROVIDER_NAME = name + 'CollectionProvider';\n    const [createCollectionContext, createCollectionScope] = $6vYhU$createContextScope(PROVIDER_NAME);\n    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n        collectionRef: {\n            current: null\n        },\n        itemMap: new Map()\n    });\n    const CollectionProvider = (props)=>{\n        const { scope: scope , children: children  } = props;\n        const ref = $6vYhU$react.useRef(null);\n        const itemMap = $6vYhU$react.useRef(new Map()).current;\n        return /*#__PURE__*/ $6vYhU$react.createElement(CollectionProviderImpl, {\n            scope: scope,\n            itemMap: itemMap,\n            collectionRef: ref\n        }, children);\n    };\n    /*#__PURE__*/ Object.assign(CollectionProvider, {\n        displayName: PROVIDER_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/ const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n    const CollectionSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n        const { scope: scope , children: children  } = props;\n        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, context.collectionRef);\n        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n            ref: composedRefs\n        }, children);\n    });\n    /*#__PURE__*/ Object.assign(CollectionSlot, {\n        displayName: COLLECTION_SLOT_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/ const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n    const ITEM_DATA_ATTR = 'data-radix-collection-item';\n    const CollectionItemSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n        const { scope: scope , children: children , ...itemData } = props;\n        const ref = $6vYhU$react.useRef(null);\n        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, ref);\n        const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n        $6vYhU$react.useEffect(()=>{\n            context.itemMap.set(ref, {\n                ref: ref,\n                ...itemData\n            });\n            return ()=>void context.itemMap.delete(ref)\n            ;\n        });\n        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n            [ITEM_DATA_ATTR]: '',\n            ref: composedRefs\n        }, children);\n    });\n    /*#__PURE__*/ Object.assign(CollectionItemSlot, {\n        displayName: ITEM_SLOT_NAME\n    });\n    /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/ function useCollection(scope) {\n        const context = useCollectionContext(name + 'CollectionConsumer', scope);\n        const getItems = $6vYhU$react.useCallback(()=>{\n            const collectionNode = context.collectionRef.current;\n            if (!collectionNode) return [];\n            const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n            const items = Array.from(context.itemMap.values());\n            const orderedItems = items.sort((a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n            );\n            return orderedItems;\n        }, [\n            context.collectionRef,\n            context.itemMap\n        ]);\n        return getItems;\n    }\n    return [\n        {\n            Provider: CollectionProvider,\n            Slot: CollectionSlot,\n            ItemSlot: CollectionItemSlot\n        },\n        useCollection,\n        createCollectionScope\n    ];\n}\n\n\n\n\nexport {$e02a7d9cb1dc128c$export$c74125a8e3af6bb2 as createCollection};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}