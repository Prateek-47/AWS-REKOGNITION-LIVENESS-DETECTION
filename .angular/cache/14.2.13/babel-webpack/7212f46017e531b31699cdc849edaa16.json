{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __extends } from \"tslib\";\nimport { AnalyticsAction, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './AWSKinesisProvider';\nimport { PutRecordBatchCommand, FirehoseClient } from '@aws-sdk/client-firehose';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nimport { getAnalyticsUserAgent } from '../utils/UserAgent';\nvar logger = new Logger('AWSKineisFirehoseProvider');\n\nvar AWSKinesisFirehoseProvider =\n/** @class */\nfunction (_super) {\n  __extends(AWSKinesisFirehoseProvider, _super);\n\n  function AWSKinesisFirehoseProvider(config) {\n    return _super.call(this, config) || this;\n  }\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n    return 'AWSKinesisFirehose';\n  };\n\n  AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n\n    if (group.length === 0) {\n      return;\n    }\n\n    var _a = group[0],\n        config = _a.config,\n        credentials = _a.credentials;\n\n    var initClients = this._init(config, credentials);\n\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // split by streamName\n      var evt = params.event;\n      var streamName = evt.streamName,\n          data = evt.data;\n\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n\n      var bufferData = data && typeof data !== 'string' ? JSON.stringify(data) : data;\n      var Data = fromUtf8(bufferData);\n      var record = {\n        Data: Data\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n\n      _this._kinesisFirehose.send(new PutRecordBatchCommand({\n        Records: records[streamName],\n        DeliveryStreamName: streamName\n      })).then(function (res) {\n        return logger.debug('Upload records to stream', streamName);\n      }).catch(function (err) {\n        return logger.debug('Failed to upload records to Kinesis', err);\n      });\n    });\n  };\n\n  AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n\n    if (this._kinesisFirehose && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n\n    this._config.credentials = credentials;\n    var region = config.region;\n    return this._initFirehose(region, credentials);\n  };\n\n  AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n    logger.debug('initialize kinesis firehose with credentials', credentials);\n    this._kinesisFirehose = new FirehoseClient({\n      apiVersion: '2015-08-04',\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAnalyticsUserAgent(AnalyticsAction.Record)\n    });\n    return true;\n  };\n\n  return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider);\n\nexport { AWSKinesisFirehoseProvider };","map":{"version":3,"names":["__extends","AnalyticsAction","ConsoleLogger","Logger","AWSKinesisProvider","PutRecordBatchCommand","FirehoseClient","fromUtf8","getAnalyticsUserAgent","logger","AWSKinesisFirehoseProvider","_super","config","call","prototype","getProviderName","_sendEvents","group","_this","length","_a","credentials","initClients","_init","records","map","params","evt","event","streamName","data","undefined","bufferData","JSON","stringify","Data","record","push","Object","keys","debug","_kinesisFirehose","send","Records","DeliveryStreamName","then","res","catch","err","_config","sessionToken","identityId","region","_initFirehose","apiVersion","customUserAgent","Record"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/analytics/lib-esm/Providers/AWSKinesisFirehoseProvider.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __extends } from \"tslib\";\nimport { AnalyticsAction, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './AWSKinesisProvider';\nimport { PutRecordBatchCommand, FirehoseClient, } from '@aws-sdk/client-firehose';\nimport { fromUtf8 } from '@aws-sdk/util-utf8-browser';\nimport { getAnalyticsUserAgent } from '../utils/UserAgent';\nvar logger = new Logger('AWSKineisFirehoseProvider');\nvar AWSKinesisFirehoseProvider = /** @class */ (function (_super) {\n    __extends(AWSKinesisFirehoseProvider, _super);\n    function AWSKinesisFirehoseProvider(config) {\n        return _super.call(this, config) || this;\n    }\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n        return 'AWSKinesisFirehose';\n    };\n    AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // split by streamName\n            var evt = params.event;\n            var streamName = evt.streamName, data = evt.data;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var bufferData = data && typeof data !== 'string' ? JSON.stringify(data) : data;\n            var Data = fromUtf8(bufferData);\n            var record = { Data: Data };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) {\n            logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n            _this._kinesisFirehose\n                .send(new PutRecordBatchCommand({\n                Records: records[streamName],\n                DeliveryStreamName: streamName,\n            }))\n                .then(function (res) { return logger.debug('Upload records to stream', streamName); })\n                .catch(function (err) { return logger.debug('Failed to upload records to Kinesis', err); });\n        });\n    };\n    AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesisFirehose &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        return this._initFirehose(region, credentials);\n    };\n    AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n        logger.debug('initialize kinesis firehose with credentials', credentials);\n        this._kinesisFirehose = new FirehoseClient({\n            apiVersion: '2015-08-04',\n            region: region,\n            credentials: credentials,\n            customUserAgent: getAnalyticsUserAgent(AnalyticsAction.Record),\n        });\n        return true;\n    };\n    return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider));\nexport { AWSKinesisFirehoseProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}