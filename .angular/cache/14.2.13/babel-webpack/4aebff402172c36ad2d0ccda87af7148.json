{"ast":null,"code":"var ModelSortPredicateCreator =\n/** @class */\nfunction () {\n  function ModelSortPredicateCreator() {}\n\n  ModelSortPredicateCreator.createPredicateBuilder = function (modelDefinition) {\n    var modelName = modelDefinition.name;\n    var fieldNames = new Set(Object.keys(modelDefinition.fields));\n    var handler;\n    var predicate = new Proxy({}, handler = {\n      get: function (_target, propertyKey, receiver) {\n        var field = propertyKey;\n\n        if (!fieldNames.has(field)) {\n          throw new Error(\"Invalid field for model. field: \" + field + \", model: \" + modelName);\n        }\n\n        var result = function (sortDirection) {\n          var _a;\n\n          (_a = ModelSortPredicateCreator.sortPredicateGroupsMap.get(receiver)) === null || _a === void 0 ? void 0 : _a.push({\n            field: field,\n            sortDirection: sortDirection\n          });\n          return receiver;\n        };\n\n        return result;\n      }\n    });\n    ModelSortPredicateCreator.sortPredicateGroupsMap.set(predicate, []);\n    return predicate;\n  };\n\n  ModelSortPredicateCreator.isValidPredicate = function (predicate) {\n    return ModelSortPredicateCreator.sortPredicateGroupsMap.has(predicate);\n  };\n\n  ModelSortPredicateCreator.getPredicates = function (predicate, throwOnInvalid) {\n    if (throwOnInvalid === void 0) {\n      throwOnInvalid = true;\n    }\n\n    if (throwOnInvalid && !ModelSortPredicateCreator.isValidPredicate(predicate)) {\n      throw new Error('The predicate is not valid');\n    }\n\n    var predicateGroup = ModelSortPredicateCreator.sortPredicateGroupsMap.get(predicate);\n\n    if (predicateGroup) {\n      return predicateGroup;\n    } else {\n      throw new Error('Predicate group not found');\n    }\n  }; // transforms cb-style predicate into Proxy\n\n\n  ModelSortPredicateCreator.createFromExisting = function (modelDefinition, existing) {\n    if (!existing || !modelDefinition) {\n      return undefined;\n    }\n\n    return existing(ModelSortPredicateCreator.createPredicateBuilder(modelDefinition));\n  };\n\n  ModelSortPredicateCreator.sortPredicateGroupsMap = new WeakMap();\n  return ModelSortPredicateCreator;\n}();\n\nexport { ModelSortPredicateCreator };","map":{"version":3,"names":["ModelSortPredicateCreator","createPredicateBuilder","modelDefinition","modelName","name","fieldNames","Set","Object","keys","fields","handler","predicate","Proxy","get","_target","propertyKey","receiver","field","has","Error","result","sortDirection","_a","sortPredicateGroupsMap","push","set","isValidPredicate","getPredicates","throwOnInvalid","predicateGroup","createFromExisting","existing","undefined","WeakMap"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/datastore/lib-esm/predicates/sort.js"],"sourcesContent":["var ModelSortPredicateCreator = /** @class */ (function () {\n    function ModelSortPredicateCreator() {\n    }\n    ModelSortPredicateCreator.createPredicateBuilder = function (modelDefinition) {\n        var modelName = modelDefinition.name;\n        var fieldNames = new Set(Object.keys(modelDefinition.fields));\n        var handler;\n        var predicate = new Proxy({}, (handler = {\n            get: function (_target, propertyKey, receiver) {\n                var field = propertyKey;\n                if (!fieldNames.has(field)) {\n                    throw new Error(\"Invalid field for model. field: \" + field + \", model: \" + modelName);\n                }\n                var result = function (sortDirection) {\n                    var _a;\n                    (_a = ModelSortPredicateCreator.sortPredicateGroupsMap\n                        .get(receiver)) === null || _a === void 0 ? void 0 : _a.push({ field: field, sortDirection: sortDirection });\n                    return receiver;\n                };\n                return result;\n            },\n        }));\n        ModelSortPredicateCreator.sortPredicateGroupsMap.set(predicate, []);\n        return predicate;\n    };\n    ModelSortPredicateCreator.isValidPredicate = function (predicate) {\n        return ModelSortPredicateCreator.sortPredicateGroupsMap.has(predicate);\n    };\n    ModelSortPredicateCreator.getPredicates = function (predicate, throwOnInvalid) {\n        if (throwOnInvalid === void 0) { throwOnInvalid = true; }\n        if (throwOnInvalid &&\n            !ModelSortPredicateCreator.isValidPredicate(predicate)) {\n            throw new Error('The predicate is not valid');\n        }\n        var predicateGroup = ModelSortPredicateCreator.sortPredicateGroupsMap.get(predicate);\n        if (predicateGroup) {\n            return predicateGroup;\n        }\n        else {\n            throw new Error('Predicate group not found');\n        }\n    };\n    // transforms cb-style predicate into Proxy\n    ModelSortPredicateCreator.createFromExisting = function (modelDefinition, existing) {\n        if (!existing || !modelDefinition) {\n            return undefined;\n        }\n        return existing(ModelSortPredicateCreator.createPredicateBuilder(modelDefinition));\n    };\n    ModelSortPredicateCreator.sortPredicateGroupsMap = new WeakMap();\n    return ModelSortPredicateCreator;\n}());\nexport { ModelSortPredicateCreator };\n"],"mappings":"AAAA,IAAIA,yBAAyB;AAAG;AAAe,YAAY;EACvD,SAASA,yBAAT,GAAqC,CACpC;;EACDA,yBAAyB,CAACC,sBAA1B,GAAmD,UAAUC,eAAV,EAA2B;IAC1E,IAAIC,SAAS,GAAGD,eAAe,CAACE,IAAhC;IACA,IAAIC,UAAU,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYN,eAAe,CAACO,MAA5B,CAAR,CAAjB;IACA,IAAIC,OAAJ;IACA,IAAIC,SAAS,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAeF,OAAO,GAAG;MACrCG,GAAG,EAAE,UAAUC,OAAV,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0C;QAC3C,IAAIC,KAAK,GAAGF,WAAZ;;QACA,IAAI,CAACV,UAAU,CAACa,GAAX,CAAeD,KAAf,CAAL,EAA4B;UACxB,MAAM,IAAIE,KAAJ,CAAU,qCAAqCF,KAArC,GAA6C,WAA7C,GAA2Dd,SAArE,CAAN;QACH;;QACD,IAAIiB,MAAM,GAAG,UAAUC,aAAV,EAAyB;UAClC,IAAIC,EAAJ;;UACA,CAACA,EAAE,GAAGtB,yBAAyB,CAACuB,sBAA1B,CACDV,GADC,CACGG,QADH,CAAN,MACwB,IADxB,IACgCM,EAAE,KAAK,KAAK,CAD5C,GACgD,KAAK,CADrD,GACyDA,EAAE,CAACE,IAAH,CAAQ;YAAEP,KAAK,EAAEA,KAAT;YAAgBI,aAAa,EAAEA;UAA/B,CAAR,CADzD;UAEA,OAAOL,QAAP;QACH,CALD;;QAMA,OAAOI,MAAP;MACH;IAboC,CAAzB,CAAhB;IAeApB,yBAAyB,CAACuB,sBAA1B,CAAiDE,GAAjD,CAAqDd,SAArD,EAAgE,EAAhE;IACA,OAAOA,SAAP;EACH,CArBD;;EAsBAX,yBAAyB,CAAC0B,gBAA1B,GAA6C,UAAUf,SAAV,EAAqB;IAC9D,OAAOX,yBAAyB,CAACuB,sBAA1B,CAAiDL,GAAjD,CAAqDP,SAArD,CAAP;EACH,CAFD;;EAGAX,yBAAyB,CAAC2B,aAA1B,GAA0C,UAAUhB,SAAV,EAAqBiB,cAArB,EAAqC;IAC3E,IAAIA,cAAc,KAAK,KAAK,CAA5B,EAA+B;MAAEA,cAAc,GAAG,IAAjB;IAAwB;;IACzD,IAAIA,cAAc,IACd,CAAC5B,yBAAyB,CAAC0B,gBAA1B,CAA2Cf,SAA3C,CADL,EAC4D;MACxD,MAAM,IAAIQ,KAAJ,CAAU,4BAAV,CAAN;IACH;;IACD,IAAIU,cAAc,GAAG7B,yBAAyB,CAACuB,sBAA1B,CAAiDV,GAAjD,CAAqDF,SAArD,CAArB;;IACA,IAAIkB,cAAJ,EAAoB;MAChB,OAAOA,cAAP;IACH,CAFD,MAGK;MACD,MAAM,IAAIV,KAAJ,CAAU,2BAAV,CAAN;IACH;EACJ,CAbD,CA5BuD,CA0CvD;;;EACAnB,yBAAyB,CAAC8B,kBAA1B,GAA+C,UAAU5B,eAAV,EAA2B6B,QAA3B,EAAqC;IAChF,IAAI,CAACA,QAAD,IAAa,CAAC7B,eAAlB,EAAmC;MAC/B,OAAO8B,SAAP;IACH;;IACD,OAAOD,QAAQ,CAAC/B,yBAAyB,CAACC,sBAA1B,CAAiDC,eAAjD,CAAD,CAAf;EACH,CALD;;EAMAF,yBAAyB,CAACuB,sBAA1B,GAAmD,IAAIU,OAAJ,EAAnD;EACA,OAAOjC,yBAAP;AACH,CAnD8C,EAA/C;;AAoDA,SAASA,yBAAT"},"metadata":{},"sourceType":"module"}