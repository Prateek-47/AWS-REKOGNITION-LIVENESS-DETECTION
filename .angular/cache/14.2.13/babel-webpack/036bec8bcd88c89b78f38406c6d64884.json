{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\n\n\nexport var getCanonicalQueryString = function (searchParams) {\n  return Array.from(searchParams).sort(function (_a, _b) {\n    var _c = __read(_a, 2),\n        keyA = _c[0],\n        valA = _c[1];\n\n    var _d = __read(_b, 2),\n        keyB = _d[0],\n        valB = _d[1];\n\n    if (keyA === keyB) {\n      return valA < valB ? -1 : 1;\n    }\n\n    return keyA < keyB ? -1 : 1;\n  }).map(function (_a) {\n    var _b = __read(_a, 2),\n        key = _b[0],\n        val = _b[1];\n\n    return \"\".concat(escapeUri(key), \"=\").concat(escapeUri(val));\n  }).join('&');\n};\n\nvar escapeUri = function (uri) {\n  return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n};\n\nvar hexEncode = function (c) {\n  return \"%\".concat(c.charCodeAt(0).toString(16).toUpperCase());\n};","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","getCanonicalQueryString","searchParams","Array","from","sort","_a","_b","_c","keyA","valA","_d","keyB","valB","map","key","val","concat","escapeUri","join","uri","encodeURIComponent","replace","hexEncode","c","charCodeAt","toString","toUpperCase"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nexport var getCanonicalQueryString = function (searchParams) {\n    return Array.from(searchParams)\n        .sort(function (_a, _b) {\n        var _c = __read(_a, 2), keyA = _c[0], valA = _c[1];\n        var _d = __read(_b, 2), keyB = _d[0], valB = _d[1];\n        if (keyA === keyB) {\n            return valA < valB ? -1 : 1;\n        }\n        return keyA < keyB ? -1 : 1;\n    })\n        .map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], val = _b[1];\n        return \"\".concat(escapeUri(key), \"=\").concat(escapeUri(val));\n    })\n        .join('&');\n};\nvar escapeUri = function (uri) {\n    return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n};\nvar hexEncode = function (c) {\n    return \"%\".concat(c.charCodeAt(0).toString(16).toUpperCase());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}