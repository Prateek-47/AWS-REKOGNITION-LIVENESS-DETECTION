{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createUnaryKernelConfig(kernelName, outType) {\n  let wasmFunc;\n\n  function setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null\n    /* void */\n    , ['number', 'number', 'number']);\n  }\n\n  function kernelFunc(args) {\n    const {\n      backend,\n      inputs: {\n        x\n      }\n    } = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id; // Short-circuit zero-sized tensors.\n\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc\n  };\n}","map":{"version":3,"names":["util","CppDType","createUnaryKernelConfig","kernelName","outType","wasmFunc","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","x","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","sizeFromShape","backendName"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/unary_kernel.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createUnaryKernelConfig(kernelName, outType) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n            'number',\n            'number',\n            'number',\n        ]);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs: { x } } = args;\n        const xId = backend.dataIdMap.get(x.dataId).id;\n        const out = backend.makeOutput(x.shape, outType || x.dtype);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(out.shape) === 0) {\n            return out;\n        }\n        wasmFunc(xId, CppDType[x.dtype], outId);\n        return out;\n    }\n    return { kernelName, backendName: 'wasm', setupFunc, kernelFunc };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAO,SAASC,uBAAT,CAAiCC,UAAjC,EAA6CC,OAA7C,EAAsD;EACzD,IAAIC,QAAJ;;EACA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;IACxBF,QAAQ,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBN,UAAnB,EAA+B;IAAK;IAApC,EAAgD,CACvD,QADuD,EAEvD,QAFuD,EAGvD,QAHuD,CAAhD,CAAX;EAKH;;EACD,SAASO,UAAT,CAAoBC,IAApB,EAA0B;IACtB,MAAM;MAAEJ,OAAF;MAAWK,MAAM,EAAE;QAAEC;MAAF;IAAnB,IAA6BF,IAAnC;IACA,MAAMG,GAAG,GAAGP,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsBH,CAAC,CAACI,MAAxB,EAAgCC,EAA5C;IACA,MAAMC,GAAG,GAAGZ,OAAO,CAACa,UAAR,CAAmBP,CAAC,CAACQ,KAArB,EAA4BjB,OAAO,IAAIS,CAAC,CAACS,KAAzC,CAAZ;IACA,MAAMC,KAAK,GAAGhB,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsBG,GAAG,CAACF,MAA1B,EAAkCC,EAAhD,CAJsB,CAKtB;;IACA,IAAIlB,IAAI,CAACwB,aAAL,CAAmBL,GAAG,CAACE,KAAvB,MAAkC,CAAtC,EAAyC;MACrC,OAAOF,GAAP;IACH;;IACDd,QAAQ,CAACS,GAAD,EAAMb,QAAQ,CAACY,CAAC,CAACS,KAAH,CAAd,EAAyBC,KAAzB,CAAR;IACA,OAAOJ,GAAP;EACH;;EACD,OAAO;IAAEhB,UAAF;IAAcsB,WAAW,EAAE,MAA3B;IAAmCnB,SAAnC;IAA8CI;EAA9C,CAAP;AACH"},"metadata":{},"sourceType":"module"}