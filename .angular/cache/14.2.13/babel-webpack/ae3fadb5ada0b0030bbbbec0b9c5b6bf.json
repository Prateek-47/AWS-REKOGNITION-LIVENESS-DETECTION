{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot } from '@tensorflow/tfjs-core';\nlet wasmOneHot;\n\nfunction setup(backend) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null\n  /* void */\n  , ['number', 'number', 'number', 'number', 'number' // out_id\n  ]);\n}\n\nfunction oneHot(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    indices\n  } = inputs;\n  const {\n    depth,\n    onValue,\n    offValue\n  } = attrs;\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n  return out;\n}\n\nexport const oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot\n};","map":{"version":3,"names":["OneHot","wasmOneHot","setup","backend","wasm","cwrap","oneHot","args","inputs","attrs","indices","depth","onValue","offValue","out","makeOutput","shape","outId","dataIdMap","get","dataId","id","indicesData","indicesId","oneHotConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/OneHot.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot } from '@tensorflow/tfjs-core';\nlet wasmOneHot;\nfunction setup(backend) {\n    wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction oneHot(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    const out = backend.makeOutput([...indices.shape, depth], 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    wasmOneHot(indicesId, depth, onValue, offValue, outId);\n    return out;\n}\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: oneHot,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,IAAIC,UAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,UAAU,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBL,MAAnB,EAA2B;EAAK;EAAhC,EAA4C,CACrD,QADqD,EAErD,QAFqD,EAGrD,QAHqD,EAIrD,QAJqD,EAKrD,QALqD,CAK5C;EAL4C,CAA5C,CAAb;AAOH;;AACD,SAASM,MAAT,CAAgBC,IAAhB,EAAsB;EAClB,MAAM;IAAEC,MAAF;IAAUL,OAAV;IAAmBM;EAAnB,IAA6BF,IAAnC;EACA,MAAM;IAAEG;EAAF,IAAcF,MAApB;EACA,MAAM;IAAEG,KAAF;IAASC,OAAT;IAAkBC;EAAlB,IAA+BJ,KAArC;EACA,MAAMK,GAAG,GAAGX,OAAO,CAACY,UAAR,CAAmB,CAAC,GAAGL,OAAO,CAACM,KAAZ,EAAmBL,KAAnB,CAAnB,EAA8C,OAA9C,CAAZ;EACA,MAAMM,KAAK,GAAGd,OAAO,CAACe,SAAR,CAAkBC,GAAlB,CAAsBL,GAAG,CAACM,MAA1B,EAAkCC,EAAhD;EACA,MAAMC,WAAW,GAAGnB,OAAO,CAACe,SAAR,CAAkBC,GAAlB,CAAsBT,OAAO,CAACU,MAA9B,CAApB;EACA,MAAMG,SAAS,GAAGD,WAAW,CAACD,EAA9B;EACApB,UAAU,CAACsB,SAAD,EAAYZ,KAAZ,EAAmBC,OAAnB,EAA4BC,QAA5B,EAAsCI,KAAtC,CAAV;EACA,OAAOH,GAAP;AACH;;AACD,OAAO,MAAMU,YAAY,GAAG;EACxBC,UAAU,EAAEzB,MADY;EAExB0B,WAAW,EAAE,MAFW;EAGxBC,SAAS,EAAEzB,KAHa;EAIxB0B,UAAU,EAAEtB;AAJY,CAArB"},"metadata":{},"sourceType":"module"}