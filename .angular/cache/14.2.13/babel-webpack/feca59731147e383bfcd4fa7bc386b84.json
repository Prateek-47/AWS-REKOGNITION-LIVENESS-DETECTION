{"ast":null,"code":"import { __assign } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { API } from '@aws-amplify/api';\nimport { InternalAPI } from '@aws-amplify/api/internals';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore'; // ! We have to use this exact reference, since it gets mutated with Amplify.Auth\n\nimport { Amplify } from './index';\nvar requiredModules = [// API cannot function without Auth\nAuth, // Auth cannot function without Credentials\nCredentials]; // These modules have been tested with SSR\n\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n  if (context === void 0) {\n    context = {};\n  }\n\n  var _a = context.modules,\n      modules = _a === void 0 ? defaultModules : _a,\n      req = context.req;\n\n  if (modules.includes(DataStore) && !modules.includes(InternalAPI)) {\n    modules.push(InternalAPI);\n  }\n\n  var previousConfig = Amplify.configure();\n  var amplify = new AmplifyClass();\n  var storage = new UniversalStorage({\n    req: req\n  });\n  requiredModules.forEach(function (m) {\n    if (!modules.includes(m)) {\n      // @ts-ignore This expression is not constructable.\n      // Type 'Function' has no construct signatures.ts(2351)\n      amplify.register(new m.constructor());\n    }\n  }); // Associate new module instances with this amplify\n\n  modules.forEach(function (m) {\n    amplify.register(new m.constructor());\n  }); // Configure new Amplify instances with previous configuration\n\n  amplify.configure(__assign(__assign({}, previousConfig), {\n    storage: storage\n  }));\n  return amplify;\n}","map":{"version":3,"names":["__assign","API","InternalAPI","Auth","AmplifyClass","Credentials","UniversalStorage","DataStore","Amplify","requiredModules","defaultModules","withSSRContext","context","_a","modules","req","includes","push","previousConfig","configure","amplify","storage","forEach","m","register","constructor"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/aws-amplify/lib-esm/withSSRContext.js"],"sourcesContent":["import { __assign } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { API } from '@aws-amplify/api';\nimport { InternalAPI } from '@aws-amplify/api/internals';\nimport { Auth } from '@aws-amplify/auth';\nimport { AmplifyClass, Credentials, UniversalStorage } from '@aws-amplify/core';\nimport { DataStore } from '@aws-amplify/datastore';\n// ! We have to use this exact reference, since it gets mutated with Amplify.Auth\nimport { Amplify } from './index';\nvar requiredModules = [\n    // API cannot function without Auth\n    Auth,\n    // Auth cannot function without Credentials\n    Credentials,\n];\n// These modules have been tested with SSR\nvar defaultModules = [API, Auth, DataStore];\nexport function withSSRContext(context) {\n    if (context === void 0) { context = {}; }\n    var _a = context.modules, modules = _a === void 0 ? defaultModules : _a, req = context.req;\n    if (modules.includes(DataStore) && !modules.includes(InternalAPI)) {\n        modules.push(InternalAPI);\n    }\n    var previousConfig = Amplify.configure();\n    var amplify = new AmplifyClass();\n    var storage = new UniversalStorage({ req: req });\n    requiredModules.forEach(function (m) {\n        if (!modules.includes(m)) {\n            // @ts-ignore This expression is not constructable.\n            // Type 'Function' has no construct signatures.ts(2351)\n            amplify.register(new m.constructor());\n        }\n    });\n    // Associate new module instances with this amplify\n    modules.forEach(function (m) {\n        amplify.register(new m.constructor());\n    });\n    // Configure new Amplify instances with previous configuration\n    amplify.configure(__assign(__assign({}, previousConfig), { storage: storage }));\n    return amplify;\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,QAA4D,mBAA5D;AACA,SAASC,SAAT,QAA0B,wBAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,IAAIC,eAAe,GAAG,CAClB;AACAN,IAFkB,EAGlB;AACAE,WAJkB,CAAtB,C,CAMA;;AACA,IAAIK,cAAc,GAAG,CAACT,GAAD,EAAME,IAAN,EAAYI,SAAZ,CAArB;AACA,OAAO,SAASI,cAAT,CAAwBC,OAAxB,EAAiC;EACpC,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAIC,EAAE,GAAGD,OAAO,CAACE,OAAjB;EAAA,IAA0BA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBH,cAAhB,GAAiCG,EAArE;EAAA,IAAyEE,GAAG,GAAGH,OAAO,CAACG,GAAvF;;EACA,IAAID,OAAO,CAACE,QAAR,CAAiBT,SAAjB,KAA+B,CAACO,OAAO,CAACE,QAAR,CAAiBd,WAAjB,CAApC,EAAmE;IAC/DY,OAAO,CAACG,IAAR,CAAaf,WAAb;EACH;;EACD,IAAIgB,cAAc,GAAGV,OAAO,CAACW,SAAR,EAArB;EACA,IAAIC,OAAO,GAAG,IAAIhB,YAAJ,EAAd;EACA,IAAIiB,OAAO,GAAG,IAAIf,gBAAJ,CAAqB;IAAES,GAAG,EAAEA;EAAP,CAArB,CAAd;EACAN,eAAe,CAACa,OAAhB,CAAwB,UAAUC,CAAV,EAAa;IACjC,IAAI,CAACT,OAAO,CAACE,QAAR,CAAiBO,CAAjB,CAAL,EAA0B;MACtB;MACA;MACAH,OAAO,CAACI,QAAR,CAAiB,IAAID,CAAC,CAACE,WAAN,EAAjB;IACH;EACJ,CAND,EAToC,CAgBpC;;EACAX,OAAO,CAACQ,OAAR,CAAgB,UAAUC,CAAV,EAAa;IACzBH,OAAO,CAACI,QAAR,CAAiB,IAAID,CAAC,CAACE,WAAN,EAAjB;EACH,CAFD,EAjBoC,CAoBpC;;EACAL,OAAO,CAACD,SAAR,CAAkBnB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkB,cAAL,CAAT,EAA+B;IAAEG,OAAO,EAAEA;EAAX,CAA/B,CAA1B;EACA,OAAOD,OAAP;AACH"},"metadata":{},"sourceType":"module"}