{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, util } from '@tensorflow/tfjs-core';\nlet wasmSelect;\n\nfunction setup(backend) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, ['number', 'number', 'number', 'number', 'number']);\n}\n\nfunction select(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    condition,\n    t,\n    e\n  } = inputs;\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ? 1 : util.sizeFromShape(t.shape.slice(1));\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select,\n  setupFunc: setup\n};","map":{"version":3,"names":["Select","util","wasmSelect","setup","backend","wasm","cwrap","select","args","inputs","condition","t","e","conditionId","dataIdMap","get","dataId","id","tId","eId","out","makeOutput","shape","dtype","outId","cRank","length","tRank","offset","sizeFromShape","slice","selectConfig","kernelName","backendName","kernelFunc","setupFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Select.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, util } from '@tensorflow/tfjs-core';\nlet wasmSelect;\nfunction setup(backend) {\n    wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const conditionId = backend.dataIdMap.get(condition.dataId).id;\n    const tId = backend.dataIdMap.get(t.dataId).id;\n    const eId = backend.dataIdMap.get(e.dataId).id;\n    const out = backend.makeOutput(t.shape, t.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const cRank = condition.shape.length;\n    const tRank = t.shape.length;\n    const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n        1 :\n        util.sizeFromShape(t.shape.slice(1));\n    wasmSelect(conditionId, tId, eId, offset, outId);\n    return out;\n}\nexport const selectConfig = {\n    kernelName: Select,\n    backendName: 'wasm',\n    kernelFunc: select,\n    setupFunc: setup\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,IAAIC,UAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,UAAU,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmB,UAAnB,EAA+B,IAA/B,EAAqC,CAC9C,QAD8C,EAE9C,QAF8C,EAG9C,QAH8C,EAI9C,QAJ8C,EAK9C,QAL8C,CAArC,CAAb;AAOH;;AACD,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EAClB,MAAM;IAAEC,MAAF;IAAUL;EAAV,IAAsBI,IAA5B;EACA,MAAM;IAAEE,SAAF;IAAaC,CAAb;IAAgBC;EAAhB,IAAsBH,MAA5B;EACA,MAAMI,WAAW,GAAGT,OAAO,CAACU,SAAR,CAAkBC,GAAlB,CAAsBL,SAAS,CAACM,MAAhC,EAAwCC,EAA5D;EACA,MAAMC,GAAG,GAAGd,OAAO,CAACU,SAAR,CAAkBC,GAAlB,CAAsBJ,CAAC,CAACK,MAAxB,EAAgCC,EAA5C;EACA,MAAME,GAAG,GAAGf,OAAO,CAACU,SAAR,CAAkBC,GAAlB,CAAsBH,CAAC,CAACI,MAAxB,EAAgCC,EAA5C;EACA,MAAMG,GAAG,GAAGhB,OAAO,CAACiB,UAAR,CAAmBV,CAAC,CAACW,KAArB,EAA4BX,CAAC,CAACY,KAA9B,CAAZ;EACA,MAAMC,KAAK,GAAGpB,OAAO,CAACU,SAAR,CAAkBC,GAAlB,CAAsBK,GAAG,CAACJ,MAA1B,EAAkCC,EAAhD;EACA,MAAMQ,KAAK,GAAGf,SAAS,CAACY,KAAV,CAAgBI,MAA9B;EACA,MAAMC,KAAK,GAAGhB,CAAC,CAACW,KAAF,CAAQI,MAAtB;EACA,MAAME,MAAM,GAAGH,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,CAAvB,IAA4BE,KAAK,KAAK,CAAtC,GACX,CADW,GAEX1B,IAAI,CAAC4B,aAAL,CAAmBlB,CAAC,CAACW,KAAF,CAAQQ,KAAR,CAAc,CAAd,CAAnB,CAFJ;EAGA5B,UAAU,CAACW,WAAD,EAAcK,GAAd,EAAmBC,GAAnB,EAAwBS,MAAxB,EAAgCJ,KAAhC,CAAV;EACA,OAAOJ,GAAP;AACH;;AACD,OAAO,MAAMW,YAAY,GAAG;EACxBC,UAAU,EAAEhC,MADY;EAExBiC,WAAW,EAAE,MAFW;EAGxBC,UAAU,EAAE3B,MAHY;EAIxB4B,SAAS,EAAEhC;AAJa,CAArB"},"metadata":{},"sourceType":"module"}