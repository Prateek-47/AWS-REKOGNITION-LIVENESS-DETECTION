{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexport var parseMetadata = function (response) {\n  var _a, _b;\n\n  var headers = response.headers,\n      statusCode = response.statusCode;\n  return __assign(__assign({}, isMetadataBearer(response) ? response.$metadata : {}), {\n    httpStatusCode: statusCode,\n    requestId: (_b = (_a = headers['x-amzn-requestid']) !== null && _a !== void 0 ? _a : headers['x-amzn-request-id']) !== null && _b !== void 0 ? _b : headers['x-amz-request-id'],\n    extendedRequestId: headers['x-amz-id-2'],\n    cfId: headers['x-amz-cf-id']\n  });\n};\n\nvar isMetadataBearer = function (response) {\n  return typeof (response === null || response === void 0 ? void 0 : response['$metadata']) === 'object';\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","parseMetadata","response","_a","_b","headers","statusCode","isMetadataBearer","$metadata","httpStatusCode","requestId","extendedRequestId","cfId"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/clients/serde/responseInfo.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var parseMetadata = function (response) {\n    var _a, _b;\n    var headers = response.headers, statusCode = response.statusCode;\n    return __assign(__assign({}, (isMetadataBearer(response) ? response.$metadata : {})), { httpStatusCode: statusCode, requestId: (_b = (_a = headers['x-amzn-requestid']) !== null && _a !== void 0 ? _a : headers['x-amzn-request-id']) !== null && _b !== void 0 ? _b : headers['x-amz-request-id'], extendedRequestId: headers['x-amz-id-2'], cfId: headers['x-amz-cf-id'] });\n};\nvar isMetadataBearer = function (response) {\n    return typeof (response === null || response === void 0 ? void 0 : response['$metadata']) === 'object';\n};\n"],"mappings":"AAAA;AACA;AACA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,IAAIO,aAAa,GAAG,UAAUC,QAAV,EAAoB;EAC3C,IAAIC,EAAJ,EAAQC,EAAR;;EACA,IAAIC,OAAO,GAAGH,QAAQ,CAACG,OAAvB;EAAA,IAAgCC,UAAU,GAAGJ,QAAQ,CAACI,UAAtD;EACA,OAAOnB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAMoB,gBAAgB,CAACL,QAAD,CAAhB,GAA6BA,QAAQ,CAACM,SAAtC,GAAkD,EAAxD,CAAT,EAAuE;IAAEC,cAAc,EAAEH,UAAlB;IAA8BI,SAAS,EAAE,CAACN,EAAE,GAAG,CAACD,EAAE,GAAGE,OAAO,CAAC,kBAAD,CAAb,MAAuC,IAAvC,IAA+CF,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoEE,OAAO,CAAC,mBAAD,CAAjF,MAA4G,IAA5G,IAAoHD,EAAE,KAAK,KAAK,CAAhI,GAAoIA,EAApI,GAAyIC,OAAO,CAAC,kBAAD,CAAzL;IAA+MM,iBAAiB,EAAEN,OAAO,CAAC,YAAD,CAAzO;IAAyPO,IAAI,EAAEP,OAAO,CAAC,aAAD;EAAtQ,CAAvE,CAAf;AACH,CAJM;;AAKP,IAAIE,gBAAgB,GAAG,UAAUL,QAAV,EAAoB;EACvC,OAAO,QAAQA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,WAAD,CAApE,MAAuF,QAA9F;AACH,CAFD"},"metadata":{},"sourceType":"module"}