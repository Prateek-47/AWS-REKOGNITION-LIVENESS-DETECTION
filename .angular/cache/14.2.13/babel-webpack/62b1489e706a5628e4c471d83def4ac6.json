{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({\n  defaultsMode\n} = {}) => memoize( /*#__PURE__*/_asyncToGenerator(function* () {\n  const mode = typeof defaultsMode === \"function\" ? yield defaultsMode() : defaultsMode;\n\n  switch (mode?.toLowerCase()) {\n    case \"auto\":\n      return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n\n    case \"mobile\":\n    case \"in-region\":\n    case \"cross-region\":\n    case \"standard\":\n    case \"legacy\":\n      return Promise.resolve(mode?.toLocaleLowerCase());\n\n    case undefined:\n      return Promise.resolve(\"legacy\");\n\n    default:\n      throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n  }\n}));\n\nconst isMobileBrowser = () => {\n  const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent ? bowser.parse(window.navigator.userAgent) : undefined;\n  const platform = parsedUA?.platform?.type;\n  return platform === \"tablet\" || platform === \"mobile\";\n};","map":{"version":3,"names":["memoize","bowser","DEFAULTS_MODE_OPTIONS","resolveDefaultsModeConfig","defaultsMode","mode","toLowerCase","Promise","resolve","isMobileBrowser","toLocaleLowerCase","undefined","Error","join","parsedUA","window","navigator","userAgent","parse","platform","type"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js"],"sourcesContent":["import { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,qBAAT,QAAsC,aAAtC;AACA,OAAO,MAAMC,yBAAyB,GAAG,CAAC;EAAEC;AAAF,IAAoB,EAArB,KAA4BJ,OAAO,iCAAC,aAAY;EACrF,MAAMK,IAAI,GAAG,OAAOD,YAAP,KAAwB,UAAxB,SAA2CA,YAAY,EAAvD,GAA4DA,YAAzE;;EACA,QAAQC,IAAI,EAAEC,WAAN,EAAR;IACI,KAAK,MAAL;MACI,OAAOC,OAAO,CAACC,OAAR,CAAgBC,eAAe,KAAK,QAAL,GAAgB,UAA/C,CAAP;;IACJ,KAAK,QAAL;IACA,KAAK,WAAL;IACA,KAAK,cAAL;IACA,KAAK,UAAL;IACA,KAAK,QAAL;MACI,OAAOF,OAAO,CAACC,OAAR,CAAgBH,IAAI,EAAEK,iBAAN,EAAhB,CAAP;;IACJ,KAAKC,SAAL;MACI,OAAOJ,OAAO,CAACC,OAAR,CAAgB,QAAhB,CAAP;;IACJ;MACI,MAAM,IAAII,KAAJ,CAAW,gDAA+CV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,CAAiC,SAAQR,IAAK,EAAxG,CAAN;EAZR;AAcH,CAhB2E,EAArE;;AAiBP,MAAMI,eAAe,GAAG,MAAM;EAC1B,MAAMK,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,EAAEC,SAAR,EAAmBC,SAApD,GACXhB,MAAM,CAACiB,KAAP,CAAaH,MAAM,CAACC,SAAP,CAAiBC,SAA9B,CADW,GAEXN,SAFN;EAGA,MAAMQ,QAAQ,GAAGL,QAAQ,EAAEK,QAAV,EAAoBC,IAArC;EACA,OAAOD,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,QAA7C;AACH,CAND"},"metadata":{},"sourceType":"module"}