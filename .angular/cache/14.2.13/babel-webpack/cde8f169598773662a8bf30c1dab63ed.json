{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\nimport { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { Amplify } from './Amplify';\nimport { getId, getCredentialsForIdentity } from './AwsClients/CognitoIdentity';\nimport { parseAWSExports } from './parseAWSExports';\nimport { Hub } from './Hub';\nvar logger = new Logger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\n\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchCredentialsEvent = function (event, data, message) {\n  Hub.dispatch('core', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Credentials', AMPLIFY_SYMBOL);\n};\n\nvar CredentialsClass =\n/** @class */\nfunction () {\n  function CredentialsClass(config) {\n    this._gettingCredPromise = null;\n    this._refreshHandlers = {}; // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n\n    this.Auth = undefined;\n    this.configure(config);\n    this._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n    this._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n  }\n\n  CredentialsClass.prototype.getModuleName = function () {\n    return 'Credentials';\n  };\n\n  CredentialsClass.prototype.getCredSource = function () {\n    return this._credentials_source;\n  };\n\n  CredentialsClass.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    this._config = Object.assign({}, this._config, config);\n    var refreshHandlers = this._config.refreshHandlers; // If the developer has provided an object of refresh handlers,\n    // then we can merge the provided handlers with the current handlers.\n\n    if (refreshHandlers) {\n      this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n    }\n\n    this._storage = this._config.storage;\n\n    if (!this._storage) {\n      this._storage = new StorageHelper().getStorage();\n    }\n\n    this._storageSync = Promise.resolve();\n\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n\n    dispatchCredentialsEvent('credentials_configured', null, \"Credentials has been configured successfully\");\n    return this._config;\n  };\n\n  CredentialsClass.prototype.get = function () {\n    logger.debug('getting credentials');\n    return this._pickupCredentials();\n  }; // currently we only store the guest identity in local storage\n\n\n  CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n    return \"\".concat(COGNITO_IDENTITY_KEY_PREFIX).concat(identityPoolId);\n  };\n\n  CredentialsClass.prototype._pickupCredentials = function () {\n    logger.debug('picking up credentials');\n\n    if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n      logger.debug('getting new cred promise');\n      this._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n    } else {\n      logger.debug('getting old cred promise');\n    }\n\n    return this._gettingCredPromise;\n  };\n\n  CredentialsClass.prototype._keepAlive = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            logger.debug('checking if credentials exists and not expired');\n            cred = this._credentials;\n\n            if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n              logger.debug('credentials not changed and not expired, directly return');\n              return [2\n              /*return*/\n              , Promise.resolve(cred)];\n            }\n\n            logger.debug('need to get a new credential or refresh the existing one');\n            _a = this.Auth, Auth = _a === void 0 ? Amplify.Auth : _a;\n\n            if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n              // If Auth module is not imported, do a best effort to get guest credentials\n              return [2\n              /*return*/\n              , this._setCredentialsForGuest()];\n            }\n\n            if (!(!this._isExpired(cred) && this._isPastTTL())) return [3\n            /*break*/\n            , 6];\n            logger.debug('ttl has passed but token is not yet expired');\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , Auth.currentUserPoolUser()];\n\n          case 2:\n            user_1 = _b.sent();\n            return [4\n            /*yield*/\n            , Auth.currentSession()];\n\n          case 3:\n            session = _b.sent();\n            refreshToken_1 = session.refreshToken;\n            refreshRequest = new Promise(function (res, rej) {\n              user_1.refreshSession(refreshToken_1, function (err, data) {\n                return err ? rej(err) : res(data);\n              });\n            });\n            return [4\n            /*yield*/\n            , refreshRequest];\n\n          case 4:\n            _b.sent(); // note that rejections will be caught and handled in the catch block.\n\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_1 = _b.sent(); // should not throw because user might just be on guest access or is authenticated through federation\n\n            logger.debug('Error attempting to refreshing the session', err_1);\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            , Auth.currentUserCredentials()];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n    logger.debug('Getting federated credentials');\n    var provider = federatedInfo.provider,\n        user = federatedInfo.user,\n        token = federatedInfo.token,\n        identity_id = federatedInfo.identity_id;\n    var expires_at = federatedInfo.expires_at; // Make sure expires_at is in millis\n\n    expires_at = new Date(expires_at).getFullYear() === 1970 ? expires_at * 1000 : expires_at;\n    var that = this;\n    logger.debug('checking if federated jwt token expired');\n\n    if (expires_at > new Date().getTime()) {\n      // if not expired\n      logger.debug('token not expired');\n      return this._setCredentialsFromFederation({\n        provider: provider,\n        token: token,\n        user: user,\n        identity_id: identity_id,\n        expires_at: expires_at\n      });\n    } else {\n      // if refresh handler exists\n      if (that._refreshHandlers[provider] && typeof that._refreshHandlers[provider] === 'function') {\n        logger.debug('getting refreshed jwt token from federation provider');\n        return this._providerRefreshWithRetry({\n          refreshHandler: that._refreshHandlers[provider],\n          provider: provider,\n          user: user\n        });\n      } else {\n        logger.debug('no refresh handler for provider:', provider);\n        this.clear();\n        return Promise.reject('no refresh handler for provider');\n      }\n    }\n  };\n\n  CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n    var _this = this;\n\n    var refreshHandler = _a.refreshHandler,\n        provider = _a.provider,\n        user = _a.user;\n    var MAX_DELAY_MS = 10 * 1000; // refreshHandler will retry network errors, otherwise it will\n    // return NonRetryableError to break out of jitteredExponentialRetry\n\n    return jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS).then(function (data) {\n      logger.debug('refresh federated token sucessfully', data);\n      return _this._setCredentialsFromFederation({\n        provider: provider,\n        token: data.token,\n        user: user,\n        identity_id: data.identity_id,\n        expires_at: data.expires_at\n      });\n    }).catch(function (e) {\n      var isNetworkError = typeof e === 'string' && e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n\n      if (!isNetworkError) {\n        _this.clear();\n      }\n\n      logger.debug('refresh federated token failed', e);\n      return Promise.reject('refreshing federation token failed: ' + e);\n    });\n  };\n\n  CredentialsClass.prototype._isExpired = function (credentials) {\n    if (!credentials) {\n      logger.debug('no credentials for expiration check');\n      return true;\n    }\n\n    logger.debug('are these credentials expired?', credentials);\n    var ts = Date.now();\n    /* returns date object.\n        https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n    */\n\n    var expiration = credentials.expiration;\n    return expiration.getTime() <= ts;\n  };\n\n  CredentialsClass.prototype._isPastTTL = function () {\n    return this._nextCredentialsRefresh <= Date.now();\n  };\n\n  CredentialsClass.prototype._setCredentialsForGuest = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, identityPoolId, region, mandatorySignIn, identityPoolRegion, identityId, _c, cognitoConfig, guestCredentialsProvider, credentials;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            logger.debug('setting credentials for guest');\n\n            if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.identityPoolId)) {\n              // If Credentials are not configured thru Auth module,\n              // doing best effort to check if the library was configured\n              this._config = Object.assign({}, this._config, parseAWSExports(this._config || {}).Auth);\n            }\n\n            _b = this._config, identityPoolId = _b.identityPoolId, region = _b.region, mandatorySignIn = _b.mandatorySignIn, identityPoolRegion = _b.identityPoolRegion;\n\n            if (mandatorySignIn) {\n              return [2\n              /*return*/\n              , Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n            }\n\n            if (!identityPoolId) {\n              logger.debug('No Cognito Identity pool provided for unauthenticated access');\n              return [2\n              /*return*/\n              , Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n            }\n\n            if (!identityPoolRegion && !region) {\n              logger.debug('region is not configured for getting the credentials');\n              return [2\n              /*return*/\n              , Promise.reject('region is not configured for getting the credentials')];\n            }\n\n            _c = this;\n            return [4\n            /*yield*/\n            , this._getGuestIdentityId()];\n\n          case 1:\n            identityId = _c._identityId = _d.sent();\n            cognitoConfig = {\n              region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n            };\n\n            guestCredentialsProvider = function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var IdentityId, Credentials;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!!identityId) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , getId(cognitoConfig, {\n                        IdentityPoolId: identityPoolId\n                      })];\n\n                    case 1:\n                      IdentityId = _a.sent().IdentityId;\n                      this._identityId = IdentityId;\n                      _a.label = 2;\n\n                    case 2:\n                      return [4\n                      /*yield*/\n                      , getCredentialsForIdentity(cognitoConfig, {\n                        IdentityId: this._identityId\n                      })];\n\n                    case 3:\n                      Credentials = _a.sent().Credentials;\n                      return [2\n                      /*return*/\n                      , {\n                        identityId: this._identityId,\n                        accessKeyId: Credentials.AccessKeyId,\n                        secretAccessKey: Credentials.SecretKey,\n                        sessionToken: Credentials.SessionToken,\n                        expiration: Credentials.Expiration\n                      }];\n                  }\n                });\n              });\n            };\n\n            credentials = guestCredentialsProvider().catch(function (err) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  throw err;\n                });\n              });\n            });\n            return [2\n            /*return*/\n            , this._loadCredentials(credentials, 'guest', false, null).then(function (res) {\n              return res;\n            }).catch(function (e) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var guestCredentialsProvider_1;\n\n                var _this = this;\n\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!(e.name === 'ResourceNotFoundException' && e.message === \"Identity '\".concat(identityId, \"' not found.\"))) return [3\n                      /*break*/\n                      , 2];\n                      logger.debug('Failed to load guest credentials');\n                      return [4\n                      /*yield*/\n                      , this._removeGuestIdentityId()];\n\n                    case 1:\n                      _a.sent();\n\n                      guestCredentialsProvider_1 = function () {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var IdentityId, Credentials;\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                return [4\n                                /*yield*/\n                                , getId(cognitoConfig, {\n                                  IdentityPoolId: identityPoolId\n                                })];\n\n                              case 1:\n                                IdentityId = _a.sent().IdentityId;\n                                this._identityId = IdentityId;\n                                return [4\n                                /*yield*/\n                                , getCredentialsForIdentity(cognitoConfig, {\n                                  IdentityId: IdentityId\n                                })];\n\n                              case 2:\n                                Credentials = _a.sent().Credentials;\n                                return [2\n                                /*return*/\n                                , {\n                                  identityId: IdentityId,\n                                  accessKeyId: Credentials.AccessKeyId,\n                                  secretAccessKey: Credentials.SecretKey,\n                                  sessionToken: Credentials.SessionToken,\n                                  expiration: Credentials.Expiration\n                                }];\n                            }\n                          });\n                        });\n                      };\n\n                      credentials = guestCredentialsProvider_1().catch(function (err) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          return __generator(this, function (_a) {\n                            throw err;\n                          });\n                        });\n                      });\n                      return [2\n                      /*return*/\n                      , this._loadCredentials(credentials, 'guest', false, null)];\n\n                    case 2:\n                      return [2\n                      /*return*/\n                      , e];\n                  }\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n    var _this = this;\n\n    var provider = params.provider,\n        token = params.token;\n    var identity_id = params.identity_id;\n    var domains = {\n      google: 'accounts.google.com',\n      facebook: 'graph.facebook.com',\n      amazon: 'www.amazon.com',\n      developer: 'cognito-identity.amazonaws.com'\n    }; // Use custom provider url instead of the predefined ones\n\n    var domain = domains[provider] || provider;\n\n    if (!domain) {\n      return Promise.reject('You must specify a federated provider');\n    }\n\n    var logins = {};\n    logins[domain] = token;\n    var _a = this._config,\n        identityPoolId = _a.identityPoolId,\n        region = _a.region,\n        identityPoolRegion = _a.identityPoolRegion;\n\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n\n    if (!identityPoolRegion && !region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n\n    var cognitoConfig = {\n      region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n    };\n\n    var authenticatedCredentialsProvider = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var IdentityId, Credentials;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!identity_id) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , getId(cognitoConfig, {\n                IdentityPoolId: identityPoolId,\n                Logins: logins\n              })];\n\n            case 1:\n              IdentityId = _a.sent().IdentityId;\n              identity_id = IdentityId;\n              _a.label = 2;\n\n            case 2:\n              return [4\n              /*yield*/\n              , getCredentialsForIdentity(cognitoConfig, {\n                IdentityId: identity_id,\n                Logins: logins\n              })];\n\n            case 3:\n              Credentials = _a.sent().Credentials;\n              return [2\n              /*return*/\n              , {\n                identityId: identity_id,\n                accessKeyId: Credentials.AccessKeyId,\n                secretAccessKey: Credentials.SecretKey,\n                sessionToken: Credentials.SessionToken,\n                expiration: Credentials.Expiration\n              }];\n          }\n        });\n      });\n    };\n\n    var credentials = authenticatedCredentialsProvider().catch(function (err) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw err;\n        });\n      });\n    });\n    return this._loadCredentials(credentials, 'federated', true, params);\n  };\n\n  CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n    var _this = this;\n\n    logger.debug('set credentials from session');\n    var idToken = session.getIdToken().getJwtToken();\n    var _a = this._config,\n        region = _a.region,\n        userPoolId = _a.userPoolId,\n        identityPoolId = _a.identityPoolId,\n        identityPoolRegion = _a.identityPoolRegion;\n\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n\n    if (!identityPoolRegion && !region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n\n    var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n    var logins = {};\n    logins[key] = idToken;\n    var cognitoConfig = {\n      region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n    };\n    /*\n        Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n        https://git.io/JeDxU\n         Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n    */\n\n    var credentialsProvider = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this._getGuestIdentityId()];\n\n            case 1:\n              guestIdentityId = _c.sent();\n              if (!!guestIdentityId) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , getId(cognitoConfig, {\n                IdentityPoolId: identityPoolId,\n                Logins: logins\n              })];\n\n            case 2:\n              IdentityId = _c.sent().IdentityId;\n              generatedOrRetrievedIdentityId = IdentityId;\n              _c.label = 3;\n\n            case 3:\n              return [4\n              /*yield*/\n              , getCredentialsForIdentity(cognitoConfig, {\n                IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                Logins: logins\n              })];\n\n            case 4:\n              _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n              this._identityId = primaryIdentityId;\n              if (!guestIdentityId) return [3\n              /*break*/\n              , 6]; // if guestIdentity is found and used by GetCredentialsForIdentity\n              // it will be linked to the logins provided, and disqualified as an unauth identity\n\n              logger.debug(\"The guest identity \".concat(guestIdentityId, \" has been successfully linked to the logins\"));\n\n              if (guestIdentityId === primaryIdentityId) {\n                logger.debug(\"The guest identity \".concat(guestIdentityId, \" has become the primary identity\"));\n              } // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n\n\n              return [4\n              /*yield*/\n              , this._removeGuestIdentityId()];\n\n            case 5:\n              // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n              _c.sent();\n\n              _c.label = 6;\n\n            case 6:\n              // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n              return [2\n              /*return*/\n              , {\n                accessKeyId: AccessKeyId,\n                secretAccessKey: SecretKey,\n                sessionToken: SessionToken,\n                expiration: Expiration,\n                identityId: primaryIdentityId\n              }];\n          }\n        });\n      });\n    };\n\n    var credentials = credentialsProvider().catch(function (err) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw err;\n        });\n      });\n    });\n    return this._loadCredentials(credentials, 'userPool', true, null);\n  };\n\n  CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n    var _this = this;\n\n    var that = this;\n    return new Promise(function (res, rej) {\n      credentials.then(function (credentials) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, provider, token, expires_at, identity_id;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug('Load credentials successfully', credentials);\n\n                if (this._identityId && !credentials.identityId) {\n                  credentials['identityId'] = this._identityId;\n                }\n\n                that._credentials = credentials;\n                that._credentials.authenticated = authenticated;\n                that._credentials_source = source;\n                that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n\n                if (source === 'federated') {\n                  user = Object.assign({\n                    id: this._credentials.identityId\n                  }, info.user);\n                  provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n\n                  try {\n                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                      provider: provider,\n                      token: token,\n                      user: user,\n                      expires_at: expires_at,\n                      identity_id: identity_id\n                    }));\n                  } catch (e) {\n                    logger.debug('Failed to put federated info into auth storage', e);\n                  }\n                }\n\n                if (!(source === 'guest')) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this._setGuestIdentityId(credentials.identityId)];\n\n              case 1:\n                _a.sent();\n\n                _a.label = 2;\n\n              case 2:\n                res(that._credentials);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      }).catch(function (err) {\n        if (err) {\n          logger.debug('Failed to load credentials', credentials);\n          logger.debug('Error loading credentials', err);\n          rej(err);\n          return;\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype.set = function (params, source) {\n    if (source === 'session') {\n      return this._setCredentialsFromSession(params);\n    } else if (source === 'federation') {\n      return this._setCredentialsFromFederation(params);\n    } else if (source === 'guest') {\n      return this._setCredentialsForGuest();\n    } else {\n      logger.debug('no source specified for setting credentials');\n      return Promise.reject('invalid source');\n    }\n  };\n\n  CredentialsClass.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._credentials = null;\n        this._credentials_source = null;\n        logger.debug('removing aws-amplify-federatedInfo from storage');\n\n        this._storage.removeItem('aws-amplify-federatedInfo');\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /* operations on local stored guest identity */\n\n\n  CredentialsClass.prototype._getGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n\n          case 3:\n            e_1 = _a.sent();\n            logger.debug('Failed to get the cached guest identityId', e_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_2 = _a.sent();\n            logger.debug('Failed to cache guest identityId', e_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._removeGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId;\n      return __generator(this, function (_a) {\n        identityPoolId = this._config.identityPoolId;\n        logger.debug(\"removing \".concat(this._getCognitoIdentityIdStorageKey(identityPoolId), \" from storage\"));\n\n        this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n\n\n  CredentialsClass.prototype.shear = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n\n  return CredentialsClass;\n}();\n\nexport { CredentialsClass };\nexport var Credentials = new CredentialsClass(null);\nAmplify.register(Credentials);","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","StorageHelper","makeQuerablePromise","FacebookOAuth","GoogleOAuth","jitteredExponentialRetry","Amplify","getId","getCredentialsForIdentity","parseAWSExports","Hub","logger","CREDENTIALS_TTL","COGNITO_IDENTITY_KEY_PREFIX","AMPLIFY_SYMBOL","for","dispatchCredentialsEvent","event","data","message","dispatch","CredentialsClass","config","_gettingCredPromise","_refreshHandlers","Auth","undefined","configure","refreshGoogleToken","refreshFacebookToken","getModuleName","getCredSource","_credentials_source","_config","refreshHandlers","_storage","storage","getStorage","_storageSync","get","debug","_pickupCredentials","_getCognitoIdentityIdStorageKey","identityPoolId","concat","isPending","_keepAlive","cred","_a","user_1","session","refreshToken_1","refreshRequest","err_1","_b","_credentials","_isExpired","_isPastTTL","currentUserCredentials","_setCredentialsForGuest","currentUserPoolUser","currentSession","refreshToken","res","rej","refreshSession","err","refreshFederatedToken","federatedInfo","provider","user","token","identity_id","expires_at","Date","getFullYear","that","getTime","_setCredentialsFromFederation","_providerRefreshWithRetry","refreshHandler","clear","_this","MAX_DELAY_MS","catch","isNetworkError","toLowerCase","lastIndexOf","credentials","ts","now","expiration","_nextCredentialsRefresh","region","mandatorySignIn","identityPoolRegion","identityId","_c","cognitoConfig","guestCredentialsProvider","_d","_getGuestIdentityId","_identityId","IdentityId","Credentials","IdentityPoolId","accessKeyId","AccessKeyId","secretAccessKey","SecretKey","sessionToken","SessionToken","Expiration","_loadCredentials","guestCredentialsProvider_1","name","_removeGuestIdentityId","params","domains","google","facebook","amazon","developer","domain","logins","authenticatedCredentialsProvider","Logins","_setCredentialsFromSession","idToken","getIdToken","getJwtToken","userPoolId","key","credentialsProvider","guestIdentityId","generatedOrRetrievedIdentityId","primaryIdentityId","source","authenticated","info","id","setItem","JSON","stringify","_setGuestIdentityId","set","removeItem","e_1","getItem","e_2","shear","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/Credentials.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { Amplify } from './Amplify';\nimport { getId, getCredentialsForIdentity } from './AwsClients/CognitoIdentity';\nimport { parseAWSExports } from './parseAWSExports';\nimport { Hub } from './Hub';\nvar logger = new Logger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchCredentialsEvent = function (event, data, message) {\n    Hub.dispatch('core', { event: event, data: data, message: message }, 'Credentials', AMPLIFY_SYMBOL);\n};\nvar CredentialsClass = /** @class */ (function () {\n    function CredentialsClass(config) {\n        this._gettingCredPromise = null;\n        this._refreshHandlers = {};\n        // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n        this.Auth = undefined;\n        this.configure(config);\n        this._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n        this._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n    }\n    CredentialsClass.prototype.getModuleName = function () {\n        return 'Credentials';\n    };\n    CredentialsClass.prototype.getCredSource = function () {\n        return this._credentials_source;\n    };\n    CredentialsClass.prototype.configure = function (config) {\n        if (!config)\n            return this._config || {};\n        this._config = Object.assign({}, this._config, config);\n        var refreshHandlers = this._config.refreshHandlers;\n        // If the developer has provided an object of refresh handlers,\n        // then we can merge the provided handlers with the current handlers.\n        if (refreshHandlers) {\n            this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n        }\n        this._storage = this._config.storage;\n        if (!this._storage) {\n            this._storage = new StorageHelper().getStorage();\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        dispatchCredentialsEvent('credentials_configured', null, \"Credentials has been configured successfully\");\n        return this._config;\n    };\n    CredentialsClass.prototype.get = function () {\n        logger.debug('getting credentials');\n        return this._pickupCredentials();\n    };\n    // currently we only store the guest identity in local storage\n    CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n        return \"\".concat(COGNITO_IDENTITY_KEY_PREFIX).concat(identityPoolId);\n    };\n    CredentialsClass.prototype._pickupCredentials = function () {\n        logger.debug('picking up credentials');\n        if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n            logger.debug('getting new cred promise');\n            this._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n        }\n        else {\n            logger.debug('getting old cred promise');\n        }\n        return this._gettingCredPromise;\n    };\n    CredentialsClass.prototype._keepAlive = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('checking if credentials exists and not expired');\n                        cred = this._credentials;\n                        if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n                            logger.debug('credentials not changed and not expired, directly return');\n                            return [2 /*return*/, Promise.resolve(cred)];\n                        }\n                        logger.debug('need to get a new credential or refresh the existing one');\n                        _a = this.Auth, Auth = _a === void 0 ? Amplify.Auth : _a;\n                        if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n                            // If Auth module is not imported, do a best effort to get guest credentials\n                            return [2 /*return*/, this._setCredentialsForGuest()];\n                        }\n                        if (!(!this._isExpired(cred) && this._isPastTTL())) return [3 /*break*/, 6];\n                        logger.debug('ttl has passed but token is not yet expired');\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, Auth.currentUserPoolUser()];\n                    case 2:\n                        user_1 = _b.sent();\n                        return [4 /*yield*/, Auth.currentSession()];\n                    case 3:\n                        session = _b.sent();\n                        refreshToken_1 = session.refreshToken;\n                        refreshRequest = new Promise(function (res, rej) {\n                            user_1.refreshSession(refreshToken_1, function (err, data) {\n                                return err ? rej(err) : res(data);\n                            });\n                        });\n                        return [4 /*yield*/, refreshRequest];\n                    case 4:\n                        _b.sent(); // note that rejections will be caught and handled in the catch block.\n                        return [3 /*break*/, 6];\n                    case 5:\n                        err_1 = _b.sent();\n                        // should not throw because user might just be on guest access or is authenticated through federation\n                        logger.debug('Error attempting to refreshing the session', err_1);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/, Auth.currentUserCredentials()];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n        logger.debug('Getting federated credentials');\n        var provider = federatedInfo.provider, user = federatedInfo.user, token = federatedInfo.token, identity_id = federatedInfo.identity_id;\n        var expires_at = federatedInfo.expires_at;\n        // Make sure expires_at is in millis\n        expires_at =\n            new Date(expires_at).getFullYear() === 1970\n                ? expires_at * 1000\n                : expires_at;\n        var that = this;\n        logger.debug('checking if federated jwt token expired');\n        if (expires_at > new Date().getTime()) {\n            // if not expired\n            logger.debug('token not expired');\n            return this._setCredentialsFromFederation({\n                provider: provider,\n                token: token,\n                user: user,\n                identity_id: identity_id,\n                expires_at: expires_at,\n            });\n        }\n        else {\n            // if refresh handler exists\n            if (that._refreshHandlers[provider] &&\n                typeof that._refreshHandlers[provider] === 'function') {\n                logger.debug('getting refreshed jwt token from federation provider');\n                return this._providerRefreshWithRetry({\n                    refreshHandler: that._refreshHandlers[provider],\n                    provider: provider,\n                    user: user,\n                });\n            }\n            else {\n                logger.debug('no refresh handler for provider:', provider);\n                this.clear();\n                return Promise.reject('no refresh handler for provider');\n            }\n        }\n    };\n    CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n        var _this = this;\n        var refreshHandler = _a.refreshHandler, provider = _a.provider, user = _a.user;\n        var MAX_DELAY_MS = 10 * 1000;\n        // refreshHandler will retry network errors, otherwise it will\n        // return NonRetryableError to break out of jitteredExponentialRetry\n        return jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS)\n            .then(function (data) {\n            logger.debug('refresh federated token sucessfully', data);\n            return _this._setCredentialsFromFederation({\n                provider: provider,\n                token: data.token,\n                user: user,\n                identity_id: data.identity_id,\n                expires_at: data.expires_at,\n            });\n        })\n            .catch(function (e) {\n            var isNetworkError = typeof e === 'string' &&\n                e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n            if (!isNetworkError) {\n                _this.clear();\n            }\n            logger.debug('refresh federated token failed', e);\n            return Promise.reject('refreshing federation token failed: ' + e);\n        });\n    };\n    CredentialsClass.prototype._isExpired = function (credentials) {\n        if (!credentials) {\n            logger.debug('no credentials for expiration check');\n            return true;\n        }\n        logger.debug('are these credentials expired?', credentials);\n        var ts = Date.now();\n        /* returns date object.\n            https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n        */\n        var expiration = credentials.expiration;\n        return expiration.getTime() <= ts;\n    };\n    CredentialsClass.prototype._isPastTTL = function () {\n        return this._nextCredentialsRefresh <= Date.now();\n    };\n    CredentialsClass.prototype._setCredentialsForGuest = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, identityPoolId, region, mandatorySignIn, identityPoolRegion, identityId, _c, cognitoConfig, guestCredentialsProvider, credentials;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        logger.debug('setting credentials for guest');\n                        if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.identityPoolId)) {\n                            // If Credentials are not configured thru Auth module,\n                            // doing best effort to check if the library was configured\n                            this._config = Object.assign({}, this._config, parseAWSExports(this._config || {}).Auth);\n                        }\n                        _b = this._config, identityPoolId = _b.identityPoolId, region = _b.region, mandatorySignIn = _b.mandatorySignIn, identityPoolRegion = _b.identityPoolRegion;\n                        if (mandatorySignIn) {\n                            return [2 /*return*/, Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n                        }\n                        if (!identityPoolId) {\n                            logger.debug('No Cognito Identity pool provided for unauthenticated access');\n                            return [2 /*return*/, Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n                        }\n                        if (!identityPoolRegion && !region) {\n                            logger.debug('region is not configured for getting the credentials');\n                            return [2 /*return*/, Promise.reject('region is not configured for getting the credentials')];\n                        }\n                        _c = this;\n                        return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        identityId = (_c._identityId = _d.sent());\n                        cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n                        guestCredentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n                            var IdentityId, Credentials;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!!identityId) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, getId(cognitoConfig, {\n                                                IdentityPoolId: identityPoolId,\n                                            })];\n                                    case 1:\n                                        IdentityId = (_a.sent()).IdentityId;\n                                        this._identityId = IdentityId;\n                                        _a.label = 2;\n                                    case 2: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                                            IdentityId: this._identityId,\n                                        })];\n                                    case 3:\n                                        Credentials = (_a.sent()).Credentials;\n                                        return [2 /*return*/, {\n                                                identityId: this._identityId,\n                                                accessKeyId: Credentials.AccessKeyId,\n                                                secretAccessKey: Credentials.SecretKey,\n                                                sessionToken: Credentials.SessionToken,\n                                                expiration: Credentials.Expiration,\n                                            }];\n                                }\n                            });\n                        }); };\n                        credentials = guestCredentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                throw err;\n                            });\n                        }); });\n                        return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)\n                                .then(function (res) {\n                                return res;\n                            })\n                                .catch(function (e) { return __awaiter(_this, void 0, void 0, function () {\n                                var guestCredentialsProvider_1;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!(e.name === 'ResourceNotFoundException' &&\n                                                e.message === \"Identity '\".concat(identityId, \"' not found.\"))) return [3 /*break*/, 2];\n                                            logger.debug('Failed to load guest credentials');\n                                            return [4 /*yield*/, this._removeGuestIdentityId()];\n                                        case 1:\n                                            _a.sent();\n                                            guestCredentialsProvider_1 = function () { return __awaiter(_this, void 0, void 0, function () {\n                                                var IdentityId, Credentials;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0: return [4 /*yield*/, getId(cognitoConfig, {\n                                                                IdentityPoolId: identityPoolId,\n                                                            })];\n                                                        case 1:\n                                                            IdentityId = (_a.sent()).IdentityId;\n                                                            this._identityId = IdentityId;\n                                                            return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                                                                    IdentityId: IdentityId,\n                                                                })];\n                                                        case 2:\n                                                            Credentials = (_a.sent()).Credentials;\n                                                            return [2 /*return*/, {\n                                                                    identityId: IdentityId,\n                                                                    accessKeyId: Credentials.AccessKeyId,\n                                                                    secretAccessKey: Credentials.SecretKey,\n                                                                    sessionToken: Credentials.SessionToken,\n                                                                    expiration: Credentials.Expiration,\n                                                                }];\n                                                    }\n                                                });\n                                            }); };\n                                            credentials = guestCredentialsProvider_1().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    throw err;\n                                                });\n                                            }); });\n                                            return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)];\n                                        case 2: return [2 /*return*/, e];\n                                    }\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n        var _this = this;\n        var provider = params.provider, token = params.token;\n        var identity_id = params.identity_id;\n        var domains = {\n            google: 'accounts.google.com',\n            facebook: 'graph.facebook.com',\n            amazon: 'www.amazon.com',\n            developer: 'cognito-identity.amazonaws.com',\n        };\n        // Use custom provider url instead of the predefined ones\n        var domain = domains[provider] || provider;\n        if (!domain) {\n            return Promise.reject('You must specify a federated provider');\n        }\n        var logins = {};\n        logins[domain] = token;\n        var _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, identityPoolRegion = _a.identityPoolRegion;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!identityPoolRegion && !region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n        var authenticatedCredentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n            var IdentityId, Credentials;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!identity_id) return [3 /*break*/, 2];\n                        return [4 /*yield*/, getId(cognitoConfig, {\n                                IdentityPoolId: identityPoolId,\n                                Logins: logins,\n                            })];\n                    case 1:\n                        IdentityId = (_a.sent()).IdentityId;\n                        identity_id = IdentityId;\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                            IdentityId: identity_id,\n                            Logins: logins,\n                        })];\n                    case 3:\n                        Credentials = (_a.sent()).Credentials;\n                        return [2 /*return*/, {\n                                identityId: identity_id,\n                                accessKeyId: Credentials.AccessKeyId,\n                                secretAccessKey: Credentials.SecretKey,\n                                sessionToken: Credentials.SessionToken,\n                                expiration: Credentials.Expiration,\n                            }];\n                }\n            });\n        }); };\n        var credentials = authenticatedCredentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw err;\n            });\n        }); });\n        return this._loadCredentials(credentials, 'federated', true, params);\n    };\n    CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n        var _this = this;\n        logger.debug('set credentials from session');\n        var idToken = session.getIdToken().getJwtToken();\n        var _a = this._config, region = _a.region, userPoolId = _a.userPoolId, identityPoolId = _a.identityPoolId, identityPoolRegion = _a.identityPoolRegion;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!identityPoolRegion && !region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n        var logins = {};\n        logins[key] = idToken;\n        var cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n        /*\n            Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n            https://git.io/JeDxU\n\n            Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n        */\n        var credentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n            var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        guestIdentityId = _c.sent();\n                        if (!!guestIdentityId) return [3 /*break*/, 3];\n                        return [4 /*yield*/, getId(cognitoConfig, {\n                                IdentityPoolId: identityPoolId,\n                                Logins: logins,\n                            })];\n                    case 2:\n                        IdentityId = (_c.sent()).IdentityId;\n                        generatedOrRetrievedIdentityId = IdentityId;\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                            IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                            Logins: logins,\n                        })];\n                    case 4:\n                        _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n                        this._identityId = primaryIdentityId;\n                        if (!guestIdentityId) return [3 /*break*/, 6];\n                        // if guestIdentity is found and used by GetCredentialsForIdentity\n                        // it will be linked to the logins provided, and disqualified as an unauth identity\n                        logger.debug(\"The guest identity \".concat(guestIdentityId, \" has been successfully linked to the logins\"));\n                        if (guestIdentityId === primaryIdentityId) {\n                            logger.debug(\"The guest identity \".concat(guestIdentityId, \" has become the primary identity\"));\n                        }\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        return [4 /*yield*/, this._removeGuestIdentityId()];\n                    case 5:\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        _c.sent();\n                        _c.label = 6;\n                    case 6: \n                    // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n                    return [2 /*return*/, {\n                            accessKeyId: AccessKeyId,\n                            secretAccessKey: SecretKey,\n                            sessionToken: SessionToken,\n                            expiration: Expiration,\n                            identityId: primaryIdentityId,\n                        }];\n                }\n            });\n        }); };\n        var credentials = credentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw err;\n            });\n        }); });\n        return this._loadCredentials(credentials, 'userPool', true, null);\n    };\n    CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            credentials\n                .then(function (credentials) { return __awaiter(_this, void 0, void 0, function () {\n                var user, provider, token, expires_at, identity_id;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug('Load credentials successfully', credentials);\n                            if (this._identityId && !credentials.identityId) {\n                                credentials['identityId'] = this._identityId;\n                            }\n                            that._credentials = credentials;\n                            that._credentials.authenticated = authenticated;\n                            that._credentials_source = source;\n                            that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n                            if (source === 'federated') {\n                                user = Object.assign({ id: this._credentials.identityId }, info.user);\n                                provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n                                try {\n                                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                                        provider: provider,\n                                        token: token,\n                                        user: user,\n                                        expires_at: expires_at,\n                                        identity_id: identity_id,\n                                    }));\n                                }\n                                catch (e) {\n                                    logger.debug('Failed to put federated info into auth storage', e);\n                                }\n                            }\n                            if (!(source === 'guest')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this._setGuestIdentityId(credentials.identityId)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            res(that._credentials);\n                            return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (err) {\n                if (err) {\n                    logger.debug('Failed to load credentials', credentials);\n                    logger.debug('Error loading credentials', err);\n                    rej(err);\n                    return;\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.set = function (params, source) {\n        if (source === 'session') {\n            return this._setCredentialsFromSession(params);\n        }\n        else if (source === 'federation') {\n            return this._setCredentialsFromFederation(params);\n        }\n        else if (source === 'guest') {\n            return this._setCredentialsForGuest();\n        }\n        else {\n            logger.debug('no source specified for setting credentials');\n            return Promise.reject('invalid source');\n        }\n    };\n    CredentialsClass.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._credentials = null;\n                this._credentials_source = null;\n                logger.debug('removing aws-amplify-federatedInfo from storage');\n                this._storage.removeItem('aws-amplify-federatedInfo');\n                return [2 /*return*/];\n            });\n        });\n    };\n    /* operations on local stored guest identity */\n    CredentialsClass.prototype._getGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n                    case 3:\n                        e_1 = _a.sent();\n                        logger.debug('Failed to get the cached guest identityId', e_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_2 = _a.sent();\n                        logger.debug('Failed to cache guest identityId', e_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._removeGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId;\n            return __generator(this, function (_a) {\n                identityPoolId = this._config.identityPoolId;\n                logger.debug(\"removing \".concat(this._getCognitoIdentityIdStorageKey(identityPoolId), \" from storage\"));\n                this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    CredentialsClass.prototype.shear = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    return CredentialsClass;\n}());\nexport { CredentialsClass };\nexport var Credentials = new CredentialsClass(null);\nAmplify.register(Credentials);\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IACP;;IACD,OAAON,CAAP;EACH,CAPD;;EAQA,OAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACL,KAAV,CAAgBE,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASA,IAAIM,WAAW,GAAI,QAAQ,KAAKA,WAAd,IAA8B,UAAUjB,OAAV,EAAmBkB,IAAnB,EAAyB;EACrE,IAAIC,CAAC,GAAG;IAAEC,KAAK,EAAE,CAAT;IAAYC,IAAI,EAAE,YAAW;MAAE,IAAIjC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc,MAAMA,CAAC,CAAC,CAAD,CAAP;MAAY,OAAOA,CAAC,CAAC,CAAD,CAAR;IAAc,CAAvE;IAAyEkC,IAAI,EAAE,EAA/E;IAAmFC,GAAG,EAAE;EAAxF,CAAR;EAAA,IAAsGC,CAAtG;EAAA,IAAyGC,CAAzG;EAAA,IAA4GrC,CAA5G;EAAA,IAA+GsC,CAA/G;EACA,OAAOA,CAAC,GAAG;IAAEf,IAAI,EAAEgB,IAAI,CAAC,CAAD,CAAZ;IAAiB,SAASA,IAAI,CAAC,CAAD,CAA9B;IAAmC,UAAUA,IAAI,CAAC,CAAD;EAAjD,CAAJ,EAA4D,OAAOC,MAAP,KAAkB,UAAlB,KAAiCF,CAAC,CAACE,MAAM,CAACC,QAAR,CAAD,GAAqB,YAAW;IAAE,OAAO,IAAP;EAAc,CAAjF,CAA5D,EAAgJH,CAAvJ;;EACA,SAASC,IAAT,CAAcpC,CAAd,EAAiB;IAAE,OAAO,UAAUuC,CAAV,EAAa;MAAE,OAAOpB,IAAI,CAAC,CAACnB,CAAD,EAAIuC,CAAJ,CAAD,CAAX;IAAsB,CAA5C;EAA+C;;EAClE,SAASpB,IAAT,CAAcqB,EAAd,EAAkB;IACd,IAAIP,CAAJ,EAAO,MAAM,IAAIQ,SAAJ,CAAc,iCAAd,CAAN;;IACP,OAAON,CAAC,KAAKA,CAAC,GAAG,CAAJ,EAAOK,EAAE,CAAC,CAAD,CAAF,KAAUZ,CAAC,GAAG,CAAd,CAAZ,CAAD,EAAgCA,CAAvC,EAA0C,IAAI;MAC1C,IAAIK,CAAC,GAAG,CAAJ,EAAOC,CAAC,KAAKrC,CAAC,GAAG2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR,GAAYN,CAAC,CAAC,QAAD,CAAb,GAA0BM,EAAE,CAAC,CAAD,CAAF,GAAQN,CAAC,CAAC,OAAD,CAAD,KAAe,CAACrC,CAAC,GAAGqC,CAAC,CAAC,QAAD,CAAN,KAAqBrC,CAAC,CAACS,IAAF,CAAO4B,CAAP,CAArB,EAAgC,CAA/C,CAAR,GAA4DA,CAAC,CAACd,IAAjG,CAAD,IAA2G,CAAC,CAACvB,CAAC,GAAGA,CAAC,CAACS,IAAF,CAAO4B,CAAP,EAAUM,EAAE,CAAC,CAAD,CAAZ,CAAL,EAAuBhB,IAA9I,EAAoJ,OAAO3B,CAAP;MACpJ,IAAIqC,CAAC,GAAG,CAAJ,EAAOrC,CAAX,EAAc2C,EAAE,GAAG,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,EAAY3C,CAAC,CAACiB,KAAd,CAAL;;MACd,QAAQ0B,EAAE,CAAC,CAAD,CAAV;QACI,KAAK,CAAL;QAAQ,KAAK,CAAL;UAAQ3C,CAAC,GAAG2C,EAAJ;UAAQ;;QACxB,KAAK,CAAL;UAAQZ,CAAC,CAACC,KAAF;UAAW,OAAO;YAAEf,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAX;YAAgBhB,IAAI,EAAE;UAAtB,CAAP;;QACnB,KAAK,CAAL;UAAQI,CAAC,CAACC,KAAF;UAAWK,CAAC,GAAGM,EAAE,CAAC,CAAD,CAAN;UAAWA,EAAE,GAAG,CAAC,CAAD,CAAL;UAAU;;QACxC,KAAK,CAAL;UAAQA,EAAE,GAAGZ,CAAC,CAACI,GAAF,CAAMU,GAAN,EAAL;;UAAkBd,CAAC,CAACG,IAAF,CAAOW,GAAP;;UAAc;;QACxC;UACI,IAAI,EAAE7C,CAAC,GAAG+B,CAAC,CAACG,IAAN,EAAYlC,CAAC,GAAGA,CAAC,CAACK,MAAF,GAAW,CAAX,IAAgBL,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAAnC,MAAuDsC,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAhF,CAAJ,EAAwF;YAAEZ,CAAC,GAAG,CAAJ;YAAO;UAAW;;UAC5G,IAAIY,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,KAAgB,CAAC3C,CAAD,IAAO2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAT,IAAgB2C,EAAE,CAAC,CAAD,CAAF,GAAQ3C,CAAC,CAAC,CAAD,CAAhD,CAAJ,EAA2D;YAAE+B,CAAC,CAACC,KAAF,GAAUW,EAAE,CAAC,CAAD,CAAZ;YAAiB;UAAQ;;UACtF,IAAIA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeZ,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAA9B,EAAmC;YAAE+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;YAAgBA,CAAC,GAAG2C,EAAJ;YAAQ;UAAQ;;UACrE,IAAI3C,CAAC,IAAI+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAApB,EAAyB;YAAE+B,CAAC,CAACC,KAAF,GAAUhC,CAAC,CAAC,CAAD,CAAX;;YAAgB+B,CAAC,CAACI,GAAF,CAAMW,IAAN,CAAWH,EAAX;;YAAgB;UAAQ;;UACnE,IAAI3C,CAAC,CAAC,CAAD,CAAL,EAAU+B,CAAC,CAACI,GAAF,CAAMU,GAAN;;UACVd,CAAC,CAACG,IAAF,CAAOW,GAAP;;UAAc;MAXtB;;MAaAF,EAAE,GAAGb,IAAI,CAACrB,IAAL,CAAUG,OAAV,EAAmBmB,CAAnB,CAAL;IACH,CAjByC,CAiBxC,OAAOP,CAAP,EAAU;MAAEmB,EAAE,GAAG,CAAC,CAAD,EAAInB,CAAJ,CAAL;MAAaa,CAAC,GAAG,CAAJ;IAAQ,CAjBO,SAiBE;MAAED,CAAC,GAAGpC,CAAC,GAAG,CAAR;IAAY;;IAC1D,IAAI2C,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAZ,EAAe,MAAMA,EAAE,CAAC,CAAD,CAAR;IAAa,OAAO;MAAE1B,KAAK,EAAE0B,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAV,GAAgB,KAAK,CAA9B;MAAiChB,IAAI,EAAE;IAAvC,CAAP;EAC/B;AACJ,CA1BD,C,CA2BA;AACA;;;AACA,SAASoB,aAAa,IAAIC,MAA1B,QAAwC,UAAxC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,mBAAT,QAAoC,MAApC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,eAA3C;AACA,SAASC,wBAAT,QAAyC,QAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,KAAT,EAAgBC,yBAAhB,QAAiD,8BAAjD;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,IAAIC,MAAM,GAAG,IAAIX,MAAJ,CAAW,aAAX,CAAb;AACA,IAAIY,eAAe,GAAG,KAAK,EAAL,GAAU,IAAhC,C,CAAsC;;AACtC,IAAIC,2BAA2B,GAAG,oBAAlC;AACA,IAAIC,cAAc,GAAI,OAAOtB,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACuB,GAAd,KAAsB,UAAvD,GAChBvB,MAAM,CAACuB,GAAP,CAAW,iBAAX,CADgB,GAEhB,mBAFN;;AAGA,IAAIC,wBAAwB,GAAG,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;EAC3DT,GAAG,CAACU,QAAJ,CAAa,MAAb,EAAqB;IAAEH,KAAK,EAAEA,KAAT;IAAgBC,IAAI,EAAEA,IAAtB;IAA4BC,OAAO,EAAEA;EAArC,CAArB,EAAqE,aAArE,EAAoFL,cAApF;AACH,CAFD;;AAGA,IAAIO,gBAAgB;AAAG;AAAe,YAAY;EAC9C,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;IAC9B,KAAKC,mBAAL,GAA2B,IAA3B;IACA,KAAKC,gBAAL,GAAwB,EAAxB,CAF8B,CAG9B;;IACA,KAAKC,IAAL,GAAYC,SAAZ;IACA,KAAKC,SAAL,CAAeL,MAAf;IACA,KAAKE,gBAAL,CAAsB,QAAtB,IAAkCpB,WAAW,CAACwB,kBAA9C;IACA,KAAKJ,gBAAL,CAAsB,UAAtB,IAAoCrB,aAAa,CAAC0B,oBAAlD;EACH;;EACDR,gBAAgB,CAAC9D,SAAjB,CAA2BuE,aAA3B,GAA2C,YAAY;IACnD,OAAO,aAAP;EACH,CAFD;;EAGAT,gBAAgB,CAAC9D,SAAjB,CAA2BwE,aAA3B,GAA2C,YAAY;IACnD,OAAO,KAAKC,mBAAZ;EACH,CAFD;;EAGAX,gBAAgB,CAAC9D,SAAjB,CAA2BoE,SAA3B,GAAuC,UAAUL,MAAV,EAAkB;IACrD,IAAI,CAACA,MAAL,EACI,OAAO,KAAKW,OAAL,IAAgB,EAAvB;IACJ,KAAKA,OAAL,GAAenF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKkF,OAAvB,EAAgCX,MAAhC,CAAf;IACA,IAAIY,eAAe,GAAG,KAAKD,OAAL,CAAaC,eAAnC,CAJqD,CAKrD;IACA;;IACA,IAAIA,eAAJ,EAAqB;MACjB,KAAKV,gBAAL,GAAwB3E,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK,KAAK2E,gBAAV,CAAT,EAAsCU,eAAtC,CAAhC;IACH;;IACD,KAAKC,QAAL,GAAgB,KAAKF,OAAL,CAAaG,OAA7B;;IACA,IAAI,CAAC,KAAKD,QAAV,EAAoB;MAChB,KAAKA,QAAL,GAAgB,IAAIlC,aAAJ,GAAoBoC,UAApB,EAAhB;IACH;;IACD,KAAKC,YAAL,GAAoBnE,OAAO,CAACD,OAAR,EAApB;;IACA,IAAI,OAAO,KAAKiE,QAAL,CAAc,MAAd,CAAP,KAAiC,UAArC,EAAiD;MAC7C,KAAKG,YAAL,GAAoB,KAAKH,QAAL,CAAc,MAAd,GAApB;IACH;;IACDnB,wBAAwB,CAAC,wBAAD,EAA2B,IAA3B,EAAiC,8CAAjC,CAAxB;IACA,OAAO,KAAKiB,OAAZ;EACH,CApBD;;EAqBAZ,gBAAgB,CAAC9D,SAAjB,CAA2BgF,GAA3B,GAAiC,YAAY;IACzC5B,MAAM,CAAC6B,KAAP,CAAa,qBAAb;IACA,OAAO,KAAKC,kBAAL,EAAP;EACH,CAHD,CArC8C,CAyC9C;;;EACApB,gBAAgB,CAAC9D,SAAjB,CAA2BmF,+BAA3B,GAA6D,UAAUC,cAAV,EAA0B;IACnF,OAAO,GAAGC,MAAH,CAAU/B,2BAAV,EAAuC+B,MAAvC,CAA8CD,cAA9C,CAAP;EACH,CAFD;;EAGAtB,gBAAgB,CAAC9D,SAAjB,CAA2BkF,kBAA3B,GAAgD,YAAY;IACxD9B,MAAM,CAAC6B,KAAP,CAAa,wBAAb;;IACA,IAAI,CAAC,KAAKjB,mBAAN,IAA6B,CAAC,KAAKA,mBAAL,CAAyBsB,SAAzB,EAAlC,EAAwE;MACpElC,MAAM,CAAC6B,KAAP,CAAa,0BAAb;MACA,KAAKjB,mBAAL,GAA2BrB,mBAAmB,CAAC,KAAK4C,UAAL,EAAD,CAA9C;IACH,CAHD,MAIK;MACDnC,MAAM,CAAC6B,KAAP,CAAa,0BAAb;IACH;;IACD,OAAO,KAAKjB,mBAAZ;EACH,CAVD;;EAWAF,gBAAgB,CAAC9D,SAAjB,CAA2BuF,UAA3B,GAAwC,YAAY;IAChD,OAAOnF,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIoF,IAAJ,EAAUC,EAAV,EAAcvB,IAAd,EAAoBwB,MAApB,EAA4BC,OAA5B,EAAqCC,cAArC,EAAqDC,cAArD,EAAqEC,KAArE;;MACA,OAAOxE,WAAW,CAAC,IAAD,EAAO,UAAUyE,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACtE,KAAX;UACI,KAAK,CAAL;YACI2B,MAAM,CAAC6B,KAAP,CAAa,gDAAb;YACAO,IAAI,GAAG,KAAKQ,YAAZ;;YACA,IAAIR,IAAI,IAAI,CAAC,KAAKS,UAAL,CAAgBT,IAAhB,CAAT,IAAkC,CAAC,KAAKU,UAAL,EAAvC,EAA0D;cACtD9C,MAAM,CAAC6B,KAAP,CAAa,0DAAb;cACA,OAAO,CAAC;cAAE;cAAH,EAAerE,OAAO,CAACD,OAAR,CAAgB6E,IAAhB,CAAf,CAAP;YACH;;YACDpC,MAAM,CAAC6B,KAAP,CAAa,0DAAb;YACAQ,EAAE,GAAG,KAAKvB,IAAV,EAAgBA,IAAI,GAAGuB,EAAE,KAAK,KAAK,CAAZ,GAAgB1C,OAAO,CAACmB,IAAxB,GAA+BuB,EAAtD;;YACA,IAAI,CAACvB,IAAD,IAAS,OAAOA,IAAI,CAACiC,sBAAZ,KAAuC,UAApD,EAAgE;cAC5D;cACA,OAAO,CAAC;cAAE;cAAH,EAAe,KAAKC,uBAAL,EAAf,CAAP;YACH;;YACD,IAAI,EAAE,CAAC,KAAKH,UAAL,CAAgBT,IAAhB,CAAD,IAA0B,KAAKU,UAAL,EAA5B,CAAJ,EAAoD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACpD9C,MAAM,CAAC6B,KAAP,CAAa,6CAAb;YACAc,EAAE,CAACtE,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIsE,EAAE,CAACpE,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc2B,IAAI,CAACmC,mBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIX,MAAM,GAAGK,EAAE,CAACrE,IAAH,EAAT;YACA,OAAO,CAAC;YAAE;YAAH,EAAcwC,IAAI,CAACoC,cAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIX,OAAO,GAAGI,EAAE,CAACrE,IAAH,EAAV;YACAkE,cAAc,GAAGD,OAAO,CAACY,YAAzB;YACAV,cAAc,GAAG,IAAIjF,OAAJ,CAAY,UAAU4F,GAAV,EAAeC,GAAf,EAAoB;cAC7Cf,MAAM,CAACgB,cAAP,CAAsBd,cAAtB,EAAsC,UAAUe,GAAV,EAAehD,IAAf,EAAqB;gBACvD,OAAOgD,GAAG,GAAGF,GAAG,CAACE,GAAD,CAAN,GAAcH,GAAG,CAAC7C,IAAD,CAA3B;cACH,CAFD;YAGH,CAJgB,CAAjB;YAKA,OAAO,CAAC;YAAE;YAAH,EAAckC,cAAd,CAAP;;UACJ,KAAK,CAAL;YACIE,EAAE,CAACrE,IAAH,GADJ,CACe;;;YACX,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIoE,KAAK,GAAGC,EAAE,CAACrE,IAAH,EAAR,CADJ,CAEI;;YACA0B,MAAM,CAAC6B,KAAP,CAAa,4CAAb,EAA2Da,KAA3D;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAe5B,IAAI,CAACiC,sBAAL,EAAf,CAAP;QAxCZ;MA0CH,CA3CiB,CAAlB;IA4CH,CA9Ce,CAAhB;EA+CH,CAhDD;;EAiDArC,gBAAgB,CAAC9D,SAAjB,CAA2B4G,qBAA3B,GAAmD,UAAUC,aAAV,EAAyB;IACxEzD,MAAM,CAAC6B,KAAP,CAAa,+BAAb;IACA,IAAI6B,QAAQ,GAAGD,aAAa,CAACC,QAA7B;IAAA,IAAuCC,IAAI,GAAGF,aAAa,CAACE,IAA5D;IAAA,IAAkEC,KAAK,GAAGH,aAAa,CAACG,KAAxF;IAAA,IAA+FC,WAAW,GAAGJ,aAAa,CAACI,WAA3H;IACA,IAAIC,UAAU,GAAGL,aAAa,CAACK,UAA/B,CAHwE,CAIxE;;IACAA,UAAU,GACN,IAAIC,IAAJ,CAASD,UAAT,EAAqBE,WAArB,OAAuC,IAAvC,GACMF,UAAU,GAAG,IADnB,GAEMA,UAHV;IAIA,IAAIG,IAAI,GAAG,IAAX;IACAjE,MAAM,CAAC6B,KAAP,CAAa,yCAAb;;IACA,IAAIiC,UAAU,GAAG,IAAIC,IAAJ,GAAWG,OAAX,EAAjB,EAAuC;MACnC;MACAlE,MAAM,CAAC6B,KAAP,CAAa,mBAAb;MACA,OAAO,KAAKsC,6BAAL,CAAmC;QACtCT,QAAQ,EAAEA,QAD4B;QAEtCE,KAAK,EAAEA,KAF+B;QAGtCD,IAAI,EAAEA,IAHgC;QAItCE,WAAW,EAAEA,WAJyB;QAKtCC,UAAU,EAAEA;MAL0B,CAAnC,CAAP;IAOH,CAVD,MAWK;MACD;MACA,IAAIG,IAAI,CAACpD,gBAAL,CAAsB6C,QAAtB,KACA,OAAOO,IAAI,CAACpD,gBAAL,CAAsB6C,QAAtB,CAAP,KAA2C,UAD/C,EAC2D;QACvD1D,MAAM,CAAC6B,KAAP,CAAa,sDAAb;QACA,OAAO,KAAKuC,yBAAL,CAA+B;UAClCC,cAAc,EAAEJ,IAAI,CAACpD,gBAAL,CAAsB6C,QAAtB,CADkB;UAElCA,QAAQ,EAAEA,QAFwB;UAGlCC,IAAI,EAAEA;QAH4B,CAA/B,CAAP;MAKH,CARD,MASK;QACD3D,MAAM,CAAC6B,KAAP,CAAa,kCAAb,EAAiD6B,QAAjD;QACA,KAAKY,KAAL;QACA,OAAO9G,OAAO,CAACC,MAAR,CAAe,iCAAf,CAAP;MACH;IACJ;EACJ,CAvCD;;EAwCAiD,gBAAgB,CAAC9D,SAAjB,CAA2BwH,yBAA3B,GAAuD,UAAU/B,EAAV,EAAc;IACjE,IAAIkC,KAAK,GAAG,IAAZ;;IACA,IAAIF,cAAc,GAAGhC,EAAE,CAACgC,cAAxB;IAAA,IAAwCX,QAAQ,GAAGrB,EAAE,CAACqB,QAAtD;IAAA,IAAgEC,IAAI,GAAGtB,EAAE,CAACsB,IAA1E;IACA,IAAIa,YAAY,GAAG,KAAK,IAAxB,CAHiE,CAIjE;IACA;;IACA,OAAO9E,wBAAwB,CAAC2E,cAAD,EAAiB,EAAjB,EAAqBG,YAArB,CAAxB,CACFvG,IADE,CACG,UAAUsC,IAAV,EAAgB;MACtBP,MAAM,CAAC6B,KAAP,CAAa,qCAAb,EAAoDtB,IAApD;MACA,OAAOgE,KAAK,CAACJ,6BAAN,CAAoC;QACvCT,QAAQ,EAAEA,QAD6B;QAEvCE,KAAK,EAAErD,IAAI,CAACqD,KAF2B;QAGvCD,IAAI,EAAEA,IAHiC;QAIvCE,WAAW,EAAEtD,IAAI,CAACsD,WAJqB;QAKvCC,UAAU,EAAEvD,IAAI,CAACuD;MALsB,CAApC,CAAP;IAOH,CAVM,EAWFW,KAXE,CAWI,UAAU5G,CAAV,EAAa;MACpB,IAAI6G,cAAc,GAAG,OAAO7G,CAAP,KAAa,QAAb,IACjBA,CAAC,CAAC8G,WAAF,GAAgBC,WAAhB,CAA4B,eAA5B,EAA6C/G,CAAC,CAACnB,MAA/C,MAA2D,CAD/D;;MAEA,IAAI,CAACgI,cAAL,EAAqB;QACjBH,KAAK,CAACD,KAAN;MACH;;MACDtE,MAAM,CAAC6B,KAAP,CAAa,gCAAb,EAA+ChE,CAA/C;MACA,OAAOL,OAAO,CAACC,MAAR,CAAe,yCAAyCI,CAAxD,CAAP;IACH,CAnBM,CAAP;EAoBH,CA1BD;;EA2BA6C,gBAAgB,CAAC9D,SAAjB,CAA2BiG,UAA3B,GAAwC,UAAUgC,WAAV,EAAuB;IAC3D,IAAI,CAACA,WAAL,EAAkB;MACd7E,MAAM,CAAC6B,KAAP,CAAa,qCAAb;MACA,OAAO,IAAP;IACH;;IACD7B,MAAM,CAAC6B,KAAP,CAAa,gCAAb,EAA+CgD,WAA/C;IACA,IAAIC,EAAE,GAAGf,IAAI,CAACgB,GAAL,EAAT;IACA;AACR;AACA;;IACQ,IAAIC,UAAU,GAAGH,WAAW,CAACG,UAA7B;IACA,OAAOA,UAAU,CAACd,OAAX,MAAwBY,EAA/B;EACH,CAZD;;EAaApE,gBAAgB,CAAC9D,SAAjB,CAA2BkG,UAA3B,GAAwC,YAAY;IAChD,OAAO,KAAKmC,uBAAL,IAAgClB,IAAI,CAACgB,GAAL,EAAvC;EACH,CAFD;;EAGArE,gBAAgB,CAAC9D,SAAjB,CAA2BoG,uBAA3B,GAAqD,YAAY;IAC7D,IAAIX,EAAJ;;IACA,OAAOrF,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAI2F,EAAJ,EAAQX,cAAR,EAAwBkD,MAAxB,EAAgCC,eAAhC,EAAiDC,kBAAjD,EAAqEC,UAArE,EAAiFC,EAAjF,EAAqFC,aAArF,EAAoGC,wBAApG,EAA8HX,WAA9H;;MACA,IAAIN,KAAK,GAAG,IAAZ;;MACA,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUuH,EAAV,EAAc;QACnC,QAAQA,EAAE,CAACpH,KAAX;UACI,KAAK,CAAL;YACI2B,MAAM,CAAC6B,KAAP,CAAa,+BAAb;;YACA,IAAI,EAAE,CAACQ,EAAE,GAAG,KAAKf,OAAX,MAAwB,IAAxB,IAAgCe,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACL,cAA9D,CAAJ,EAAmF;cAC/E;cACA;cACA,KAAKV,OAAL,GAAenF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKkF,OAAvB,EAAgCxB,eAAe,CAAC,KAAKwB,OAAL,IAAgB,EAAjB,CAAf,CAAoCR,IAApE,CAAf;YACH;;YACD6B,EAAE,GAAG,KAAKrB,OAAV,EAAmBU,cAAc,GAAGW,EAAE,CAACX,cAAvC,EAAuDkD,MAAM,GAAGvC,EAAE,CAACuC,MAAnE,EAA2EC,eAAe,GAAGxC,EAAE,CAACwC,eAAhG,EAAiHC,kBAAkB,GAAGzC,EAAE,CAACyC,kBAAzI;;YACA,IAAID,eAAJ,EAAqB;cACjB,OAAO,CAAC;cAAE;cAAH,EAAe3H,OAAO,CAACC,MAAR,CAAe,4DAAf,CAAf,CAAP;YACH;;YACD,IAAI,CAACuE,cAAL,EAAqB;cACjBhC,MAAM,CAAC6B,KAAP,CAAa,8DAAb;cACA,OAAO,CAAC;cAAE;cAAH,EAAerE,OAAO,CAACC,MAAR,CAAe,8DAAf,CAAf,CAAP;YACH;;YACD,IAAI,CAAC2H,kBAAD,IAAuB,CAACF,MAA5B,EAAoC;cAChClF,MAAM,CAAC6B,KAAP,CAAa,sDAAb;cACA,OAAO,CAAC;cAAE;cAAH,EAAerE,OAAO,CAACC,MAAR,CAAe,sDAAf,CAAf,CAAP;YACH;;YACD6H,EAAE,GAAG,IAAL;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKI,mBAAL,EAAd,CAAP;;UACJ,KAAK,CAAL;YACIL,UAAU,GAAIC,EAAE,CAACK,WAAH,GAAiBF,EAAE,CAACnH,IAAH,EAA/B;YACAiH,aAAa,GAAG;cAAEL,MAAM,EAAEE,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+DA,kBAA/D,GAAoFF;YAA9F,CAAhB;;YACAM,wBAAwB,GAAG,YAAY;cAAE,OAAOxI,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;gBACzF,IAAIqB,UAAJ,EAAgBC,WAAhB;gBACA,OAAO3H,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;kBACnC,QAAQA,EAAE,CAAChE,KAAX;oBACI,KAAK,CAAL;sBACI,IAAI,CAAC,CAACgH,UAAN,EAAkB,OAAO,CAAC;sBAAE;sBAAH,EAAc,CAAd,CAAP;sBAClB,OAAO,CAAC;sBAAE;sBAAH,EAAczF,KAAK,CAAC2F,aAAD,EAAgB;wBAClCO,cAAc,EAAE9D;sBADkB,CAAhB,CAAnB,CAAP;;oBAGJ,KAAK,CAAL;sBACI4D,UAAU,GAAIvD,EAAE,CAAC/D,IAAH,EAAD,CAAYsH,UAAzB;sBACA,KAAKD,WAAL,GAAmBC,UAAnB;sBACAvD,EAAE,CAAChE,KAAH,GAAW,CAAX;;oBACJ,KAAK,CAAL;sBAAQ,OAAO,CAAC;sBAAE;sBAAH,EAAcwB,yBAAyB,CAAC0F,aAAD,EAAgB;wBAC9DK,UAAU,EAAE,KAAKD;sBAD6C,CAAhB,CAAvC,CAAP;;oBAGR,KAAK,CAAL;sBACIE,WAAW,GAAIxD,EAAE,CAAC/D,IAAH,EAAD,CAAYuH,WAA1B;sBACA,OAAO,CAAC;sBAAE;sBAAH,EAAe;wBACdR,UAAU,EAAE,KAAKM,WADH;wBAEdI,WAAW,EAAEF,WAAW,CAACG,WAFX;wBAGdC,eAAe,EAAEJ,WAAW,CAACK,SAHf;wBAIdC,YAAY,EAAEN,WAAW,CAACO,YAJZ;wBAKdpB,UAAU,EAAEa,WAAW,CAACQ;sBALV,CAAf,CAAP;kBAfR;gBAuBH,CAxBiB,CAAlB;cAyBH,CA3BwD,CAAhB;YA2BpC,CA3BL;;YA4BAxB,WAAW,GAAGW,wBAAwB,GAAGf,KAA3B,CAAiC,UAAUlB,GAAV,EAAe;cAAE,OAAOvG,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;gBAChH,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;kBACnC,MAAMkB,GAAN;gBACH,CAFiB,CAAlB;cAGH,CAJ+E,CAAhB;YAI3D,CAJS,CAAd;YAKA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAK+C,gBAAL,CAAsBzB,WAAtB,EAAmC,OAAnC,EAA4C,KAA5C,EAAmD,IAAnD,EACb5G,IADa,CACR,UAAUmF,GAAV,EAAe;cACrB,OAAOA,GAAP;YACH,CAHiB,EAIbqB,KAJa,CAIP,UAAU5G,CAAV,EAAa;cAAE,OAAOb,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;gBAC1E,IAAIgC,0BAAJ;;gBACA,IAAIhC,KAAK,GAAG,IAAZ;;gBACA,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;kBACnC,QAAQA,EAAE,CAAChE,KAAX;oBACI,KAAK,CAAL;sBACI,IAAI,EAAER,CAAC,CAAC2I,IAAF,KAAW,2BAAX,IACF3I,CAAC,CAAC2C,OAAF,KAAc,aAAayB,MAAb,CAAoBoD,UAApB,EAAgC,cAAhC,CADd,CAAJ,EACoE,OAAO,CAAC;sBAAE;sBAAH,EAAc,CAAd,CAAP;sBACpErF,MAAM,CAAC6B,KAAP,CAAa,kCAAb;sBACA,OAAO,CAAC;sBAAE;sBAAH,EAAc,KAAK4E,sBAAL,EAAd,CAAP;;oBACJ,KAAK,CAAL;sBACIpE,EAAE,CAAC/D,IAAH;;sBACAiI,0BAA0B,GAAG,YAAY;wBAAE,OAAOvJ,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;0BAC3F,IAAIqB,UAAJ,EAAgBC,WAAhB;0BACA,OAAO3H,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;4BACnC,QAAQA,EAAE,CAAChE,KAAX;8BACI,KAAK,CAAL;gCAAQ,OAAO,CAAC;gCAAE;gCAAH,EAAcuB,KAAK,CAAC2F,aAAD,EAAgB;kCAC1CO,cAAc,EAAE9D;gCAD0B,CAAhB,CAAnB,CAAP;;8BAGR,KAAK,CAAL;gCACI4D,UAAU,GAAIvD,EAAE,CAAC/D,IAAH,EAAD,CAAYsH,UAAzB;gCACA,KAAKD,WAAL,GAAmBC,UAAnB;gCACA,OAAO,CAAC;gCAAE;gCAAH,EAAc/F,yBAAyB,CAAC0F,aAAD,EAAgB;kCACtDK,UAAU,EAAEA;gCAD0C,CAAhB,CAAvC,CAAP;;8BAGJ,KAAK,CAAL;gCACIC,WAAW,GAAIxD,EAAE,CAAC/D,IAAH,EAAD,CAAYuH,WAA1B;gCACA,OAAO,CAAC;gCAAE;gCAAH,EAAe;kCACdR,UAAU,EAAEO,UADE;kCAEdG,WAAW,EAAEF,WAAW,CAACG,WAFX;kCAGdC,eAAe,EAAEJ,WAAW,CAACK,SAHf;kCAIdC,YAAY,EAAEN,WAAW,CAACO,YAJZ;kCAKdpB,UAAU,EAAEa,WAAW,CAACQ;gCALV,CAAf,CAAP;4BAZR;0BAoBH,CArBiB,CAAlB;wBAsBH,CAxB0D,CAAhB;sBAwBtC,CAxBL;;sBAyBAxB,WAAW,GAAG0B,0BAA0B,GAAG9B,KAA7B,CAAmC,UAAUlB,GAAV,EAAe;wBAAE,OAAOvG,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;0BAClH,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;4BACnC,MAAMkB,GAAN;0BACH,CAFiB,CAAlB;wBAGH,CAJiF,CAAhB;sBAI7D,CAJS,CAAd;sBAKA,OAAO,CAAC;sBAAE;sBAAH,EAAe,KAAK+C,gBAAL,CAAsBzB,WAAtB,EAAmC,OAAnC,EAA4C,KAA5C,EAAmD,IAAnD,CAAf,CAAP;;oBACJ,KAAK,CAAL;sBAAQ,OAAO,CAAC;sBAAE;sBAAH,EAAehH,CAAf,CAAP;kBAvCZ;gBAyCH,CA1CiB,CAAlB;cA2CH,CA9CyC,CAAhB;YA8CrB,CAlDa,CAAf,CAAP;QA1DR;MA8GH,CA/GiB,CAAlB;IAgHH,CAnHe,CAAhB;EAoHH,CAtHD;;EAuHA6C,gBAAgB,CAAC9D,SAAjB,CAA2BuH,6BAA3B,GAA2D,UAAUuC,MAAV,EAAkB;IACzE,IAAInC,KAAK,GAAG,IAAZ;;IACA,IAAIb,QAAQ,GAAGgD,MAAM,CAAChD,QAAtB;IAAA,IAAgCE,KAAK,GAAG8C,MAAM,CAAC9C,KAA/C;IACA,IAAIC,WAAW,GAAG6C,MAAM,CAAC7C,WAAzB;IACA,IAAI8C,OAAO,GAAG;MACVC,MAAM,EAAE,qBADE;MAEVC,QAAQ,EAAE,oBAFA;MAGVC,MAAM,EAAE,gBAHE;MAIVC,SAAS,EAAE;IAJD,CAAd,CAJyE,CAUzE;;IACA,IAAIC,MAAM,GAAGL,OAAO,CAACjD,QAAD,CAAP,IAAqBA,QAAlC;;IACA,IAAI,CAACsD,MAAL,EAAa;MACT,OAAOxJ,OAAO,CAACC,MAAR,CAAe,uCAAf,CAAP;IACH;;IACD,IAAIwJ,MAAM,GAAG,EAAb;IACAA,MAAM,CAACD,MAAD,CAAN,GAAiBpD,KAAjB;IACA,IAAIvB,EAAE,GAAG,KAAKf,OAAd;IAAA,IAAuBU,cAAc,GAAGK,EAAE,CAACL,cAA3C;IAAA,IAA2DkD,MAAM,GAAG7C,EAAE,CAAC6C,MAAvE;IAAA,IAA+EE,kBAAkB,GAAG/C,EAAE,CAAC+C,kBAAvG;;IACA,IAAI,CAACpD,cAAL,EAAqB;MACjBhC,MAAM,CAAC6B,KAAP,CAAa,6CAAb;MACA,OAAOrE,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;IACH;;IACD,IAAI,CAAC2H,kBAAD,IAAuB,CAACF,MAA5B,EAAoC;MAChClF,MAAM,CAAC6B,KAAP,CAAa,sDAAb;MACA,OAAOrE,OAAO,CAACC,MAAR,CAAe,sDAAf,CAAP;IACH;;IACD,IAAI8H,aAAa,GAAG;MAAEL,MAAM,EAAEE,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+DA,kBAA/D,GAAoFF;IAA9F,CAApB;;IACA,IAAIgC,gCAAgC,GAAG,YAAY;MAAE,OAAOlK,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACrG,IAAIqB,UAAJ,EAAgBC,WAAhB;QACA,OAAO3H,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;UACnC,QAAQA,EAAE,CAAChE,KAAX;YACI,KAAK,CAAL;cACI,IAAI,CAAC,CAACwF,WAAN,EAAmB,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cACnB,OAAO,CAAC;cAAE;cAAH,EAAcjE,KAAK,CAAC2F,aAAD,EAAgB;gBAClCO,cAAc,EAAE9D,cADkB;gBAElCmF,MAAM,EAAEF;cAF0B,CAAhB,CAAnB,CAAP;;YAIJ,KAAK,CAAL;cACIrB,UAAU,GAAIvD,EAAE,CAAC/D,IAAH,EAAD,CAAYsH,UAAzB;cACA/B,WAAW,GAAG+B,UAAd;cACAvD,EAAE,CAAChE,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,EAAcwB,yBAAyB,CAAC0F,aAAD,EAAgB;gBAC9DK,UAAU,EAAE/B,WADkD;gBAE9DsD,MAAM,EAAEF;cAFsD,CAAhB,CAAvC,CAAP;;YAIR,KAAK,CAAL;cACIpB,WAAW,GAAIxD,EAAE,CAAC/D,IAAH,EAAD,CAAYuH,WAA1B;cACA,OAAO,CAAC;cAAE;cAAH,EAAe;gBACdR,UAAU,EAAExB,WADE;gBAEdkC,WAAW,EAAEF,WAAW,CAACG,WAFX;gBAGdC,eAAe,EAAEJ,WAAW,CAACK,SAHf;gBAIdC,YAAY,EAAEN,WAAW,CAACO,YAJZ;gBAKdpB,UAAU,EAAEa,WAAW,CAACQ;cALV,CAAf,CAAP;UAjBR;QAyBH,CA1BiB,CAAlB;MA2BH,CA7BoE,CAAhB;IA6BhD,CA7BL;;IA8BA,IAAIxB,WAAW,GAAGqC,gCAAgC,GAAGzC,KAAnC,CAAyC,UAAUlB,GAAV,EAAe;MAAE,OAAOvG,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QAC5H,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;UACnC,MAAMkB,GAAN;QACH,CAFiB,CAAlB;MAGH,CAJ2F,CAAhB;IAIvE,CAJa,CAAlB;IAKA,OAAO,KAAK+C,gBAAL,CAAsBzB,WAAtB,EAAmC,WAAnC,EAAgD,IAAhD,EAAsD6B,MAAtD,CAAP;EACH,CA/DD;;EAgEAhG,gBAAgB,CAAC9D,SAAjB,CAA2BwK,0BAA3B,GAAwD,UAAU7E,OAAV,EAAmB;IACvE,IAAIgC,KAAK,GAAG,IAAZ;;IACAvE,MAAM,CAAC6B,KAAP,CAAa,8BAAb;IACA,IAAIwF,OAAO,GAAG9E,OAAO,CAAC+E,UAAR,GAAqBC,WAArB,EAAd;IACA,IAAIlF,EAAE,GAAG,KAAKf,OAAd;IAAA,IAAuB4D,MAAM,GAAG7C,EAAE,CAAC6C,MAAnC;IAAA,IAA2CsC,UAAU,GAAGnF,EAAE,CAACmF,UAA3D;IAAA,IAAuExF,cAAc,GAAGK,EAAE,CAACL,cAA3F;IAAA,IAA2GoD,kBAAkB,GAAG/C,EAAE,CAAC+C,kBAAnI;;IACA,IAAI,CAACpD,cAAL,EAAqB;MACjBhC,MAAM,CAAC6B,KAAP,CAAa,6CAAb;MACA,OAAOrE,OAAO,CAACC,MAAR,CAAe,6CAAf,CAAP;IACH;;IACD,IAAI,CAAC2H,kBAAD,IAAuB,CAACF,MAA5B,EAAoC;MAChClF,MAAM,CAAC6B,KAAP,CAAa,sDAAb;MACA,OAAOrE,OAAO,CAACC,MAAR,CAAe,sDAAf,CAAP;IACH;;IACD,IAAIgK,GAAG,GAAG,iBAAiBvC,MAAjB,GAA0B,iBAA1B,GAA8CsC,UAAxD;IACA,IAAIP,MAAM,GAAG,EAAb;IACAA,MAAM,CAACQ,GAAD,CAAN,GAAcJ,OAAd;IACA,IAAI9B,aAAa,GAAG;MAAEL,MAAM,EAAEE,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+DA,kBAA/D,GAAoFF;IAA9F,CAApB;IACA;AACR;AACA;AACA;AACA;;IAEQ,IAAIwC,mBAAmB,GAAG,YAAY;MAAE,OAAO1K,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QACxF,IAAIoD,eAAJ,EAAqBC,8BAArB,EAAqDhC,UAArD,EAAiEvD,EAAjE,EAAqEM,EAArE,EAAyEqD,WAAzE,EAAsFK,UAAtF,EAAkGH,SAAlG,EAA6GE,YAA7G,EAA2HyB,iBAA3H;;QACA,OAAO3J,WAAW,CAAC,IAAD,EAAO,UAAUoH,EAAV,EAAc;UACnC,QAAQA,EAAE,CAACjH,KAAX;YACI,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,EAAc,KAAKqH,mBAAL,EAAd,CAAP;;YACR,KAAK,CAAL;cACIiC,eAAe,GAAGrC,EAAE,CAAChH,IAAH,EAAlB;cACA,IAAI,CAAC,CAACqJ,eAAN,EAAuB,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP;cACvB,OAAO,CAAC;cAAE;cAAH,EAAc/H,KAAK,CAAC2F,aAAD,EAAgB;gBAClCO,cAAc,EAAE9D,cADkB;gBAElCmF,MAAM,EAAEF;cAF0B,CAAhB,CAAnB,CAAP;;YAIJ,KAAK,CAAL;cACIrB,UAAU,GAAIN,EAAE,CAAChH,IAAH,EAAD,CAAYsH,UAAzB;cACAgC,8BAA8B,GAAGhC,UAAjC;cACAN,EAAE,CAACjH,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cAAQ,OAAO,CAAC;cAAE;cAAH,EAAcwB,yBAAyB,CAAC0F,aAAD,EAAgB;gBAC9DK,UAAU,EAAE+B,eAAe,IAAIC,8BAD+B;gBAE9DT,MAAM,EAAEF;cAFsD,CAAhB,CAAvC,CAAP;;YAIR,KAAK,CAAL;cACI5E,EAAE,GAAGiD,EAAE,CAAChH,IAAH,EAAL,EAAgBqE,EAAE,GAAGN,EAAE,CAACwD,WAAxB,EAAqCG,WAAW,GAAGrD,EAAE,CAACqD,WAAtD,EAAmEK,UAAU,GAAG1D,EAAE,CAAC0D,UAAnF,EAA+FH,SAAS,GAAGvD,EAAE,CAACuD,SAA9G,EAAyHE,YAAY,GAAGzD,EAAE,CAACyD,YAA3I,EAAyJyB,iBAAiB,GAAGxF,EAAE,CAACuD,UAAhL;cACA,KAAKD,WAAL,GAAmBkC,iBAAnB;cACA,IAAI,CAACF,eAAL,EAAsB,OAAO,CAAC;cAAE;cAAH,EAAc,CAAd,CAAP,CAH1B,CAII;cACA;;cACA3H,MAAM,CAAC6B,KAAP,CAAa,sBAAsBI,MAAtB,CAA6B0F,eAA7B,EAA8C,6CAA9C,CAAb;;cACA,IAAIA,eAAe,KAAKE,iBAAxB,EAA2C;gBACvC7H,MAAM,CAAC6B,KAAP,CAAa,sBAAsBI,MAAtB,CAA6B0F,eAA7B,EAA8C,kCAA9C,CAAb;cACH,CATL,CAUI;;;cACA,OAAO,CAAC;cAAE;cAAH,EAAc,KAAKlB,sBAAL,EAAd,CAAP;;YACJ,KAAK,CAAL;cACI;cACAnB,EAAE,CAAChH,IAAH;;cACAgH,EAAE,CAACjH,KAAH,GAAW,CAAX;;YACJ,KAAK,CAAL;cACA;cACA,OAAO,CAAC;cAAE;cAAH,EAAe;gBACd0H,WAAW,EAAEC,WADC;gBAEdC,eAAe,EAAEC,SAFH;gBAGdC,YAAY,EAAEC,YAHA;gBAIdpB,UAAU,EAAEqB,UAJE;gBAKdhB,UAAU,EAAEwC;cALE,CAAf,CAAP;UAnCJ;QA2CH,CA5CiB,CAAlB;MA6CH,CA/CuD,CAAhB;IA+CnC,CA/CL;;IAgDA,IAAIhD,WAAW,GAAG6C,mBAAmB,GAAGjD,KAAtB,CAA4B,UAAUlB,GAAV,EAAe;MAAE,OAAOvG,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;QAC/G,OAAOrG,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;UACnC,MAAMkB,GAAN;QACH,CAFiB,CAAlB;MAGH,CAJ8E,CAAhB;IAI1D,CAJa,CAAlB;IAKA,OAAO,KAAK+C,gBAAL,CAAsBzB,WAAtB,EAAmC,UAAnC,EAA+C,IAA/C,EAAqD,IAArD,CAAP;EACH,CA7ED;;EA8EAnE,gBAAgB,CAAC9D,SAAjB,CAA2B0J,gBAA3B,GAA8C,UAAUzB,WAAV,EAAuBiD,MAAvB,EAA+BC,aAA/B,EAA8CC,IAA9C,EAAoD;IAC9F,IAAIzD,KAAK,GAAG,IAAZ;;IACA,IAAIN,IAAI,GAAG,IAAX;IACA,OAAO,IAAIzG,OAAJ,CAAY,UAAU4F,GAAV,EAAeC,GAAf,EAAoB;MACnCwB,WAAW,CACN5G,IADL,CACU,UAAU4G,WAAV,EAAuB;QAAE,OAAO7H,SAAS,CAACuH,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;UACnF,IAAIZ,IAAJ,EAAUD,QAAV,EAAoBE,KAApB,EAA2BE,UAA3B,EAAuCD,WAAvC;UACA,OAAO3F,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;YACnC,QAAQA,EAAE,CAAChE,KAAX;cACI,KAAK,CAAL;gBACI2B,MAAM,CAAC6B,KAAP,CAAa,+BAAb,EAA8CgD,WAA9C;;gBACA,IAAI,KAAKc,WAAL,IAAoB,CAACd,WAAW,CAACQ,UAArC,EAAiD;kBAC7CR,WAAW,CAAC,YAAD,CAAX,GAA4B,KAAKc,WAAjC;gBACH;;gBACD1B,IAAI,CAACrB,YAAL,GAAoBiC,WAApB;gBACAZ,IAAI,CAACrB,YAAL,CAAkBmF,aAAlB,GAAkCA,aAAlC;gBACA9D,IAAI,CAAC5C,mBAAL,GAA2ByG,MAA3B;gBACA7D,IAAI,CAACgB,uBAAL,GAA+B,IAAIlB,IAAJ,GAAWG,OAAX,KAAuBjE,eAAtD;;gBACA,IAAI6H,MAAM,KAAK,WAAf,EAA4B;kBACxBnE,IAAI,GAAGxH,MAAM,CAACC,MAAP,CAAc;oBAAE6L,EAAE,EAAE,KAAKrF,YAAL,CAAkByC;kBAAxB,CAAd,EAAoD2C,IAAI,CAACrE,IAAzD,CAAP;kBACAD,QAAQ,GAAGsE,IAAI,CAACtE,QAAhB,EAA0BE,KAAK,GAAGoE,IAAI,CAACpE,KAAvC,EAA8CE,UAAU,GAAGkE,IAAI,CAAClE,UAAhE,EAA4ED,WAAW,GAAGmE,IAAI,CAACnE,WAA/F;;kBACA,IAAI;oBACA,KAAKrC,QAAL,CAAc0G,OAAd,CAAsB,2BAAtB,EAAmDC,IAAI,CAACC,SAAL,CAAe;sBAC9D1E,QAAQ,EAAEA,QADoD;sBAE9DE,KAAK,EAAEA,KAFuD;sBAG9DD,IAAI,EAAEA,IAHwD;sBAI9DG,UAAU,EAAEA,UAJkD;sBAK9DD,WAAW,EAAEA;oBALiD,CAAf,CAAnD;kBAOH,CARD,CASA,OAAOhG,CAAP,EAAU;oBACNmC,MAAM,CAAC6B,KAAP,CAAa,gDAAb,EAA+DhE,CAA/D;kBACH;gBACJ;;gBACD,IAAI,EAAEiK,MAAM,KAAK,OAAb,CAAJ,EAA2B,OAAO,CAAC;gBAAE;gBAAH,EAAc,CAAd,CAAP;gBAC3B,OAAO,CAAC;gBAAE;gBAAH,EAAc,KAAKO,mBAAL,CAAyBxD,WAAW,CAACQ,UAArC,CAAd,CAAP;;cACJ,KAAK,CAAL;gBACIhD,EAAE,CAAC/D,IAAH;;gBACA+D,EAAE,CAAChE,KAAH,GAAW,CAAX;;cACJ,KAAK,CAAL;gBACI+E,GAAG,CAACa,IAAI,CAACrB,YAAN,CAAH;gBACA,OAAO,CAAC;gBAAE;gBAAH,CAAP;YAjCR;UAmCH,CApCiB,CAAlB;QAqCH,CAvCkD,CAAhB;MAuC9B,CAxCL,EAyCK6B,KAzCL,CAyCW,UAAUlB,GAAV,EAAe;QACtB,IAAIA,GAAJ,EAAS;UACLvD,MAAM,CAAC6B,KAAP,CAAa,4BAAb,EAA2CgD,WAA3C;UACA7E,MAAM,CAAC6B,KAAP,CAAa,2BAAb,EAA0C0B,GAA1C;UACAF,GAAG,CAACE,GAAD,CAAH;UACA;QACH;MACJ,CAhDD;IAiDH,CAlDM,CAAP;EAmDH,CAtDD;;EAuDA7C,gBAAgB,CAAC9D,SAAjB,CAA2B0L,GAA3B,GAAiC,UAAU5B,MAAV,EAAkBoB,MAAlB,EAA0B;IACvD,IAAIA,MAAM,KAAK,SAAf,EAA0B;MACtB,OAAO,KAAKV,0BAAL,CAAgCV,MAAhC,CAAP;IACH,CAFD,MAGK,IAAIoB,MAAM,KAAK,YAAf,EAA6B;MAC9B,OAAO,KAAK3D,6BAAL,CAAmCuC,MAAnC,CAAP;IACH,CAFI,MAGA,IAAIoB,MAAM,KAAK,OAAf,EAAwB;MACzB,OAAO,KAAK9E,uBAAL,EAAP;IACH,CAFI,MAGA;MACDhD,MAAM,CAAC6B,KAAP,CAAa,6CAAb;MACA,OAAOrE,OAAO,CAACC,MAAR,CAAe,gBAAf,CAAP;IACH;EACJ,CAdD;;EAeAiD,gBAAgB,CAAC9D,SAAjB,CAA2B0H,KAA3B,GAAmC,YAAY;IAC3C,OAAOtH,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOkB,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;QACnC,KAAKO,YAAL,GAAoB,IAApB;QACA,KAAKvB,mBAAL,GAA2B,IAA3B;QACArB,MAAM,CAAC6B,KAAP,CAAa,iDAAb;;QACA,KAAKL,QAAL,CAAc+G,UAAd,CAAyB,2BAAzB;;QACA,OAAO,CAAC;QAAE;QAAH,CAAP;MACH,CANiB,CAAlB;IAOH,CARe,CAAhB;EASH,CAVD;EAWA;;;EACA7H,gBAAgB,CAAC9D,SAAjB,CAA2B8I,mBAA3B,GAAiD,YAAY;IACzD,OAAO1I,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIgF,cAAJ,EAAoBwG,GAApB;MACA,OAAOtK,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChE,KAAX;UACI,KAAK,CAAL;YACI2D,cAAc,GAAG,KAAKV,OAAL,CAAaU,cAA9B;YACAK,EAAE,CAAChE,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIgE,EAAE,CAAC9D,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKwC,YAAnB,CAAP;;UACJ,KAAK,CAAL;YACIU,EAAE,CAAC/D,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAe,KAAKkD,QAAL,CAAciH,OAAd,CAAsB,KAAK1G,+BAAL,CAAqCC,cAArC,CAAtB,CAAf,CAAP;;UACJ,KAAK,CAAL;YACIwG,GAAG,GAAGnG,EAAE,CAAC/D,IAAH,EAAN;YACA0B,MAAM,CAAC6B,KAAP,CAAa,2CAAb,EAA0D2G,GAA1D;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAdZ;MAgBH,CAjBiB,CAAlB;IAkBH,CApBe,CAAhB;EAqBH,CAtBD;;EAuBA9H,gBAAgB,CAAC9D,SAAjB,CAA2ByL,mBAA3B,GAAiD,UAAUhD,UAAV,EAAsB;IACnE,OAAOrI,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIgF,cAAJ,EAAoB0G,GAApB;MACA,OAAOxK,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChE,KAAX;UACI,KAAK,CAAL;YACI2D,cAAc,GAAG,KAAKV,OAAL,CAAaU,cAA9B;YACAK,EAAE,CAAChE,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIgE,EAAE,CAAC9D,IAAH,CAAQY,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKwC,YAAnB,CAAP;;UACJ,KAAK,CAAL;YACIU,EAAE,CAAC/D,IAAH;;YACA,KAAKkD,QAAL,CAAc0G,OAAd,CAAsB,KAAKnG,+BAAL,CAAqCC,cAArC,CAAtB,EAA4EqD,UAA5E;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIqD,GAAG,GAAGrG,EAAE,CAAC/D,IAAH,EAAN;YACA0B,MAAM,CAAC6B,KAAP,CAAa,kCAAb,EAAiD6G,GAAjD;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAfZ;MAiBH,CAlBiB,CAAlB;IAmBH,CArBe,CAAhB;EAsBH,CAvBD;;EAwBAhI,gBAAgB,CAAC9D,SAAjB,CAA2B6J,sBAA3B,GAAoD,YAAY;IAC5D,OAAOzJ,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIgF,cAAJ;MACA,OAAO9D,WAAW,CAAC,IAAD,EAAO,UAAUmE,EAAV,EAAc;QACnCL,cAAc,GAAG,KAAKV,OAAL,CAAaU,cAA9B;QACAhC,MAAM,CAAC6B,KAAP,CAAa,YAAYI,MAAZ,CAAmB,KAAKF,+BAAL,CAAqCC,cAArC,CAAnB,EAAyE,eAAzE,CAAb;;QACA,KAAKR,QAAL,CAAc+G,UAAd,CAAyB,KAAKxG,+BAAL,CAAqCC,cAArC,CAAzB;;QACA,OAAO,CAAC;QAAE;QAAH,CAAP;MACH,CALiB,CAAlB;IAMH,CARe,CAAhB;EASH,CAVD;EAWA;AACJ;AACA;AACA;AACA;;;EACItB,gBAAgB,CAAC9D,SAAjB,CAA2B+L,KAA3B,GAAmC,UAAU9D,WAAV,EAAuB;IACtD,OAAO;MACHkB,WAAW,EAAElB,WAAW,CAACkB,WADtB;MAEHI,YAAY,EAAEtB,WAAW,CAACsB,YAFvB;MAGHF,eAAe,EAAEpB,WAAW,CAACoB,eAH1B;MAIHZ,UAAU,EAAER,WAAW,CAACQ,UAJrB;MAKH0C,aAAa,EAAElD,WAAW,CAACkD;IALxB,CAAP;EAOH,CARD;;EASA,OAAOrH,gBAAP;AACH,CA5lBqC,EAAtC;;AA6lBA,SAASA,gBAAT;AACA,OAAO,IAAImF,WAAW,GAAG,IAAInF,gBAAJ,CAAqB,IAArB,CAAlB;AACPf,OAAO,CAACiJ,QAAR,CAAiB/C,WAAjB"},"metadata":{},"sourceType":"module"}