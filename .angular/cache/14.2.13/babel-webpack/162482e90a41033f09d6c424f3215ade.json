{"ast":null,"code":"import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nexport var getDefaultRetryQuota = function (initialRetryTokens) {\n  var MAX_CAPACITY = initialRetryTokens;\n  var availableCapacity = initialRetryTokens;\n\n  var getCapacityAmount = function (error) {\n    return error.name === \"TimeoutError\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n  };\n\n  var hasRetryTokens = function (error) {\n    return getCapacityAmount(error) <= availableCapacity;\n  };\n\n  var retrieveRetryTokens = function (error) {\n    if (!hasRetryTokens(error)) {\n      // retryStrategy should stop retrying, and return last error\n      throw new Error(\"No retry token available\");\n    }\n\n    var capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n\n  var releaseRetryTokens = function (capacityReleaseAmount) {\n    availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : NO_RETRY_INCREMENT;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n\n  return Object.freeze({\n    hasRetryTokens: hasRetryTokens,\n    retrieveRetryTokens: retrieveRetryTokens,\n    releaseRetryTokens: releaseRetryTokens\n  });\n};","map":{"version":3,"names":["NO_RETRY_INCREMENT","RETRY_COST","TIMEOUT_RETRY_COST","getDefaultRetryQuota","initialRetryTokens","MAX_CAPACITY","availableCapacity","getCapacityAmount","error","name","hasRetryTokens","retrieveRetryTokens","Error","capacityAmount","releaseRetryTokens","capacityReleaseAmount","Math","min","Object","freeze"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-firehose/node_modules/@aws-sdk/middleware-retry/dist/es/defaultRetryQuota.js"],"sourcesContent":["import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nexport var getDefaultRetryQuota = function (initialRetryTokens) {\n    var MAX_CAPACITY = initialRetryTokens;\n    var availableCapacity = initialRetryTokens;\n    var getCapacityAmount = function (error) { return (error.name === \"TimeoutError\" ? TIMEOUT_RETRY_COST : RETRY_COST); };\n    var hasRetryTokens = function (error) { return getCapacityAmount(error) <= availableCapacity; };\n    var retrieveRetryTokens = function (error) {\n        if (!hasRetryTokens(error)) {\n            // retryStrategy should stop retrying, and return last error\n            throw new Error(\"No retry token available\");\n        }\n        var capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    var releaseRetryTokens = function (capacityReleaseAmount) {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens: hasRetryTokens,\n        retrieveRetryTokens: retrieveRetryTokens,\n        releaseRetryTokens: releaseRetryTokens,\n    });\n};\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,UAA7B,EAAyCC,kBAAzC,QAAmE,aAAnE;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,kBAAV,EAA8B;EAC5D,IAAIC,YAAY,GAAGD,kBAAnB;EACA,IAAIE,iBAAiB,GAAGF,kBAAxB;;EACA,IAAIG,iBAAiB,GAAG,UAAUC,KAAV,EAAiB;IAAE,OAAQA,KAAK,CAACC,IAAN,KAAe,cAAf,GAAgCP,kBAAhC,GAAqDD,UAA7D;EAA2E,CAAtH;;EACA,IAAIS,cAAc,GAAG,UAAUF,KAAV,EAAiB;IAAE,OAAOD,iBAAiB,CAACC,KAAD,CAAjB,IAA4BF,iBAAnC;EAAuD,CAA/F;;EACA,IAAIK,mBAAmB,GAAG,UAAUH,KAAV,EAAiB;IACvC,IAAI,CAACE,cAAc,CAACF,KAAD,CAAnB,EAA4B;MACxB;MACA,MAAM,IAAII,KAAJ,CAAU,0BAAV,CAAN;IACH;;IACD,IAAIC,cAAc,GAAGN,iBAAiB,CAACC,KAAD,CAAtC;IACAF,iBAAiB,IAAIO,cAArB;IACA,OAAOA,cAAP;EACH,CARD;;EASA,IAAIC,kBAAkB,GAAG,UAAUC,qBAAV,EAAiC;IACtDT,iBAAiB,IAAIS,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqEA,qBAArE,GAA6Ff,kBAAlH;IACAM,iBAAiB,GAAGU,IAAI,CAACC,GAAL,CAASX,iBAAT,EAA4BD,YAA5B,CAApB;EACH,CAHD;;EAIA,OAAOa,MAAM,CAACC,MAAP,CAAc;IACjBT,cAAc,EAAEA,cADC;IAEjBC,mBAAmB,EAAEA,mBAFJ;IAGjBG,kBAAkB,EAAEA;EAHH,CAAd,CAAP;AAKH,CAvBM"},"metadata":{},"sourceType":"module"}