{"ast":null,"code":"import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@aws-sdk/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n  constructor({\n    utf8Encoder,\n    utf8Decoder\n  }) {\n    this.universalMarshaller = new UniversalEventStreamMarshaller({\n      utf8Decoder,\n      utf8Encoder\n    });\n  }\n\n  deserialize(body, deserializer) {\n    const bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n    return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n  }\n\n  serialize(input, serializer) {\n    const serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n    return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n  }\n\n}\n\nconst isReadableStream = body => typeof ReadableStream === \"function\" && body instanceof ReadableStream;","map":{"version":3,"names":["EventStreamMarshaller","UniversalEventStreamMarshaller","iterableToReadableStream","readableStreamtoIterable","constructor","utf8Encoder","utf8Decoder","universalMarshaller","deserialize","body","deserializer","bodyIterable","isReadableStream","serialize","input","serializer","serialziedIterable","ReadableStream"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/eventstream-serde-browser/dist-es/EventStreamMarshaller.js"],"sourcesContent":["import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@aws-sdk/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new UniversalEventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        const serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n        return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n    }\n}\nconst isReadableStream = (body) => typeof ReadableStream === \"function\" && body instanceof ReadableStream;\n"],"mappings":"AAAA,SAASA,qBAAqB,IAAIC,8BAAlC,QAAwE,sCAAxE;AACA,SAASC,wBAAT,EAAmCC,wBAAnC,QAAmE,SAAnE;AACA,OAAO,MAAMH,qBAAN,CAA4B;EAC/BI,WAAW,CAAC;IAAEC,WAAF;IAAeC;EAAf,CAAD,EAA+B;IACtC,KAAKC,mBAAL,GAA2B,IAAIN,8BAAJ,CAAmC;MAC1DK,WAD0D;MAE1DD;IAF0D,CAAnC,CAA3B;EAIH;;EACDG,WAAW,CAACC,IAAD,EAAOC,YAAP,EAAqB;IAC5B,MAAMC,YAAY,GAAGC,gBAAgB,CAACH,IAAD,CAAhB,GAAyBN,wBAAwB,CAACM,IAAD,CAAjD,GAA0DA,IAA/E;IACA,OAAO,KAAKF,mBAAL,CAAyBC,WAAzB,CAAqCG,YAArC,EAAmDD,YAAnD,CAAP;EACH;;EACDG,SAAS,CAACC,KAAD,EAAQC,UAAR,EAAoB;IACzB,MAAMC,kBAAkB,GAAG,KAAKT,mBAAL,CAAyBM,SAAzB,CAAmCC,KAAnC,EAA0CC,UAA1C,CAA3B;IACA,OAAO,OAAOE,cAAP,KAA0B,UAA1B,GAAuCf,wBAAwB,CAACc,kBAAD,CAA/D,GAAsFA,kBAA7F;EACH;;AAd8B;;AAgBnC,MAAMJ,gBAAgB,GAAIH,IAAD,IAAU,OAAOQ,cAAP,KAA0B,UAA1B,IAAwCR,IAAI,YAAYQ,cAA3F"},"metadata":{},"sourceType":"module"}