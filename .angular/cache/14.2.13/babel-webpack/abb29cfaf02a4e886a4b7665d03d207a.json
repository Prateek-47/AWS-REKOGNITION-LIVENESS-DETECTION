{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { I18n as I18nClass } from './I18n';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\nvar logger = new Logger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\n\nvar I18n =\n/** @class */\nfunction () {\n  function I18n() {}\n  /**\n   * @static\n   * @method\n   * Configure I18n part\n   * @param {Object} config - Configuration of the I18n\n   */\n\n\n  I18n.configure = function (config) {\n    logger.debug('configure I18n');\n\n    if (!config) {\n      return _config;\n    }\n\n    _config = Object.assign({}, _config, config.I18n || config);\n    I18n.createInstance();\n    return _config;\n  };\n\n  I18n.getModuleName = function () {\n    return 'I18n';\n  };\n  /**\n   * @static\n   * @method\n   * Create an instance of I18n for the library\n   */\n\n\n  I18n.createInstance = function () {\n    logger.debug('create I18n instance');\n\n    if (_i18n) {\n      return;\n    }\n\n    _i18n = new I18nClass(_config);\n  };\n  /**\n   * @static @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n\n\n  I18n.setLanguage = function (lang) {\n    I18n.checkConfig();\n    return _i18n.setLanguage(lang);\n  };\n  /**\n   * @static @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n\n\n  I18n.get = function (key, defVal) {\n    if (!I18n.checkConfig()) {\n      return typeof defVal === 'undefined' ? key : defVal;\n    }\n\n    return _i18n.get(key, defVal);\n  };\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {String} langurage - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n\n\n  I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabulariesForLanguage(language, vocabularies);\n  };\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n\n\n  I18n.putVocabularies = function (vocabularies) {\n    I18n.checkConfig();\n    return _i18n.putVocabularies(vocabularies);\n  };\n\n  I18n.checkConfig = function () {\n    if (!_i18n) {\n      _i18n = new I18nClass(_config);\n    }\n\n    return true;\n  };\n\n  return I18n;\n}();\n\nexport { I18n };\nAmplify.register(I18n);","map":{"version":3,"names":["I18n","I18nClass","ConsoleLogger","Logger","Amplify","logger","_config","_i18n","configure","config","debug","Object","assign","createInstance","getModuleName","setLanguage","lang","checkConfig","get","key","defVal","putVocabulariesForLanguage","language","vocabularies","putVocabularies","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/I18n/index.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { I18n as I18nClass } from './I18n';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\nvar logger = new Logger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\nvar I18n = /** @class */ (function () {\n    function I18n() {\n    }\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    I18n.configure = function (config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    };\n    I18n.getModuleName = function () {\n        return 'I18n';\n    };\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    I18n.createInstance = function () {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18nClass(_config);\n    };\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.setLanguage = function (lang) {\n        I18n.checkConfig();\n        return _i18n.setLanguage(lang);\n    };\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.get = function (key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        return _i18n.get(key, defVal);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.putVocabularies = function (vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabularies(vocabularies);\n    };\n    I18n.checkConfig = function () {\n        if (!_i18n) {\n            _i18n = new I18nClass(_config);\n        }\n        return true;\n    };\n    return I18n;\n}());\nexport { I18n };\nAmplify.register(I18n);\n"],"mappings":"AAAA;AACA;AACA,SAASA,IAAI,IAAIC,SAAjB,QAAkC,QAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,WAAxC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,IAAIC,MAAM,GAAG,IAAIF,MAAJ,CAAW,MAAX,CAAb;AACA,IAAIG,OAAO,GAAG,IAAd;AACA,IAAIC,KAAK,GAAG,IAAZ;AACA;AACA;AACA;;AACA,IAAIP,IAAI;AAAG;AAAe,YAAY;EAClC,SAASA,IAAT,GAAgB,CACf;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIA,IAAI,CAACQ,SAAL,GAAiB,UAAUC,MAAV,EAAkB;IAC/BJ,MAAM,CAACK,KAAP,CAAa,gBAAb;;IACA,IAAI,CAACD,MAAL,EAAa;MACT,OAAOH,OAAP;IACH;;IACDA,OAAO,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,OAAlB,EAA2BG,MAAM,CAACT,IAAP,IAAeS,MAA1C,CAAV;IACAT,IAAI,CAACa,cAAL;IACA,OAAOP,OAAP;EACH,CARD;;EASAN,IAAI,CAACc,aAAL,GAAqB,YAAY;IAC7B,OAAO,MAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;;;EACId,IAAI,CAACa,cAAL,GAAsB,YAAY;IAC9BR,MAAM,CAACK,KAAP,CAAa,sBAAb;;IACA,IAAIH,KAAJ,EAAW;MACP;IACH;;IACDA,KAAK,GAAG,IAAIN,SAAJ,CAAcK,OAAd,CAAR;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIN,IAAI,CAACe,WAAL,GAAmB,UAAUC,IAAV,EAAgB;IAC/BhB,IAAI,CAACiB,WAAL;IACA,OAAOV,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIhB,IAAI,CAACkB,GAAL,GAAW,UAAUC,GAAV,EAAeC,MAAf,EAAuB;IAC9B,IAAI,CAACpB,IAAI,CAACiB,WAAL,EAAL,EAAyB;MACrB,OAAO,OAAOG,MAAP,KAAkB,WAAlB,GAAgCD,GAAhC,GAAsCC,MAA7C;IACH;;IACD,OAAOb,KAAK,CAACW,GAAN,CAAUC,GAAV,EAAeC,MAAf,CAAP;EACH,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIpB,IAAI,CAACqB,0BAAL,GAAkC,UAAUC,QAAV,EAAoBC,YAApB,EAAkC;IAChEvB,IAAI,CAACiB,WAAL;IACA,OAAOV,KAAK,CAACc,0BAAN,CAAiCC,QAAjC,EAA2CC,YAA3C,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIvB,IAAI,CAACwB,eAAL,GAAuB,UAAUD,YAAV,EAAwB;IAC3CvB,IAAI,CAACiB,WAAL;IACA,OAAOV,KAAK,CAACiB,eAAN,CAAsBD,YAAtB,CAAP;EACH,CAHD;;EAIAvB,IAAI,CAACiB,WAAL,GAAmB,YAAY;IAC3B,IAAI,CAACV,KAAL,EAAY;MACRA,KAAK,GAAG,IAAIN,SAAJ,CAAcK,OAAd,CAAR;IACH;;IACD,OAAO,IAAP;EACH,CALD;;EAMA,OAAON,IAAP;AACH,CAnFyB,EAA1B;;AAoFA,SAASA,IAAT;AACAI,OAAO,CAACqB,QAAR,CAAiBzB,IAAjB"},"metadata":{},"sourceType":"module"}