{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport const loggerMiddleware = () => (next, context) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (args) {\n    try {\n      const response = yield next(args);\n      const {\n        clientName,\n        commandName,\n        logger,\n        dynamoDbDocumentClientOptions = {}\n      } = context;\n      const {\n        overrideInputFilterSensitiveLog,\n        overrideOutputFilterSensitiveLog\n      } = dynamoDbDocumentClientOptions;\n      const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n      const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n      const {\n        $metadata,\n        ...outputWithoutMetadata\n      } = response.output;\n      logger?.info?.({\n        clientName,\n        commandName,\n        input: inputFilterSensitiveLog(args.input),\n        output: outputFilterSensitiveLog(outputWithoutMetadata),\n        metadata: $metadata\n      });\n      return response;\n    } catch (error) {\n      const {\n        clientName,\n        commandName,\n        logger,\n        dynamoDbDocumentClientOptions = {}\n      } = context;\n      const {\n        overrideInputFilterSensitiveLog\n      } = dynamoDbDocumentClientOptions;\n      const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n      logger?.error?.({\n        clientName,\n        commandName,\n        input: inputFilterSensitiveLog(args.input),\n        error,\n        metadata: error.$metadata\n      });\n      throw error;\n    }\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nexport const getLoggerPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["loggerMiddleware","next","context","args","response","clientName","commandName","logger","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","inputFilterSensitiveLog","outputFilterSensitiveLog","$metadata","outputWithoutMetadata","output","info","input","metadata","error","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n"],"mappings":";AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAM,CAACC,IAAD,EAAOC,OAAP;EAAA,6BAAmB,WAAOC,IAAP,EAAgB;IACrE,IAAI;MACA,MAAMC,QAAQ,SAASH,IAAI,CAACE,IAAD,CAA3B;MACA,MAAM;QAAEE,UAAF;QAAcC,WAAd;QAA2BC,MAA3B;QAAmCC,6BAA6B,GAAG;MAAnE,IAA0EN,OAAhF;MACA,MAAM;QAAEO,+BAAF;QAAmCC;MAAnC,IAAwEF,6BAA9E;MACA,MAAMG,uBAAuB,GAAGF,+BAA+B,IAAIP,OAAO,CAACS,uBAA3E;MACA,MAAMC,wBAAwB,GAAGF,gCAAgC,IAAIR,OAAO,CAACU,wBAA7E;MACA,MAAM;QAAEC,SAAF;QAAa,GAAGC;MAAhB,IAA0CV,QAAQ,CAACW,MAAzD;MACAR,MAAM,EAAES,IAAR,GAAe;QACXX,UADW;QAEXC,WAFW;QAGXW,KAAK,EAAEN,uBAAuB,CAACR,IAAI,CAACc,KAAN,CAHnB;QAIXF,MAAM,EAAEH,wBAAwB,CAACE,qBAAD,CAJrB;QAKXI,QAAQ,EAAEL;MALC,CAAf;MAOA,OAAOT,QAAP;IACH,CAfD,CAgBA,OAAOe,KAAP,EAAc;MACV,MAAM;QAAEd,UAAF;QAAcC,WAAd;QAA2BC,MAA3B;QAAmCC,6BAA6B,GAAG;MAAnE,IAA0EN,OAAhF;MACA,MAAM;QAAEO;MAAF,IAAsCD,6BAA5C;MACA,MAAMG,uBAAuB,GAAGF,+BAA+B,IAAIP,OAAO,CAACS,uBAA3E;MACAJ,MAAM,EAAEY,KAAR,GAAgB;QACZd,UADY;QAEZC,WAFY;QAGZW,KAAK,EAAEN,uBAAuB,CAACR,IAAI,CAACc,KAAN,CAHlB;QAIZE,KAJY;QAKZD,QAAQ,EAAEC,KAAK,CAACN;MALJ,CAAhB;MAOA,MAAMM,KAAN;IACH;EACJ,CA9BqC;;EAAA;IAAA;EAAA;AAAA,GAA/B;AA+BP,OAAO,MAAMC,uBAAuB,GAAG;EACnCC,IAAI,EAAE,kBAD6B;EAEnCC,IAAI,EAAE,CAAC,QAAD,CAF6B;EAGnCC,IAAI,EAAE,YAH6B;EAInCC,QAAQ,EAAE;AAJyB,CAAhC;AAMP,OAAO,MAAMC,eAAe,GAAIC,OAAD,KAAc;EACzCC,YAAY,EAAGC,WAAD,IAAiB;IAC3BA,WAAW,CAACC,GAAZ,CAAgB7B,gBAAgB,EAAhC,EAAoCoB,uBAApC;EACH;AAHwC,CAAd,CAAxB"},"metadata":{},"sourceType":"module"}