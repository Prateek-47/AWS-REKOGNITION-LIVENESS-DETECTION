{"ast":null,"code":"import _asyncToGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { DefaultRateLimiter, RETRY_MODES } from \"@aws-sdk/util-retry\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy extends StandardRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    const {\n      rateLimiter,\n      ...superOptions\n    } = options ?? {};\n    super(maxAttemptsProvider, superOptions);\n    this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n    this.mode = RETRY_MODES.ADAPTIVE;\n  }\n\n  retry(next, args) {\n    var _superprop_getRetry = () => super.retry,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _superprop_getRetry().call(_this, next, args, {\n        beforeRequest: function () {\n          var _ref = _asyncToGenerator(function* () {\n            return _this.rateLimiter.getSendToken();\n          });\n\n          return function beforeRequest() {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        afterRequest: response => {\n          _this.rateLimiter.updateClientSendingRate(response);\n        }\n      });\n    })();\n  }\n\n}","map":{"version":3,"names":["DefaultRateLimiter","RETRY_MODES","StandardRetryStrategy","AdaptiveRetryStrategy","constructor","maxAttemptsProvider","options","rateLimiter","superOptions","mode","ADAPTIVE","retry","next","args","beforeRequest","getSendToken","afterRequest","response","updateClientSendingRate"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/middleware-retry/dist-es/AdaptiveRetryStrategy.js"],"sourcesContent":["import { DefaultRateLimiter, RETRY_MODES } from \"@aws-sdk/util-retry\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy extends StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options ?? {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.mode = RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\n"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,WAA7B,QAAgD,qBAAhD;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAO,MAAMC,qBAAN,SAAoCD,qBAApC,CAA0D;EAC7DE,WAAW,CAACC,mBAAD,EAAsBC,OAAtB,EAA+B;IACtC,MAAM;MAAEC,WAAF;MAAe,GAAGC;IAAlB,IAAmCF,OAAO,IAAI,EAApD;IACA,MAAMD,mBAAN,EAA2BG,YAA3B;IACA,KAAKD,WAAL,GAAmBA,WAAW,IAAI,IAAIP,kBAAJ,EAAlC;IACA,KAAKS,IAAL,GAAYR,WAAW,CAACS,QAAxB;EACH;;EACKC,KAAK,CAACC,IAAD,EAAOC,IAAP,EAAa;IAAA;IAAA;;IAAA;MACpB,OAAO,kCAAYD,IAAZ,EAAkBC,IAAlB,EAAwB;QAC3BC,aAAa;UAAA,6BAAE,aAAY;YACvB,OAAO,KAAI,CAACP,WAAL,CAAiBQ,YAAjB,EAAP;UACH,CAFY;;UAAA;YAAA;UAAA;QAAA,GADc;QAI3BC,YAAY,EAAGC,QAAD,IAAc;UACxB,KAAI,CAACV,WAAL,CAAiBW,uBAAjB,CAAyCD,QAAzC;QACH;MAN0B,CAAxB,CAAP;IADoB;EASvB;;AAhB4D"},"metadata":{},"sourceType":"module"}