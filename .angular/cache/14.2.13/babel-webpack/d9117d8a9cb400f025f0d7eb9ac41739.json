{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n * from S3. This implementation requires the `DOMParser` class in the runtime.\n */\nexport var parser = {\n  parse: function (xmlStr) {\n    var domParser = new DOMParser();\n    var xml = domParser.parseFromString(xmlStr, 'text/xml');\n    var parsedObj = parseXmlNode(xml);\n    var rootKey = Object.keys(parsedObj)[0];\n    return parsedObj[rootKey];\n  }\n};\n\nvar parseXmlNode = function (node) {\n  var _a;\n\n  var _b, _c;\n\n  if (isDocumentNode(node)) {\n    return _a = {}, _a[node.documentElement.nodeName] = parseXmlNode(node.documentElement), _a;\n  }\n\n  if (node.nodeType === Node.TEXT_NODE) {\n    return (_b = node.nodeValue) === null || _b === void 0 ? void 0 : _b.trim();\n  }\n\n  if (isElementNode(node)) {\n    // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n    // instead of { Location: { '#text': 'foo' } }.\n    if (isTextOnlyElementNode(node)) {\n      return (_c = node.childNodes[0]) === null || _c === void 0 ? void 0 : _c.nodeValue;\n    }\n\n    var nodeValue = {}; // convert attributes\n\n    for (var i = 0; i < node.attributes.length; i++) {\n      var attr = node.attributes[i];\n\n      if (!isNamespaceAttributeName(attr.nodeName)) {\n        nodeValue[attr.nodeName] = attr.nodeValue;\n      }\n    } // convert child nodes\n\n\n    if (node.children.length > 0) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        var childValue = parseXmlNode(child);\n\n        if (childValue === undefined) {\n          continue;\n        }\n\n        var childName = child.nodeName;\n\n        if (nodeValue[childName] === undefined) {\n          nodeValue[childName] = childValue;\n        } else if (Array.isArray(nodeValue[childName])) {\n          nodeValue[childName].push(childValue);\n        } else {\n          nodeValue[childName] = [nodeValue[childName], childValue];\n        }\n      }\n    } // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n\n\n    return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n  }\n};\n\nvar isElementNode = function (node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\n\nvar isDocumentNode = function (node) {\n  return node.nodeType === Node.DOCUMENT_NODE;\n};\n\nvar isTextOnlyElementNode = function (node) {\n  var _a;\n\n  return hasOnlyNamespaceAttributes(node) && node.children.length === 0 && ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.nodeType) === Node.TEXT_NODE;\n};\n\nvar hasOnlyNamespaceAttributes = function (node) {\n  for (var i = 0; i < node.attributes.length; i++) {\n    var attr = node.attributes[i];\n\n    if (!isNamespaceAttributeName(attr.nodeName)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isNamespaceAttributeName = function (name) {\n  return name === 'xmlns' || name.startsWith('xmlns:');\n};","map":{"version":3,"names":["parser","parse","xmlStr","domParser","DOMParser","xml","parseFromString","parsedObj","parseXmlNode","rootKey","Object","keys","node","_a","_b","_c","isDocumentNode","documentElement","nodeName","nodeType","Node","TEXT_NODE","nodeValue","trim","isElementNode","isTextOnlyElementNode","childNodes","i","attributes","length","attr","isNamespaceAttributeName","children","child","childValue","undefined","childName","Array","isArray","push","ELEMENT_NODE","DOCUMENT_NODE","hasOnlyNamespaceAttributes","firstChild","name","startsWith"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/storage/lib-esm/AwsClients/S3/runtime/xmlParser/dom.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n * from S3. This implementation requires the `DOMParser` class in the runtime.\n */\nexport var parser = {\n    parse: function (xmlStr) {\n        var domParser = new DOMParser();\n        var xml = domParser.parseFromString(xmlStr, 'text/xml');\n        var parsedObj = parseXmlNode(xml);\n        var rootKey = Object.keys(parsedObj)[0];\n        return parsedObj[rootKey];\n    },\n};\nvar parseXmlNode = function (node) {\n    var _a;\n    var _b, _c;\n    if (isDocumentNode(node)) {\n        return _a = {},\n            _a[node.documentElement.nodeName] = parseXmlNode(node.documentElement),\n            _a;\n    }\n    if (node.nodeType === Node.TEXT_NODE) {\n        return (_b = node.nodeValue) === null || _b === void 0 ? void 0 : _b.trim();\n    }\n    if (isElementNode(node)) {\n        // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n        // instead of { Location: { '#text': 'foo' } }.\n        if (isTextOnlyElementNode(node)) {\n            return (_c = node.childNodes[0]) === null || _c === void 0 ? void 0 : _c.nodeValue;\n        }\n        var nodeValue = {};\n        // convert attributes\n        for (var i = 0; i < node.attributes.length; i++) {\n            var attr = node.attributes[i];\n            if (!isNamespaceAttributeName(attr.nodeName)) {\n                nodeValue[attr.nodeName] = attr.nodeValue;\n            }\n        }\n        // convert child nodes\n        if (node.children.length > 0) {\n            for (var i = 0; i < node.children.length; i++) {\n                var child = node.children[i];\n                var childValue = parseXmlNode(child);\n                if (childValue === undefined) {\n                    continue;\n                }\n                var childName = child.nodeName;\n                if (nodeValue[childName] === undefined) {\n                    nodeValue[childName] = childValue;\n                }\n                else if (Array.isArray(nodeValue[childName])) {\n                    nodeValue[childName].push(childValue);\n                }\n                else {\n                    nodeValue[childName] = [nodeValue[childName], childValue];\n                }\n            }\n        }\n        // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n        return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n    }\n};\nvar isElementNode = function (node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nvar isDocumentNode = function (node) {\n    return node.nodeType === Node.DOCUMENT_NODE;\n};\nvar isTextOnlyElementNode = function (node) {\n    var _a;\n    return hasOnlyNamespaceAttributes(node) &&\n        node.children.length === 0 &&\n        ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.nodeType) === Node.TEXT_NODE;\n};\nvar hasOnlyNamespaceAttributes = function (node) {\n    for (var i = 0; i < node.attributes.length; i++) {\n        var attr = node.attributes[i];\n        if (!isNamespaceAttributeName(attr.nodeName)) {\n            return false;\n        }\n    }\n    return true;\n};\nvar isNamespaceAttributeName = function (name) {\n    return name === 'xmlns' || name.startsWith('xmlns:');\n};\n"],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,MAAM,GAAG;EAChBC,KAAK,EAAE,UAAUC,MAAV,EAAkB;IACrB,IAAIC,SAAS,GAAG,IAAIC,SAAJ,EAAhB;IACA,IAAIC,GAAG,GAAGF,SAAS,CAACG,eAAV,CAA0BJ,MAA1B,EAAkC,UAAlC,CAAV;IACA,IAAIK,SAAS,GAAGC,YAAY,CAACH,GAAD,CAA5B;IACA,IAAII,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuB,CAAvB,CAAd;IACA,OAAOA,SAAS,CAACE,OAAD,CAAhB;EACH;AAPe,CAAb;;AASP,IAAID,YAAY,GAAG,UAAUI,IAAV,EAAgB;EAC/B,IAAIC,EAAJ;;EACA,IAAIC,EAAJ,EAAQC,EAAR;;EACA,IAAIC,cAAc,CAACJ,IAAD,CAAlB,EAA0B;IACtB,OAAOC,EAAE,GAAG,EAAL,EACHA,EAAE,CAACD,IAAI,CAACK,eAAL,CAAqBC,QAAtB,CAAF,GAAoCV,YAAY,CAACI,IAAI,CAACK,eAAN,CAD7C,EAEHJ,EAFJ;EAGH;;EACD,IAAID,IAAI,CAACO,QAAL,KAAkBC,IAAI,CAACC,SAA3B,EAAsC;IAClC,OAAO,CAACP,EAAE,GAAGF,IAAI,CAACU,SAAX,MAA0B,IAA1B,IAAkCR,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACS,IAAH,EAAlE;EACH;;EACD,IAAIC,aAAa,CAACZ,IAAD,CAAjB,EAAyB;IACrB;IACA;IACA,IAAIa,qBAAqB,CAACb,IAAD,CAAzB,EAAiC;MAC7B,OAAO,CAACG,EAAE,GAAGH,IAAI,CAACc,UAAL,CAAgB,CAAhB,CAAN,MAA8B,IAA9B,IAAsCX,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACO,SAAzE;IACH;;IACD,IAAIA,SAAS,GAAG,EAAhB,CANqB,CAOrB;;IACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACgB,UAAL,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;MAC7C,IAAIG,IAAI,GAAGlB,IAAI,CAACgB,UAAL,CAAgBD,CAAhB,CAAX;;MACA,IAAI,CAACI,wBAAwB,CAACD,IAAI,CAACZ,QAAN,CAA7B,EAA8C;QAC1CI,SAAS,CAACQ,IAAI,CAACZ,QAAN,CAAT,GAA2BY,IAAI,CAACR,SAAhC;MACH;IACJ,CAboB,CAcrB;;;IACA,IAAIV,IAAI,CAACoB,QAAL,CAAcH,MAAd,GAAuB,CAA3B,EAA8B;MAC1B,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACoB,QAAL,CAAcH,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;QAC3C,IAAIM,KAAK,GAAGrB,IAAI,CAACoB,QAAL,CAAcL,CAAd,CAAZ;QACA,IAAIO,UAAU,GAAG1B,YAAY,CAACyB,KAAD,CAA7B;;QACA,IAAIC,UAAU,KAAKC,SAAnB,EAA8B;UAC1B;QACH;;QACD,IAAIC,SAAS,GAAGH,KAAK,CAACf,QAAtB;;QACA,IAAII,SAAS,CAACc,SAAD,CAAT,KAAyBD,SAA7B,EAAwC;UACpCb,SAAS,CAACc,SAAD,CAAT,GAAuBF,UAAvB;QACH,CAFD,MAGK,IAAIG,KAAK,CAACC,OAAN,CAAchB,SAAS,CAACc,SAAD,CAAvB,CAAJ,EAAyC;UAC1Cd,SAAS,CAACc,SAAD,CAAT,CAAqBG,IAArB,CAA0BL,UAA1B;QACH,CAFI,MAGA;UACDZ,SAAS,CAACc,SAAD,CAAT,GAAuB,CAACd,SAAS,CAACc,SAAD,CAAV,EAAuBF,UAAvB,CAAvB;QACH;MACJ;IACJ,CAjCoB,CAkCrB;;;IACA,OAAOxB,MAAM,CAACC,IAAP,CAAYW,SAAZ,EAAuBO,MAAvB,KAAkC,CAAlC,GAAsC,EAAtC,GAA2CP,SAAlD;EACH;AACJ,CAhDD;;AAiDA,IAAIE,aAAa,GAAG,UAAUZ,IAAV,EAAgB;EAChC,OAAOA,IAAI,CAACO,QAAL,KAAkBC,IAAI,CAACoB,YAA9B;AACH,CAFD;;AAGA,IAAIxB,cAAc,GAAG,UAAUJ,IAAV,EAAgB;EACjC,OAAOA,IAAI,CAACO,QAAL,KAAkBC,IAAI,CAACqB,aAA9B;AACH,CAFD;;AAGA,IAAIhB,qBAAqB,GAAG,UAAUb,IAAV,EAAgB;EACxC,IAAIC,EAAJ;;EACA,OAAO6B,0BAA0B,CAAC9B,IAAD,CAA1B,IACHA,IAAI,CAACoB,QAAL,CAAcH,MAAd,KAAyB,CADtB,IAEH,CAAC,CAAChB,EAAE,GAAGD,IAAI,CAAC+B,UAAX,MAA2B,IAA3B,IAAmC9B,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACM,QAAhE,MAA8EC,IAAI,CAACC,SAFvF;AAGH,CALD;;AAMA,IAAIqB,0BAA0B,GAAG,UAAU9B,IAAV,EAAgB;EAC7C,KAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACgB,UAAL,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;IAC7C,IAAIG,IAAI,GAAGlB,IAAI,CAACgB,UAAL,CAAgBD,CAAhB,CAAX;;IACA,IAAI,CAACI,wBAAwB,CAACD,IAAI,CAACZ,QAAN,CAA7B,EAA8C;MAC1C,OAAO,KAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH,CARD;;AASA,IAAIa,wBAAwB,GAAG,UAAUa,IAAV,EAAgB;EAC3C,OAAOA,IAAI,KAAK,OAAT,IAAoBA,IAAI,CAACC,UAAL,CAAgB,QAAhB,CAA3B;AACH,CAFD"},"metadata":{},"sourceType":"module"}