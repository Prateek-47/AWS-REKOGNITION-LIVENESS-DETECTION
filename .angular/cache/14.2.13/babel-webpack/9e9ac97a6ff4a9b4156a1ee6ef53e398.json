{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2Config } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\n\nfunction spaceToBatchND(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockShape,\n    paddings\n  } = attrs;\n  const prod = util.sizeFromShape(blockShape);\n  const completePaddings = [[0, 0]];\n  completePaddings.push(...paddings);\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  const reshapeInputs = {\n    x: paddedX\n  };\n  const reshapeAttrs = {\n    shape: reshapedPaddedShape\n  };\n  const paddedXReshaped = reshape({\n    inputs: reshapeInputs,\n    backend,\n    attrs: reshapeAttrs\n  });\n  const transposeInputs = {\n    x: paddedXReshaped\n  };\n  const transposeAttrs = {\n    perm: permutedReshapedPaddedPermutation\n  };\n  const paddedXT = transpose({\n    inputs: transposeInputs,\n    backend,\n    attrs: transposeAttrs\n  });\n  const resultReshapeInputs = {\n    x: paddedXT\n  };\n  const resultReshapeAttrs = {\n    shape: flattenShape\n  };\n  const result = reshape({\n    inputs: resultReshapeInputs,\n    backend,\n    attrs: resultReshapeAttrs\n  });\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n  return result;\n}\n\nexport const spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND\n};","map":{"version":3,"names":["backend_util","SpaceToBatchND","util","padV2Config","reshape","transpose","spaceToBatchND","args","inputs","backend","attrs","x","blockShape","paddings","prod","sizeFromShape","completePaddings","push","i","length","shape","paddedX","kernelFunc","constantValue","reshapedPaddedShape","getReshaped","permutedReshapedPaddedPermutation","getPermuted","flattenShape","getReshapedPermuted","reshapeInputs","reshapeAttrs","paddedXReshaped","transposeInputs","transposeAttrs","perm","paddedXT","resultReshapeInputs","resultReshapeAttrs","result","disposeData","dataId","spaceToBatchNDConfig","kernelName","backendName"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SpaceToBatchND.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2Config } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nfunction spaceToBatchND(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    const prod = util.sizeFromShape(blockShape);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const paddedX = padV2Config.kernelFunc({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapeInputs = { x: paddedX };\n    const reshapeAttrs = { shape: reshapedPaddedShape };\n    const paddedXReshaped = reshape({ inputs: reshapeInputs, backend, attrs: reshapeAttrs });\n    const transposeInputs = { x: paddedXReshaped };\n    const transposeAttrs = { perm: permutedReshapedPaddedPermutation };\n    const paddedXT = transpose({ inputs: transposeInputs, backend, attrs: transposeAttrs });\n    const resultReshapeInputs = { x: paddedXT };\n    const resultReshapeAttrs = { shape: flattenShape };\n    const result = reshape({ inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs });\n    backend.disposeData(paddedX.dataId);\n    backend.disposeData(paddedXReshaped.dataId);\n    backend.disposeData(paddedXT.dataId);\n    return result;\n}\nexport const spaceToBatchNDConfig = {\n    kernelName: SpaceToBatchND,\n    backendName: 'wasm',\n    kernelFunc: spaceToBatchND\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,IAAvC,QAAmD,uBAAnD;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;EAC1B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAQH,MAAd;EACA,MAAM;IAAEI,UAAF;IAAcC;EAAd,IAA2BH,KAAjC;EACA,MAAMI,IAAI,GAAGZ,IAAI,CAACa,aAAL,CAAmBH,UAAnB,CAAb;EACA,MAAMI,gBAAgB,GAAG,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAzB;EACAA,gBAAgB,CAACC,IAAjB,CAAsB,GAAGJ,QAAzB;;EACA,KAAK,IAAIK,CAAC,GAAG,IAAIN,UAAU,CAACO,MAA5B,EAAoCD,CAAC,GAAGP,CAAC,CAACS,KAAF,CAAQD,MAAhD,EAAwD,EAAED,CAA1D,EAA6D;IACzDF,gBAAgB,CAACC,IAAjB,CAAsB,CAAC,CAAD,EAAI,CAAJ,CAAtB;EACH;;EACD,MAAMI,OAAO,GAAGlB,WAAW,CAACmB,UAAZ,CAAuB;IACnCd,MAAM,EAAE;MAAEG;IAAF,CAD2B;IAEnCF,OAFmC;IAGnCC,KAAK,EAAE;MAAEG,QAAQ,EAAEG,gBAAZ;MAA8BO,aAAa,EAAE;IAA7C;EAH4B,CAAvB,CAAhB;EAKA,MAAMC,mBAAmB,GAAGxB,YAAY,CAACyB,WAAb,CAAyBJ,OAAO,CAACD,KAAjC,EAAwCR,UAAxC,EAAoDE,IAApD,EAA0D,KAA1D,CAA5B;EACA,MAAMY,iCAAiC,GAAG1B,YAAY,CAAC2B,WAAb,CAAyBH,mBAAmB,CAACL,MAA7C,EAAqDP,UAAU,CAACO,MAAhE,EAAwE,KAAxE,CAA1C;EACA,MAAMS,YAAY,GAAG5B,YAAY,CAAC6B,mBAAb,CAAiCR,OAAO,CAACD,KAAzC,EAAgDR,UAAhD,EAA4DE,IAA5D,EAAkE,KAAlE,CAArB;EACA,MAAMgB,aAAa,GAAG;IAAEnB,CAAC,EAAEU;EAAL,CAAtB;EACA,MAAMU,YAAY,GAAG;IAAEX,KAAK,EAAEI;EAAT,CAArB;EACA,MAAMQ,eAAe,GAAG5B,OAAO,CAAC;IAAEI,MAAM,EAAEsB,aAAV;IAAyBrB,OAAzB;IAAkCC,KAAK,EAAEqB;EAAzC,CAAD,CAA/B;EACA,MAAME,eAAe,GAAG;IAAEtB,CAAC,EAAEqB;EAAL,CAAxB;EACA,MAAME,cAAc,GAAG;IAAEC,IAAI,EAAET;EAAR,CAAvB;EACA,MAAMU,QAAQ,GAAG/B,SAAS,CAAC;IAAEG,MAAM,EAAEyB,eAAV;IAA2BxB,OAA3B;IAAoCC,KAAK,EAAEwB;EAA3C,CAAD,CAA1B;EACA,MAAMG,mBAAmB,GAAG;IAAE1B,CAAC,EAAEyB;EAAL,CAA5B;EACA,MAAME,kBAAkB,GAAG;IAAElB,KAAK,EAAEQ;EAAT,CAA3B;EACA,MAAMW,MAAM,GAAGnC,OAAO,CAAC;IAAEI,MAAM,EAAE6B,mBAAV;IAA+B5B,OAA/B;IAAwCC,KAAK,EAAE4B;EAA/C,CAAD,CAAtB;EACA7B,OAAO,CAAC+B,WAAR,CAAoBnB,OAAO,CAACoB,MAA5B;EACAhC,OAAO,CAAC+B,WAAR,CAAoBR,eAAe,CAACS,MAApC;EACAhC,OAAO,CAAC+B,WAAR,CAAoBJ,QAAQ,CAACK,MAA7B;EACA,OAAOF,MAAP;AACH;;AACD,OAAO,MAAMG,oBAAoB,GAAG;EAChCC,UAAU,EAAE1C,cADoB;EAEhC2C,WAAW,EAAE,MAFmB;EAGhCtB,UAAU,EAAEhB;AAHoB,CAA7B"},"metadata":{},"sourceType":"module"}