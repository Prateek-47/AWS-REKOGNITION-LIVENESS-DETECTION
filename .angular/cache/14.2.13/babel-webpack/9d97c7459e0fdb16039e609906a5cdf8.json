{"ast":null,"code":"import { __awaiter, __generator, __read } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nimport { validateCoordinates } from './util';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\n\nvar GeoClass =\n/** @class */\nfunction () {\n  function GeoClass() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Geo Options', this._config);\n  }\n  /**\n   * get the name of the module category\n   * @returns {string} name of the module category\n   */\n\n\n  GeoClass.prototype.getModuleName = function () {\n    return GeoClass.MODULE;\n  };\n  /**\n   * add plugin into Geo category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  GeoClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Geo') {\n      this._pluggables.push(pluggable);\n\n      var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      throw new Error('No plugin found in Geo for the provider');\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  GeoClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Geo\n   * @param {Object} config - Configuration object for Geo\n   * @return {Object} - Current configuration\n   */\n\n\n  GeoClass.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Geo');\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AmazonLocationServiceProvider());\n    }\n\n    return this._config;\n  };\n  /**\n   * Get the map resources that are currently available through the provider\n   * @param {string} provider\n   * @returns - Array of available map resources\n   */\n\n\n  GeoClass.prototype.getAvailableMaps = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getAvailableMaps();\n  };\n  /**\n   * Get the map resource set as default in amplify config\n   * @param {string} provider\n   * @returns - Map resource set as the default in amplify config\n   */\n\n\n  GeoClass.prototype.getDefaultMap = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n\n    var prov = this.getPluggable(provider);\n    return prov.getDefaultMap();\n  };\n  /**\n   * Search by text input with optional parameters\n   * @param  {string} text - The text string that is to be searched for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n   */\n\n\n  GeoClass.prototype.searchByText = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchByText(text, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_1 = _b.sent();\n            logger.debug(error_1);\n            throw error_1;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Search for search term suggestions based on input text\n   * @param  {string} text - The text string that is to be search for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<SearchForSuggestionsResults>} - Resolves to an array of search suggestion strings\n   */\n\n\n  GeoClass.prototype.searchForSuggestions = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchForSuggestions(text, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_2 = _b.sent();\n            logger.debug(error_2);\n            throw error_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Search for location by unique ID\n   * @param  {string} placeId - Unique ID of the location that is to be searched for\n   * @param  {searchByPlaceIdOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place>} - Resolves to a place with the given placeId\n   */\n\n\n  GeoClass.prototype.searchByPlaceId = function (placeId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var providerName, prov, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            providerName = DEFAULT_PROVIDER;\n            prov = this.getPluggable(providerName);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.searchByPlaceId(placeId, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            error_3 = _a.sent();\n            logger.debug(error_3);\n            throw error_3;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Reverse geocoding search via a coordinate point on the map\n   * @param coordinates - Coordinates array for the search input\n   * @param options - Options parameters for the search\n   * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n   */\n\n\n  GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, _b, lng, lat, error_4;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b = __read(coordinates, 2), lng = _b[0], lat = _b[1];\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n\n            validateCoordinates(lng, lat);\n            return [4\n            /*yield*/\n            , prov.searchByCoordinates(coordinates, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _c.sent()];\n\n          case 3:\n            error_4 = _c.sent();\n            logger.debug(error_4);\n            throw error_4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Create geofences\n   * @param geofences - Single or array of geofence objects to create\n   * @param options? - Optional parameters for creating geofences\n   * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n   *   successes: list of geofences successfully created\n   *   errors: list of geofences that failed to create\n   */\n\n\n  GeoClass.prototype.saveGeofences = function (geofences, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceInputArray, error_5;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n\n            if (!Array.isArray(geofences)) {\n              geofenceInputArray = [geofences];\n            } else {\n              geofenceInputArray = geofences;\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.saveGeofences(geofenceInputArray, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_5 = _b.sent();\n            logger.debug(error_5);\n            throw error_5;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get a single geofence by geofenceId\n   * @param geofenceId: GeofenceId - The string id of the geofence to get\n   * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n   * @returns Promise<Geofence> - Promise that resolves to a geofence object\n   */\n\n\n  GeoClass.prototype.getGeofence = function (geofenceId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_6;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.getGeofence(geofenceId, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_6 = _b.sent();\n            logger.debug(error_6);\n            throw error_6;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * List geofences\n   * @param  options?: ListGeofenceOptions\n   * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n   *   entries: list of geofences - 100 geofences are listed per page\n   *   nextToken: token for next page of geofences\n   */\n\n\n  GeoClass.prototype.listGeofences = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_7;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.listGeofences(options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_7 = _b.sent();\n            logger.debug(error_7);\n            throw error_7;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Delete geofences\n   * @param geofenceIds: string|string[]\n   * @param options?: GeofenceOptions\n   * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n   *  successes: list of geofences successfully deleted\n   *  errors: list of geofences that failed to delete\n   */\n\n\n  GeoClass.prototype.deleteGeofences = function (geofenceIds, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceIdsInputArray, error_8;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n\n            if (!Array.isArray(geofenceIds)) {\n              geofenceIdsInputArray = [geofenceIds];\n            } else {\n              geofenceIdsInputArray = geofenceIds;\n            }\n\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , prov.deleteGeofences(geofenceIdsInputArray, options)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 3:\n            error_8 = _b.sent();\n            logger.debug(error_8);\n            throw error_8;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  GeoClass.MODULE = 'Geo';\n  return GeoClass;\n}();\n\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);","map":{"version":3,"names":["__awaiter","__generator","__read","Amplify","ConsoleLogger","Logger","parseAWSExports","AmazonLocationServiceProvider","validateCoordinates","logger","DEFAULT_PROVIDER","GeoClass","_config","_pluggables","debug","prototype","getModuleName","MODULE","addPluggable","pluggable","getCategory","push","config","configure","getProviderName","getPluggable","providerName","find","undefined","Error","removePluggable","filter","_this","amplifyConfig","Object","assign","Geo","forEach","length","getAvailableMaps","provider","prov","getDefaultMap","searchByText","text","options","_a","error_1","_b","label","trys","sent","searchForSuggestions","error_2","searchByPlaceId","placeId","error_3","searchByCoordinates","coordinates","lng","lat","error_4","_c","saveGeofences","geofences","geofenceInputArray","error_5","Array","isArray","getGeofence","geofenceId","error_6","listGeofences","error_7","deleteGeofences","geofenceIds","geofenceIdsInputArray","error_8","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/geo/lib-esm/Geo.js"],"sourcesContent":["import { __awaiter, __generator, __read } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nimport { validateCoordinates } from './util';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\nvar GeoClass = /** @class */ (function () {\n    function GeoClass() {\n        this._config = {};\n        this._pluggables = [];\n        logger.debug('Geo Options', this._config);\n    }\n    /**\n     * get the name of the module category\n     * @returns {string} name of the module category\n     */\n    GeoClass.prototype.getModuleName = function () {\n        return GeoClass.MODULE;\n    };\n    /**\n     * add plugin into Geo category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    GeoClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Geo') {\n            this._pluggables.push(pluggable);\n            var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            throw new Error('No plugin found in Geo for the provider');\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Geo\n     * @param {Object} config - Configuration object for Geo\n     * @return {Object} - Current configuration\n     */\n    GeoClass.prototype.configure = function (config) {\n        var _this = this;\n        logger.debug('configure Geo');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AmazonLocationServiceProvider());\n        }\n        return this._config;\n    };\n    /**\n     * Get the map resources that are currently available through the provider\n     * @param {string} provider\n     * @returns - Array of available map resources\n     */\n    GeoClass.prototype.getAvailableMaps = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getAvailableMaps();\n    };\n    /**\n     * Get the map resource set as default in amplify config\n     * @param {string} provider\n     * @returns - Map resource set as the default in amplify config\n     */\n    GeoClass.prototype.getDefaultMap = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getDefaultMap();\n    };\n    /**\n     * Search by text input with optional parameters\n     * @param  {string} text - The text string that is to be searched for\n     * @param  {SearchByTextOptions} options? - Optional parameters to the search\n     * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n     */\n    GeoClass.prototype.searchByText = function (text, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByText(text, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_1 = _b.sent();\n                        logger.debug(error_1);\n                        throw error_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Search for search term suggestions based on input text\n     * @param  {string} text - The text string that is to be search for\n     * @param  {SearchByTextOptions} options? - Optional parameters to the search\n     * @returns {Promise<SearchForSuggestionsResults>} - Resolves to an array of search suggestion strings\n     */\n    GeoClass.prototype.searchForSuggestions = function (text, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchForSuggestions(text, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_2 = _b.sent();\n                        logger.debug(error_2);\n                        throw error_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Search for location by unique ID\n     * @param  {string} placeId - Unique ID of the location that is to be searched for\n     * @param  {searchByPlaceIdOptions} options? - Optional parameters to the search\n     * @returns {Promise<Place>} - Resolves to a place with the given placeId\n     */\n    GeoClass.prototype.searchByPlaceId = function (placeId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var providerName, prov, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        providerName = DEFAULT_PROVIDER;\n                        prov = this.getPluggable(providerName);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByPlaceId(placeId, options)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        error_3 = _a.sent();\n                        logger.debug(error_3);\n                        throw error_3;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverse geocoding search via a coordinate point on the map\n     * @param coordinates - Coordinates array for the search input\n     * @param options - Options parameters for the search\n     * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n     */\n    GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, _b, lng, lat, error_4;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b = __read(coordinates, 2), lng = _b[0], lat = _b[1];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        validateCoordinates(lng, lat);\n                        return [4 /*yield*/, prov.searchByCoordinates(coordinates, options)];\n                    case 2: return [2 /*return*/, _c.sent()];\n                    case 3:\n                        error_4 = _c.sent();\n                        logger.debug(error_4);\n                        throw error_4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Create geofences\n     * @param geofences - Single or array of geofence objects to create\n     * @param options? - Optional parameters for creating geofences\n     * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n     *   successes: list of geofences successfully created\n     *   errors: list of geofences that failed to create\n     */\n    GeoClass.prototype.saveGeofences = function (geofences, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, geofenceInputArray, error_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        if (!Array.isArray(geofences)) {\n                            geofenceInputArray = [geofences];\n                        }\n                        else {\n                            geofenceInputArray = geofences;\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.saveGeofences(geofenceInputArray, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_5 = _b.sent();\n                        logger.debug(error_5);\n                        throw error_5;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get a single geofence by geofenceId\n     * @param geofenceId: GeofenceId - The string id of the geofence to get\n     * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n     * @returns Promise<Geofence> - Promise that resolves to a geofence object\n     */\n    GeoClass.prototype.getGeofence = function (geofenceId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_6;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.getGeofence(geofenceId, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_6 = _b.sent();\n                        logger.debug(error_6);\n                        throw error_6;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * List geofences\n     * @param  options?: ListGeofenceOptions\n     * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n     *   entries: list of geofences - 100 geofences are listed per page\n     *   nextToken: token for next page of geofences\n     */\n    GeoClass.prototype.listGeofences = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_7;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.listGeofences(options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_7 = _b.sent();\n                        logger.debug(error_7);\n                        throw error_7;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Delete geofences\n     * @param geofenceIds: string|string[]\n     * @param options?: GeofenceOptions\n     * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n     *  successes: list of geofences successfully deleted\n     *  errors: list of geofences that failed to delete\n     */\n    GeoClass.prototype.deleteGeofences = function (geofenceIds, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, geofenceIdsInputArray, error_8;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        if (!Array.isArray(geofenceIds)) {\n                            geofenceIdsInputArray = [geofenceIds];\n                        }\n                        else {\n                            geofenceIdsInputArray = geofenceIds;\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.deleteGeofences(geofenceIdsInputArray, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_8 = _b.sent();\n                        logger.debug(error_8);\n                        throw error_8;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GeoClass.MODULE = 'Geo';\n    return GeoClass;\n}());\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}