{"ast":null,"code":"import { __rest } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs'; // only select `route` from machine context\n\nconst routeSelector = ({\n  route\n}) => [route];\n\nconst createSelector = selectorKeys => context => {\n  const dependencies = selectorKeys.map(key => context[key]); // route should always be part of deps, so hook knows when route changes.\n\n  return [...dependencies, context.route];\n};\n\nconst getRouteMachineSelector = route => isComponentRouteKey(route) ? createSelector(MACHINE_PROP_KEYS[route]) : routeSelector;\n\nconst isFormEventHandlerKey = key => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\n\nconst convertEventHandlerKey = key => EVENT_HANDLER_KEY_MAP[key];\n\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => Object.assign(Object.assign({}, acc), {\n  [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key]\n}), {});\n\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props))\n  };\n}\n\nfunction resolveConfirmSignInRoute(Component, props) {\n  const _a = getConvertedMachineProps('confirmSignIn', props),\n        {\n    user\n  } = _a,\n        machineProps = __rest(_a, [\"user\"]); // prior to the `confirmSignIn` route, `user.username` is populated\n\n\n  const challengeName = user.challengeName;\n  return {\n    Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), {\n      challengeName\n    })\n  };\n}\n\nfunction resolveConfirmSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props))\n  };\n}\n\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props))\n  };\n}\n\nfunction resolveForceNewPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props))\n  };\n}\n\nfunction resolveResetPasswordRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props))\n  };\n}\n\nfunction resolveSetupTOTPRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props))\n  };\n}\n\nfunction resolveSignInRoute(Component, props) {\n  // default `hideSignUp` to false\n  const hideSignUp = false;\n  return {\n    Component,\n    props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), {\n      hideSignUp\n    })\n  };\n}\n\nfunction resolveSignUpRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props))\n  };\n}\n\nfunction resolveVerifyUserRoute(Component, props) {\n  return {\n    Component,\n    props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props))\n  };\n}\n\nfunction resolveDefault() {\n  return {\n    Component: RenderNothing,\n    props: {}\n  };\n}\n\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };","map":{"version":3,"names":["__rest","RenderNothing","isComponentRouteKey","MACHINE_PROP_KEYS","EVENT_HANDLER_KEY_MAP","routeSelector","route","createSelector","selectorKeys","context","dependencies","map","key","getRouteMachineSelector","isFormEventHandlerKey","includes","convertEventHandlerKey","getConvertedMachineProps","reduce","acc","Object","assign","resolveConfirmResetPasswordRoute","Component","props","resolveConfirmSignInRoute","_a","user","machineProps","challengeName","resolveConfirmSignUpRoute","resolveConfirmVerifyUserRoute","resolveForceNewPasswordRoute","resolveResetPasswordRoute","resolveSetupTOTPRoute","resolveSignInRoute","hideSignUp","resolveSignUpRoute","resolveVerifyUserRoute","resolveDefault"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticatorRoute/utils.mjs"],"sourcesContent":["import { __rest } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport { isComponentRouteKey } from '../utils.mjs';\nimport { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n\n// only select `route` from machine context\nconst routeSelector = ({ route }) => [route];\nconst createSelector = (selectorKeys) => (context) => {\n    const dependencies = selectorKeys.map((key) => context[key]);\n    // route should always be part of deps, so hook knows when route changes.\n    return [...dependencies, context.route];\n};\nconst getRouteMachineSelector = (route) => isComponentRouteKey(route)\n    ? createSelector(MACHINE_PROP_KEYS[route])\n    : routeSelector;\nconst isFormEventHandlerKey = (key) => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\nconst convertEventHandlerKey = (key) => EVENT_HANDLER_KEY_MAP[key];\nconst getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key] })), {});\nfunction resolveConfirmResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmResetPassword', props)),\n    };\n}\nfunction resolveConfirmSignInRoute(Component, props) {\n    const _a = getConvertedMachineProps('confirmSignIn', props), { user } = _a, machineProps = __rest(_a, [\"user\"]);\n    // prior to the `confirmSignIn` route, `user.username` is populated\n    const challengeName = user.challengeName;\n    return { Component, props: Object.assign(Object.assign(Object.assign({}, Component), machineProps), { challengeName }) };\n}\nfunction resolveConfirmSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmSignUp', props)),\n    };\n}\nfunction resolveConfirmVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('confirmVerifyUser', props)),\n    };\n}\nfunction resolveForceNewPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('forceNewPassword', props)),\n    };\n}\nfunction resolveResetPasswordRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('resetPassword', props)),\n    };\n}\nfunction resolveSetupTOTPRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('setupTOTP', props)),\n    };\n}\nfunction resolveSignInRoute(Component, props) {\n    // default `hideSignUp` to false\n    const hideSignUp = false;\n    return {\n        Component,\n        props: Object.assign(Object.assign(Object.assign({}, Component), getConvertedMachineProps('signIn', props)), { hideSignUp }),\n    };\n}\nfunction resolveSignUpRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('signUp', props)),\n    };\n}\nfunction resolveVerifyUserRoute(Component, props) {\n    return {\n        Component,\n        props: Object.assign(Object.assign({}, Component), getConvertedMachineProps('verifyUser', props)),\n    };\n}\nfunction resolveDefault() {\n    return {\n        Component: RenderNothing,\n        props: {},\n    };\n}\n\nexport { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveResetPasswordRoute, resolveSetupTOTPRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}