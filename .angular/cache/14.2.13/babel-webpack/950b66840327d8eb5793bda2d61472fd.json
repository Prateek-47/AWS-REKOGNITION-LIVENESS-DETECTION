{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Amplify, browserOrNode, Category, ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, PubSubAction } from '@aws-amplify/core';\nimport { AWSAppSyncRealTimeProvider } from '../Providers';\nimport Observable from 'zen-observable-ts';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('PubSub');\n\nvar InternalPubSubClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize PubSub with AWS configurations\n   *\n   * @param {PubSubOptions} options - Configuration object for PubSub\n   */\n  function InternalPubSubClass(options) {\n    this._options = options !== null && options !== void 0 ? options : {};\n    logger.debug('PubSub Options', this._options);\n    this._pluggables = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  Object.defineProperty(InternalPubSubClass.prototype, \"awsAppSyncRealTimeProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncRealTimeProvider) {\n        this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n      }\n\n      return this._awsAppSyncRealTimeProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  InternalPubSubClass.prototype.getModuleName = function () {\n    return 'InternalPubSub';\n  };\n  /**\n   * Configure PubSub part with configurations\n   *\n   * @param {PubSubOptions} config - Configuration for PubSub\n   * @return {Object} - The current configuration\n   */\n\n\n  InternalPubSubClass.prototype.configure = function (options) {\n    var _this = this;\n\n    var opt = options ? options.PubSub || options : {};\n    logger.debug('configure PubSub', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n\n    this._pluggables.map(function (pluggable) {\n      return pluggable.configure(_this._options);\n    });\n\n    return this._options;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  InternalPubSubClass.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n          this._pluggables.push(pluggable);\n\n          config = pluggable.configure(this._options);\n          return [2\n          /*return*/\n          , config];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * remove plugin from PubSub category\n   * @param providerName - the name of the plugin\n   */\n\n\n  InternalPubSubClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n  };\n\n  InternalPubSubClass.prototype.getProviderByName = function (providerName) {\n    if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n      return this.awsAppSyncRealTimeProvider;\n    }\n\n    return this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n  };\n\n  InternalPubSubClass.prototype.getProviders = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var providerName = options.provider;\n\n    if (!providerName) {\n      return this._pluggables;\n    }\n\n    var provider = this.getProviderByName(providerName);\n\n    if (!provider) {\n      throw new Error(\"Could not find provider named \" + String(providerName));\n    }\n\n    return [provider];\n  };\n\n  InternalPubSubClass.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.all(this.getProviders(options).map(function (provider) {\n          return provider.publish(topics, msg, options);\n        }))];\n      });\n    });\n  };\n\n  InternalPubSubClass.prototype.subscribe = function (topics, options, customUserAgentDetails) {\n    if (isNode && this._options && this._options.ssr) {\n      throw new Error('Subscriptions are not supported for Server-Side Rendering (SSR)');\n    }\n\n    logger.debug('subscribe options', options);\n    var providers = this.getProviders(options);\n\n    var pubSubUserAgentDetails = __assign({\n      category: Category.PubSub,\n      action: PubSubAction.Subscribe\n    }, customUserAgentDetails);\n\n    return new Observable(function (observer) {\n      var observables = providers.map(function (provider) {\n        return {\n          provider: provider,\n          observable: provider.subscribe(topics, options, pubSubUserAgentDetails)\n        };\n      });\n      var subscriptions = observables.map(function (_a) {\n        var provider = _a.provider,\n            observable = _a.observable;\n        return observable.subscribe({\n          start: console.error,\n          next: function (value) {\n            return observer.next({\n              provider: provider,\n              value: value\n            });\n          },\n          error: function (error) {\n            return observer.error({\n              provider: provider,\n              error: error\n            });\n          }\n        });\n      });\n      return function () {\n        return subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n  };\n\n  return InternalPubSubClass;\n}();\n\nexport { InternalPubSubClass };\nexport var InternalPubSub = new InternalPubSubClass();\nAmplify.register(InternalPubSub);","map":{"version":3,"names":["__assign","__awaiter","__generator","Amplify","browserOrNode","Category","ConsoleLogger","Logger","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","PubSubAction","AWSAppSyncRealTimeProvider","Observable","isNode","logger","InternalPubSubClass","options","_options","debug","_pluggables","subscribe","bind","Object","defineProperty","prototype","get","_awsAppSyncRealTimeProvider","enumerable","configurable","getModuleName","configure","_this","opt","PubSub","assign","map","pluggable","addPluggable","config","_a","getCategory","push","removePluggable","providerName","filter","getProviderName","getProviderByName","awsAppSyncRealTimeProvider","find","getProviders","provider","Error","String","publish","topics","msg","Promise","all","customUserAgentDetails","ssr","providers","pubSubUserAgentDetails","category","action","Subscribe","observer","observables","observable","subscriptions","start","console","error","next","value","forEach","subscription","unsubscribe","InternalPubSub","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/pubsub/lib-esm/internals/InternalPubSub.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, browserOrNode, Category, ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, PubSubAction, } from '@aws-amplify/core';\nimport { AWSAppSyncRealTimeProvider } from '../Providers';\nimport Observable from 'zen-observable-ts';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('PubSub');\nvar InternalPubSubClass = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    function InternalPubSubClass(options) {\n        this._options = options !== null && options !== void 0 ? options : {};\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n    Object.defineProperty(InternalPubSubClass.prototype, \"awsAppSyncRealTimeProvider\", {\n        /**\n         * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncRealTimeProvider) {\n                this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n            }\n            return this._awsAppSyncRealTimeProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InternalPubSubClass.prototype.getModuleName = function () {\n        return 'InternalPubSub';\n    };\n    /**\n     * Configure PubSub part with configurations\n     *\n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    InternalPubSubClass.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options\n            ? options.PubSub || options\n            : {};\n        logger.debug('configure PubSub', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\n        return this._options;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    InternalPubSubClass.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\n                    this._pluggables.push(pluggable);\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * remove plugin from PubSub category\n     * @param providerName - the name of the plugin\n     */\n    InternalPubSubClass.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n    };\n    InternalPubSubClass.prototype.getProviderByName = function (providerName) {\n        if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n            return this.awsAppSyncRealTimeProvider;\n        }\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n    };\n    InternalPubSubClass.prototype.getProviders = function (options) {\n        if (options === void 0) { options = {}; }\n        var providerName = options.provider;\n        if (!providerName) {\n            return this._pluggables;\n        }\n        var provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(\"Could not find provider named \" + String(providerName));\n        }\n        return [provider];\n    };\n    InternalPubSubClass.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n                        return provider.publish(topics, msg, options);\n                    }))];\n            });\n        });\n    };\n    InternalPubSubClass.prototype.subscribe = function (topics, options, customUserAgentDetails) {\n        if (isNode && this._options && this._options.ssr) {\n            throw new Error('Subscriptions are not supported for Server-Side Rendering (SSR)');\n        }\n        logger.debug('subscribe options', options);\n        var providers = this.getProviders(options);\n        var pubSubUserAgentDetails = __assign({ category: Category.PubSub, action: PubSubAction.Subscribe }, customUserAgentDetails);\n        return new Observable(function (observer) {\n            var observables = providers.map(function (provider) { return ({\n                provider: provider,\n                observable: provider.subscribe(topics, options, pubSubUserAgentDetails),\n            }); });\n            var subscriptions = observables.map(function (_a) {\n                var provider = _a.provider, observable = _a.observable;\n                return observable.subscribe({\n                    start: console.error,\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\n                });\n            });\n            return function () {\n                return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\n            };\n        });\n    };\n    return InternalPubSubClass;\n}());\nexport { InternalPubSubClass };\nexport var InternalPubSub = new InternalPubSubClass();\nAmplify.register(InternalPubSub);\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD,C,CACA;AACA;;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,aAAa,IAAIC,MAA5D,EAAoEC,6CAApE,EAAmHC,YAAnH,QAAwI,mBAAxI;AACA,SAASC,0BAAT,QAA2C,cAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,IAAIC,MAAM,GAAGR,aAAa,GAAGQ,MAA7B;AACA,IAAIC,MAAM,GAAG,IAAIN,MAAJ,CAAW,QAAX,CAAb;;AACA,IAAIO,mBAAmB;AAAG;AAAe,YAAY;EACjD;AACJ;AACA;AACA;AACA;EACI,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;IAClC,KAAKC,QAAL,GAAgBD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAAnE;IACAF,MAAM,CAACI,KAAP,CAAa,gBAAb,EAA+B,KAAKD,QAApC;IACA,KAAKE,WAAL,GAAmB,EAAnB;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACH;;EACDC,MAAM,CAACC,cAAP,CAAsBR,mBAAmB,CAACS,SAA1C,EAAqD,4BAArD,EAAmF;IAC/E;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,IAAI,CAAC,KAAKC,2BAAV,EAAuC;QACnC,KAAKA,2BAAL,GAAmC,IAAIf,0BAAJ,CAA+B,KAAKM,QAApC,CAAnC;MACH;;MACD,OAAO,KAAKS,2BAAZ;IACH,CAT8E;IAU/EC,UAAU,EAAE,IAVmE;IAW/EC,YAAY,EAAE;EAXiE,CAAnF;;EAaAb,mBAAmB,CAACS,SAApB,CAA8BK,aAA9B,GAA8C,YAAY;IACtD,OAAO,gBAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;;;EACId,mBAAmB,CAACS,SAApB,CAA8BM,SAA9B,GAA0C,UAAUd,OAAV,EAAmB;IACzD,IAAIe,KAAK,GAAG,IAAZ;;IACA,IAAIC,GAAG,GAAGhB,OAAO,GACXA,OAAO,CAACiB,MAAR,IAAkBjB,OADP,GAEX,EAFN;IAGAF,MAAM,CAACI,KAAP,CAAa,kBAAb,EAAiC;MAAEc,GAAG,EAAEA;IAAP,CAAjC;IACA,KAAKf,QAAL,GAAgBK,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkB,KAAKjB,QAAvB,EAAiCe,GAAjC,CAAhB;;IACA,KAAKb,WAAL,CAAiBgB,GAAjB,CAAqB,UAAUC,SAAV,EAAqB;MAAE,OAAOA,SAAS,CAACN,SAAV,CAAoBC,KAAK,CAACd,QAA1B,CAAP;IAA6C,CAAzF;;IACA,OAAO,KAAKA,QAAZ;EACH,CATD;EAUA;AACJ;AACA;AACA;;;EACIF,mBAAmB,CAACS,SAApB,CAA8Ba,YAA9B,GAA6C,UAAUD,SAAV,EAAqB;IAC9D,OAAOlC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIoC,MAAJ;MACA,OAAOnC,WAAW,CAAC,IAAD,EAAO,UAAUoC,EAAV,EAAc;QACnC,IAAIH,SAAS,IAAIA,SAAS,CAACI,WAAV,OAA4B,QAA7C,EAAuD;UACnD,KAAKrB,WAAL,CAAiBsB,IAAjB,CAAsBL,SAAtB;;UACAE,MAAM,GAAGF,SAAS,CAACN,SAAV,CAAoB,KAAKb,QAAzB,CAAT;UACA,OAAO,CAAC;UAAE;UAAH,EAAeqB,MAAf,CAAP;QACH;;QACD,OAAO,CAAC;QAAE;QAAH,CAAP;MACH,CAPiB,CAAlB;IAQH,CAVe,CAAhB;EAWH,CAZD;EAaA;AACJ;AACA;AACA;;;EACIvB,mBAAmB,CAACS,SAApB,CAA8BkB,eAA9B,GAAgD,UAAUC,YAAV,EAAwB;IACpE,KAAKxB,WAAL,GAAmB,KAAKA,WAAL,CAAiByB,MAAjB,CAAwB,UAAUR,SAAV,EAAqB;MAAE,OAAOA,SAAS,CAACS,eAAV,OAAgCF,YAAvC;IAAsD,CAArG,CAAnB;EACH,CAFD;;EAGA5B,mBAAmB,CAACS,SAApB,CAA8BsB,iBAA9B,GAAkD,UAAUH,YAAV,EAAwB;IACtE,IAAIA,YAAY,KAAKlC,6CAArB,EAAoE;MAChE,OAAO,KAAKsC,0BAAZ;IACH;;IACD,OAAO,KAAK5B,WAAL,CAAiB6B,IAAjB,CAAsB,UAAUZ,SAAV,EAAqB;MAAE,OAAOA,SAAS,CAACS,eAAV,OAAgCF,YAAvC;IAAsD,CAAnG,CAAP;EACH,CALD;;EAMA5B,mBAAmB,CAACS,SAApB,CAA8ByB,YAA9B,GAA6C,UAAUjC,OAAV,EAAmB;IAC5D,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MAAEA,OAAO,GAAG,EAAV;IAAe;;IACzC,IAAI2B,YAAY,GAAG3B,OAAO,CAACkC,QAA3B;;IACA,IAAI,CAACP,YAAL,EAAmB;MACf,OAAO,KAAKxB,WAAZ;IACH;;IACD,IAAI+B,QAAQ,GAAG,KAAKJ,iBAAL,CAAuBH,YAAvB,CAAf;;IACA,IAAI,CAACO,QAAL,EAAe;MACX,MAAM,IAAIC,KAAJ,CAAU,mCAAmCC,MAAM,CAACT,YAAD,CAAnD,CAAN;IACH;;IACD,OAAO,CAACO,QAAD,CAAP;EACH,CAXD;;EAYAnC,mBAAmB,CAACS,SAApB,CAA8B6B,OAA9B,GAAwC,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBvC,OAAvB,EAAgC;IACpE,OAAOd,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,OAAOC,WAAW,CAAC,IAAD,EAAO,UAAUoC,EAAV,EAAc;QACnC,OAAO,CAAC;QAAE;QAAH,EAAeiB,OAAO,CAACC,GAAR,CAAY,KAAKR,YAAL,CAAkBjC,OAAlB,EAA2BmB,GAA3B,CAA+B,UAAUe,QAAV,EAAoB;UAC7E,OAAOA,QAAQ,CAACG,OAAT,CAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BvC,OAA9B,CAAP;QACH,CAF6B,CAAZ,CAAf,CAAP;MAGH,CAJiB,CAAlB;IAKH,CANe,CAAhB;EAOH,CARD;;EASAD,mBAAmB,CAACS,SAApB,CAA8BJ,SAA9B,GAA0C,UAAUkC,MAAV,EAAkBtC,OAAlB,EAA2B0C,sBAA3B,EAAmD;IACzF,IAAI7C,MAAM,IAAI,KAAKI,QAAf,IAA2B,KAAKA,QAAL,CAAc0C,GAA7C,EAAkD;MAC9C,MAAM,IAAIR,KAAJ,CAAU,iEAAV,CAAN;IACH;;IACDrC,MAAM,CAACI,KAAP,CAAa,mBAAb,EAAkCF,OAAlC;IACA,IAAI4C,SAAS,GAAG,KAAKX,YAAL,CAAkBjC,OAAlB,CAAhB;;IACA,IAAI6C,sBAAsB,GAAG5D,QAAQ,CAAC;MAAE6D,QAAQ,EAAExD,QAAQ,CAAC2B,MAArB;MAA6B8B,MAAM,EAAErD,YAAY,CAACsD;IAAlD,CAAD,EAAgEN,sBAAhE,CAArC;;IACA,OAAO,IAAI9C,UAAJ,CAAe,UAAUqD,QAAV,EAAoB;MACtC,IAAIC,WAAW,GAAGN,SAAS,CAACzB,GAAV,CAAc,UAAUe,QAAV,EAAoB;QAAE,OAAQ;UAC1DA,QAAQ,EAAEA,QADgD;UAE1DiB,UAAU,EAAEjB,QAAQ,CAAC9B,SAAT,CAAmBkC,MAAnB,EAA2BtC,OAA3B,EAAoC6C,sBAApC;QAF8C,CAAR;MAGjD,CAHa,CAAlB;MAIA,IAAIO,aAAa,GAAGF,WAAW,CAAC/B,GAAZ,CAAgB,UAAUI,EAAV,EAAc;QAC9C,IAAIW,QAAQ,GAAGX,EAAE,CAACW,QAAlB;QAAA,IAA4BiB,UAAU,GAAG5B,EAAE,CAAC4B,UAA5C;QACA,OAAOA,UAAU,CAAC/C,SAAX,CAAqB;UACxBiD,KAAK,EAAEC,OAAO,CAACC,KADS;UAExBC,IAAI,EAAE,UAAUC,KAAV,EAAiB;YAAE,OAAOR,QAAQ,CAACO,IAAT,CAAc;cAAEtB,QAAQ,EAAEA,QAAZ;cAAsBuB,KAAK,EAAEA;YAA7B,CAAd,CAAP;UAA6D,CAF9D;UAGxBF,KAAK,EAAE,UAAUA,KAAV,EAAiB;YAAE,OAAON,QAAQ,CAACM,KAAT,CAAe;cAAErB,QAAQ,EAAEA,QAAZ;cAAsBqB,KAAK,EAAEA;YAA7B,CAAf,CAAP;UAA8D;QAHhE,CAArB,CAAP;MAKH,CAPmB,CAApB;MAQA,OAAO,YAAY;QACf,OAAOH,aAAa,CAACM,OAAd,CAAsB,UAAUC,YAAV,EAAwB;UAAE,OAAOA,YAAY,CAACC,WAAb,EAAP;QAAoC,CAApF,CAAP;MACH,CAFD;IAGH,CAhBM,CAAP;EAiBH,CAxBD;;EAyBA,OAAO7D,mBAAP;AACH,CAzHwC,EAAzC;;AA0HA,SAASA,mBAAT;AACA,OAAO,IAAI8D,cAAc,GAAG,IAAI9D,mBAAJ,EAArB;AACPX,OAAO,CAAC0E,QAAR,CAAiBD,cAAjB"},"metadata":{},"sourceType":"module"}