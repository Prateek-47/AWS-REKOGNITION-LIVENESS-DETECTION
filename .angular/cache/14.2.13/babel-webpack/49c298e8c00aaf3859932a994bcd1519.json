{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scatter_util, ScatterNd, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmScatterNd;\n\nfunction setup(backend) {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null\n  /*void*/\n  , ['number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number' // outId\n  ]);\n}\n\nfunction scatterNd(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    indices,\n    updates\n  } = inputs;\n  const {\n    shape\n  } = attrs;\n  const out = backend.makeOutput(shape, updates.dtype);\n\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {\n    sliceRank,\n    numUpdates,\n    sliceSize,\n    strides,\n    outputSize\n  } = scatter_util.calculateShapes(updates, indices, shape);\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n  return out;\n}\n\nexport const scatterNdConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd\n};","map":{"version":3,"names":["scatter_util","ScatterNd","util","CppDType","wasmScatterNd","setup","backend","wasm","cwrap","scatterNd","args","inputs","attrs","indices","updates","shape","out","makeOutput","dtype","sizeFromShape","sliceRank","numUpdates","sliceSize","strides","outputSize","calculateShapes","indicesData","dataIdMap","get","dataId","indicesId","id","updatesData","updatesId","stridesBytes","Uint8Array","Int32Array","buffer","outId","scatterNdConfig","kernelName","backendName","setupFunc","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ScatterNd.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scatter_util, ScatterNd, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmScatterNd;\nfunction setup(backend) {\n    wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction scatterNd(args) {\n    const { backend, inputs, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const out = backend.makeOutput(shape, updates.dtype);\n    if (util.sizeFromShape(shape) === 0) {\n        return out;\n    }\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = scatter_util.calculateShapes(updates, indices, shape);\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const updatesData = backend.dataIdMap.get(updates.dataId);\n    const updatesId = updatesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmScatterNd(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n    return out;\n}\nexport const scatterNdConfig = {\n    kernelName: ScatterNd,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: scatterNd\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,IAAlC,QAA8C,uBAA9C;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,IAAIC,aAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,aAAa,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBP,SAAnB,EAA8B;EAAK;EAAnC,EAA6C,CACzD,QADyD,EAEzD,QAFyD,EAGzD,QAHyD,EAIzD,QAJyD,EAKzD,QALyD,EAMzD,QANyD,EAOzD,OAPyD,EAQzD,QARyD,EASzD,QATyD,CAShD;EATgD,CAA7C,CAAhB;AAWH;;AACD,SAASQ,SAAT,CAAmBC,IAAnB,EAAyB;EACrB,MAAM;IAAEJ,OAAF;IAAWK,MAAX;IAAmBC;EAAnB,IAA6BF,IAAnC;EACA,MAAM;IAAEG,OAAF;IAAWC;EAAX,IAAuBH,MAA7B;EACA,MAAM;IAAEI;EAAF,IAAYH,KAAlB;EACA,MAAMI,GAAG,GAAGV,OAAO,CAACW,UAAR,CAAmBF,KAAnB,EAA0BD,OAAO,CAACI,KAAlC,CAAZ;;EACA,IAAIhB,IAAI,CAACiB,aAAL,CAAmBJ,KAAnB,MAA8B,CAAlC,EAAqC;IACjC,OAAOC,GAAP;EACH;;EACD,MAAM;IAAEI,SAAF;IAAaC,UAAb;IAAyBC,SAAzB;IAAoCC,OAApC;IAA6CC;EAA7C,IAA4DxB,YAAY,CAACyB,eAAb,CAA6BX,OAA7B,EAAsCD,OAAtC,EAA+CE,KAA/C,CAAlE;EACA,MAAMW,WAAW,GAAGpB,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBf,OAAO,CAACgB,MAA9B,CAApB;EACA,MAAMC,SAAS,GAAGJ,WAAW,CAACK,EAA9B;EACA,MAAMC,WAAW,GAAG1B,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBd,OAAO,CAACe,MAA9B,CAApB;EACA,MAAMI,SAAS,GAAGD,WAAW,CAACD,EAA9B;EACA,MAAMG,YAAY,GAAG,IAAIC,UAAJ,CAAe,IAAIC,UAAJ,CAAeb,OAAf,EAAwBc,MAAvC,CAArB;EACA,MAAMC,KAAK,GAAGhC,OAAO,CAACqB,SAAR,CAAkBC,GAAlB,CAAsBZ,GAAG,CAACa,MAA1B,EAAkCE,EAAhD;EACA3B,aAAa,CAAC0B,SAAD,EAAYG,SAAZ,EAAuB9B,QAAQ,CAACW,OAAO,CAACI,KAAT,CAA/B,EAAgDE,SAAhD,EAA2DC,UAA3D,EAAuEC,SAAvE,EAAkFY,YAAlF,EAAgGV,UAAhG,EAA4Gc,KAA5G,CAAb;EACA,OAAOtB,GAAP;AACH;;AACD,OAAO,MAAMuB,eAAe,GAAG;EAC3BC,UAAU,EAAEvC,SADe;EAE3BwC,WAAW,EAAE,MAFc;EAG3BC,SAAS,EAAErC,KAHgB;EAI3BsC,UAAU,EAAElC;AAJe,CAAxB"},"metadata":{},"sourceType":"module"}