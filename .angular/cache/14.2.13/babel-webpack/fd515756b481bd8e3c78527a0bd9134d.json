{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context) => {\n  switch (node.op) {\n    case 'FFT':\n      {\n        return [tfOps.fft(getParamValue('x', node, tensorMap, context))];\n      }\n\n    case 'IFFT':\n      {\n        return [tfOps.ifft(getParamValue('x', node, tensorMap, context))];\n      }\n\n    case 'RFFT':\n      {\n        return [tfOps.rfft(getParamValue('x', node, tensorMap, context))];\n      }\n\n    case 'IRFFT':\n      {\n        return [tfOps.irfft(getParamValue('x', node, tensorMap, context))];\n      }\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\nexport const CATEGORY = 'spectral';","map":{"version":3,"names":["tfOps","getParamValue","executeOp","node","tensorMap","context","op","fft","ifft","rfft","irfft","TypeError","CATEGORY"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'FFT': {\n            return [tfOps.fft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IFFT': {\n            return [tfOps.ifft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'RFFT': {\n            return [tfOps.rfft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IRFFT': {\n            return [tfOps.irfft(getParamValue('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'spectral';\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,kDAAvB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,KAA8B;EACnD,QAAQF,IAAI,CAACG,EAAb;IACI,KAAK,KAAL;MAAY;QACR,OAAO,CAACN,KAAK,CAACO,GAAN,CAAUN,aAAa,CAAC,GAAD,EAAME,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB,CAAvB,CAAD,CAAP;MACH;;IACD,KAAK,MAAL;MAAa;QACT,OAAO,CAACL,KAAK,CAACQ,IAAN,CAAWP,aAAa,CAAC,GAAD,EAAME,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB,CAAxB,CAAD,CAAP;MACH;;IACD,KAAK,MAAL;MAAa;QACT,OAAO,CAACL,KAAK,CAACS,IAAN,CAAWR,aAAa,CAAC,GAAD,EAAME,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB,CAAxB,CAAD,CAAP;MACH;;IACD,KAAK,OAAL;MAAc;QACV,OAAO,CAACL,KAAK,CAACU,KAAN,CAAYT,aAAa,CAAC,GAAD,EAAME,IAAN,EAAYC,SAAZ,EAAuBC,OAAvB,CAAzB,CAAD,CAAP;MACH;;IACD;MACI,MAAMM,SAAS,CAAE,aAAYR,IAAI,CAACG,EAAG,qBAAtB,CAAf;EAdR;AAgBH,CAjBM;AAkBP,OAAO,MAAMM,QAAQ,GAAG,UAAjB"},"metadata":{},"sourceType":"module"}