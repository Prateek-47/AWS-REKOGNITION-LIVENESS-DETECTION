{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5\n};\nexport var LOG_TYPE;\n\n(function (LOG_TYPE) {\n  LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n  LOG_TYPE[\"ERROR\"] = \"ERROR\";\n  LOG_TYPE[\"INFO\"] = \"INFO\";\n  LOG_TYPE[\"WARN\"] = \"WARN\";\n  LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\n\n\nexport var ConsoleLogger =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  function ConsoleLogger(name, level) {\n    if (level === void 0) {\n      level = LOG_TYPE.WARN;\n    }\n\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n\n  ConsoleLogger.prototype._padding = function (n) {\n    return n < 10 ? '0' + n : '' + n;\n  };\n\n  ConsoleLogger.prototype._ts = function () {\n    var dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  };\n\n  ConsoleLogger.prototype.configure = function (config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  };\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LOG_TYPE|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype._log = function (type) {\n    var e_1, _a;\n\n    var msg = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      msg[_i - 1] = arguments[_i];\n    }\n\n    var logger_level_name = this.level;\n\n    if (ConsoleLogger.LOG_LEVEL) {\n      logger_level_name = ConsoleLogger.LOG_LEVEL;\n    }\n\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      logger_level_name = window.LOG_LEVEL;\n    }\n\n    var logger_level = LOG_LEVELS[logger_level_name];\n    var type_level = LOG_LEVELS[type];\n\n    if (!(type_level >= logger_level)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n\n    var log = console.log.bind(console);\n\n    if (type === LOG_TYPE.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n\n    if (type === LOG_TYPE.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n\n    var prefix = \"[\".concat(type, \"] \").concat(this._ts(), \" \").concat(this.name);\n    var message = '';\n\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = \"\".concat(prefix, \" - \").concat(msg[0]);\n      log(message);\n    } else if (msg.length === 1) {\n      message = \"\".concat(prefix, \" \").concat(msg[0]);\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      var obj = msg.slice(1);\n\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n\n      message = \"\".concat(prefix, \" - \").concat(msg[0], \" \").concat(obj);\n      log(\"\".concat(prefix, \" - \").concat(msg[0]), obj);\n    } else {\n      message = \"\".concat(prefix, \" \").concat(msg);\n      log(prefix, msg);\n    }\n\n    try {\n      for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var plugin = _c.value;\n        var logEvent = {\n          message: message,\n          timestamp: Date.now()\n        };\n        plugin.pushLogs([logEvent]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.log = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n  };\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.info = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n  };\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.warn = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.WARN], __read(msg), false));\n  };\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.error = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.ERROR], __read(msg), false));\n  };\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.debug = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.DEBUG], __read(msg), false));\n  };\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n\n\n  ConsoleLogger.prototype.verbose = function () {\n    var msg = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n\n    this._log.apply(this, __spreadArray([LOG_TYPE.VERBOSE], __read(msg), false));\n  };\n\n  ConsoleLogger.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n\n      pluggable.configure(this._config);\n    }\n  };\n\n  ConsoleLogger.prototype.listPluggables = function () {\n    return this._pluggables;\n  };\n\n  ConsoleLogger.LOG_LEVEL = null;\n  return ConsoleLogger;\n}();","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__spreadArray","to","from","pack","arguments","l","Array","prototype","slice","concat","AWS_CLOUDWATCH_CATEGORY","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","LOG_TYPE","ConsoleLogger","name","level","_pluggables","_padding","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","configure","config","_config","_log","type","e_1","_a","msg","_i","logger_level_name","LOG_LEVEL","window","logger_level","type_level","log","console","bind","warn","prefix","message","obj","_b","_c","plugin","logEvent","timestamp","now","pushLogs","e_1_1","return","apply","info","debug","verbose","addPluggable","pluggable","getCategoryName","listPluggables"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n};\nexport var LOG_TYPE;\n(function (LOG_TYPE) {\n    LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n    LOG_TYPE[\"ERROR\"] = \"ERROR\";\n    LOG_TYPE[\"INFO\"] = \"INFO\";\n    LOG_TYPE[\"WARN\"] = \"WARN\";\n    LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nexport var ConsoleLogger = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    function ConsoleLogger(name, level) {\n        if (level === void 0) { level = LOG_TYPE.WARN; }\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    ConsoleLogger.prototype._padding = function (n) {\n        return n < 10 ? '0' + n : '' + n;\n    };\n    ConsoleLogger.prototype._ts = function () {\n        var dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    };\n    ConsoleLogger.prototype.configure = function (config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    };\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LOG_TYPE|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype._log = function (type) {\n        var e_1, _a;\n        var msg = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            msg[_i - 1] = arguments[_i];\n        }\n        var logger_level_name = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            logger_level_name = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            logger_level_name = window.LOG_LEVEL;\n        }\n        var logger_level = LOG_LEVELS[logger_level_name];\n        var type_level = LOG_LEVELS[type];\n        if (!(type_level >= logger_level)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        var log = console.log.bind(console);\n        if (type === LOG_TYPE.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LOG_TYPE.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        var prefix = \"[\".concat(type, \"] \").concat(this._ts(), \" \").concat(this.name);\n        var message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = \"\".concat(prefix, \" - \").concat(msg[0]);\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = \"\".concat(prefix, \" \").concat(msg[0]);\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            var obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = \"\".concat(prefix, \" - \").concat(msg[0], \" \").concat(obj);\n            log(\"\".concat(prefix, \" - \").concat(msg[0]), obj);\n        }\n        else {\n            message = \"\".concat(prefix, \" \").concat(msg);\n            log(prefix, msg);\n        }\n        try {\n            for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var plugin = _c.value;\n                var logEvent = { message: message, timestamp: Date.now() };\n                plugin.pushLogs([logEvent]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.log = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n    };\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.info = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n    };\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.warn = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.WARN], __read(msg), false));\n    };\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.error = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.ERROR], __read(msg), false));\n    };\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.debug = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.DEBUG], __read(msg), false));\n    };\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.verbose = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.VERBOSE], __read(msg), false));\n    };\n    ConsoleLogger.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    };\n    ConsoleLogger.prototype.listPluggables = function () {\n        return this._pluggables;\n    };\n    ConsoleLogger.LOG_LEVEL = null;\n    return ConsoleLogger;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}