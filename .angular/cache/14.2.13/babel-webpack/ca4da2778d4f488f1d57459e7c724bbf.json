{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\n\nvar RestAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Rest API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function RestAPIClass(options) {\n    this._api = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  RestAPIClass.prototype.getModuleName = function () {\n    return 'RestAPI';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  RestAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure Rest API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (Array.isArray(opt.endpoints)) {\n      // Check if endpoints has custom_headers and validate if is a function\n      opt.endpoints.forEach(function (endpoint) {\n        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n          endpoint.custom_header = undefined;\n        }\n      });\n    } else if (this._options && Array.isArray(this._options.endpoints)) {\n      opt.endpoints = this._options.endpoints;\n    } else {\n      opt.endpoints = [];\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  RestAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest API instance');\n    this._api = new RestClient(this._options); // Share Amplify instance with client for SSR\n\n    this._api.Credentials = this.Credentials;\n    return true;\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.get = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.get(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.post = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.post(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.put = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.put(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.patch = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.patch(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.del = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.del(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.head = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.head(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  RestAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  RestAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  RestAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  RestAPIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._api.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * Getting endpoint info for API\n   * @param {string} apiName - The name of the api\n   * @param {string} path - The path of the api that is going to accessed\n   * @return {ApiInfo} - The endpoint information for that api-name\n   */\n\n\n  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n    var cloud_logic_array = this._options.endpoints;\n\n    if (!Array.isArray(cloud_logic_array)) {\n      throw new Error(\"API category not configured\");\n    }\n\n    var apiConfig = cloud_logic_array.find(function (api) {\n      return api.name === apiName;\n    });\n\n    if (!apiConfig) {\n      throw new Error(\"API \".concat(apiName, \" does not exist\"));\n    }\n\n    var response = {\n      endpoint: apiConfig.endpoint + path\n    };\n\n    if (typeof apiConfig.region === 'string') {\n      response.region = apiConfig.region;\n    } else if (typeof this._options.region === 'string') {\n      response.region = this._options.region;\n    }\n\n    if (typeof apiConfig.service === 'string') {\n      response.service = apiConfig.service || 'execute-api';\n    } else {\n      response.service = 'execute-api';\n    }\n\n    if (typeof apiConfig.custom_header === 'function') {\n      response.custom_header = apiConfig.custom_header;\n    } else {\n      response.custom_header = undefined;\n    }\n\n    return response;\n  };\n\n  return RestAPIClass;\n}();\n\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","RestClient","Amplify","ConsoleLogger","Logger","Credentials","logger","RestAPIClass","options","_api","_options","debug","prototype","getModuleName","configure","_a","_b","API","otherOptions","opt","custom","endpoints","JSON","parse","Object","assign","region","header","Array","isArray","forEach","endpoint","custom_header","warn","name","undefined","createInstance","get","apiName","path","init","apiInfo","getEndpointInfo","cancellableToken","getCancellableToken","initParams","responsePromise","updateRequestToBeCancellable","err","Promise","reject","message","post","put","patch","del","head","isCancel","error","cancel","request","hasCancelToken","cloud_logic_array","Error","apiConfig","find","api","concat","response","service","RestAPI","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/api-rest/lib-esm/RestAPI.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials, } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */ (function () {\n    /**\n     * Initialize Rest API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function RestAPIClass(options) {\n        this._api = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    RestAPIClass.prototype.getModuleName = function () {\n        return 'RestAPI';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    RestAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure Rest API', { opt: opt });\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                var custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints =\n                    typeof custom === 'string' ? JSON.parse(custom) : custom;\n            }\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (Array.isArray(opt.endpoints)) {\n            // Check if endpoints has custom_headers and validate if is a function\n            opt.endpoints.forEach(function (endpoint) {\n                if (typeof endpoint.custom_header !== 'undefined' &&\n                    typeof endpoint.custom_header !== 'function') {\n                    logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n                    endpoint.custom_header = undefined;\n                }\n            });\n        }\n        else if (this._options && Array.isArray(this._options.endpoints)) {\n            opt.endpoints = this._options.endpoints;\n        }\n        else {\n            opt.endpoints = [];\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    RestAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest API instance');\n        this._api = new RestClient(this._options);\n        // Share Amplify instance with client for SSR\n        this._api.Credentials = this.Credentials;\n        return true;\n    };\n    /**\n     * Make a GET request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.get = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.get(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a POST request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.post = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.post(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PUT request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.put = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.put(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PATCH request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.patch = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.patch(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a DEL request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.del = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.del(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a HEAD request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.head = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.head(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    RestAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    RestAPIClass.prototype.hasCancelToken = function (request) {\n        return this._api.hasCancelToken(request);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestAPIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._api.endpoint(apiName)];\n            });\n        });\n    };\n    /**\n     * Getting endpoint info for API\n     * @param {string} apiName - The name of the api\n     * @param {string} path - The path of the api that is going to accessed\n     * @return {ApiInfo} - The endpoint information for that api-name\n     */\n    RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n        var cloud_logic_array = this._options.endpoints;\n        if (!Array.isArray(cloud_logic_array)) {\n            throw new Error(\"API category not configured\");\n        }\n        var apiConfig = cloud_logic_array.find(function (api) { return api.name === apiName; });\n        if (!apiConfig) {\n            throw new Error(\"API \".concat(apiName, \" does not exist\"));\n        }\n        var response = {\n            endpoint: apiConfig.endpoint + path,\n        };\n        if (typeof apiConfig.region === 'string') {\n            response.region = apiConfig.region;\n        }\n        else if (typeof this._options.region === 'string') {\n            response.region = this._options.region;\n        }\n        if (typeof apiConfig.service === 'string') {\n            response.service = apiConfig.service || 'execute-api';\n        }\n        else {\n            response.service = 'execute-api';\n        }\n        if (typeof apiConfig.custom_header === 'function') {\n            response.custom_header = apiConfig.custom_header;\n        }\n        else {\n            response.custom_header = undefined;\n        }\n        return response;\n    };\n    return RestAPIClass;\n}());\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}