{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __rest } from \"tslib\"; // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { print, parse, GraphQLError } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport { InternalPubSub } from '@aws-amplify/pubsub/internals';\nimport { Auth } from '@aws-amplify/auth';\nimport { Cache } from '@aws-amplify/cache';\nimport { GraphQLAuthError } from '../types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables, authToken) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return {\n    query: query,\n    variables: variables,\n    authToken: authToken\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\n\nvar InternalGraphQLAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function InternalGraphQLAPIClass(options) {\n    this._api = null;\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  InternalGraphQLAPIClass.prototype.getModuleName = function () {\n    return 'InternalGraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  InternalGraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  InternalGraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n\n    if (this._options) {\n      this._api = new RestClient(this._options); // Share instance Credentials with client for SSR\n\n      this._api.Credentials = this.Credentials;\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n\n  InternalGraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n\n            switch (_b) {\n              case 'API_KEY':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'AWS_IAM':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'OPENID_CONNECT':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3\n                /*break*/\n                , 11];\n\n              case 'AWS_LAMBDA':\n                return [3\n                /*break*/\n                , 15];\n            }\n\n            return [3\n            /*break*/\n            , 16];\n\n          case 1:\n            if (!apiKey) {\n              throw new Error(GraphQLAuthError.NO_API_KEY);\n            }\n\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 3:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK) {\n              throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n            }\n\n            return [3\n            /*break*/\n            , 17];\n\n          case 4:\n            _c.trys.push([4, 9,, 10]);\n\n            token = void 0;\n            return [4\n            /*yield*/\n            , Cache.getItem('federatedInfo')];\n\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo) return [3\n            /*break*/\n            , 6];\n            token = federatedInfo.token;\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            return [4\n            /*yield*/\n            , Auth.currentAuthenticatedUser()];\n\n          case 7:\n            currentUser = _c.sent();\n\n            if (currentUser) {\n              token = currentUser.token;\n            }\n\n            _c.label = 8;\n\n          case 8:\n            if (!token) {\n              throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n            }\n\n            headers = {\n              Authorization: token\n            };\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            e_1 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 10:\n            return [3\n            /*break*/\n            , 17];\n\n          case 11:\n            _c.trys.push([11, 13,, 14]);\n\n            return [4\n            /*yield*/\n            , this.Auth.currentSession()];\n\n          case 12:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3\n            /*break*/\n            , 14];\n\n          case 13:\n            e_2 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n\n          case 14:\n            return [3\n            /*break*/\n            , 17];\n\n          case 15:\n            if (!additionalHeaders.Authorization) {\n              throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n            }\n\n            headers = {\n              Authorization: additionalHeaders.Authorization\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            headers = {\n              Authorization: null\n            };\n            return [3\n            /*break*/\n            , 17];\n\n          case 17:\n            return [2\n            /*return*/\n            , headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n\n\n  InternalGraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var definitions = doc.definitions;\n\n    var _a = __read(definitions, 1),\n        operationType = _a[0].operation;\n\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param options - GraphQL Options\n   * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n   * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n   */\n\n\n  InternalGraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders, customUserAgentDetails) {\n    var paramQuery = _a.query,\n        _b = _a.variables,\n        variables = _b === void 0 ? {} : _b,\n        authMode = _a.authMode,\n        authToken = _a.authToken;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n\n    var _c = __read(query.definitions.filter(function (def) {\n      return def.kind === 'OperationDefinition';\n    }), 1),\n        _d = _c[0],\n        operationDef = _d === void 0 ? {} : _d;\n\n    var operationType = operationDef.operation;\n    var headers = additionalHeaders || {}; // if an authorization header is set, have the explicit authToken take precedence\n\n    if (authToken) {\n      headers.Authorization = authToken;\n    }\n\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        this.createInstanceIfNotCreated();\n\n        var cancellableToken = this._api.getCancellableToken();\n\n        var initParams = {\n          cancellableToken: cancellableToken,\n          withCredentials: this._options.withCredentials\n        };\n\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers, initParams, customUserAgentDetails);\n\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n        return responsePromise;\n\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, headers, customUserAgentDetails);\n\n      default:\n        throw new Error(\"invalid operation type: \".concat(operationType));\n    }\n  };\n\n  InternalGraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams, customUserAgentDetails) {\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    if (initParams === void 0) {\n      initParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n\n      var _k;\n\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            this.createInstanceIfNotCreated();\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 1:\n            _e = _l.sent();\n            _l.label = 2;\n\n          case 2:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3\n            /*break*/\n            , 6];\n            if (!customEndpointRegion) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode, additionalHeaders)];\n\n          case 3:\n            _h = _l.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 5;\n\n          case 5:\n            _g = _h;\n            _l.label = 6;\n\n          case 6:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4\n            /*yield*/\n            , graphql_headers({\n              query: query,\n              variables: variables\n            })];\n\n          case 7:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = getAmplifyUserAgent(customUserAgentDetails), _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n\n            _l.label = 8;\n\n          case 8:\n            _l.trys.push([8, 10,, 11]);\n\n            return [4\n            /*yield*/\n            , this._api.post(endpoint, init)];\n\n          case 9:\n            response = _l.sent();\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            err_1 = _l.sent(); // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)]\n            };\n            return [3\n            /*break*/\n            , 11];\n\n          case 11:\n            errors = response.errors;\n\n            if (errors && errors.length) {\n              throw response;\n            }\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  InternalGraphQLAPIClass.prototype.createInstanceIfNotCreated = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  InternalGraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  InternalGraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  InternalGraphQLAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n\n  InternalGraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders, customUserAgentDetails) {\n    var query = _a.query,\n        variables = _a.variables,\n        defaultAuthenticationType = _a.authMode,\n        authToken = _a.authToken;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    var _b = this._options,\n        region = _b.aws_appsync_region,\n        appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n        aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n        apiKey = _b.aws_appsync_apiKey,\n        _c = _b.graphql_headers,\n        graphql_headers = _c === void 0 ? function () {\n      return {};\n    } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n    if (InternalPubSub && typeof InternalPubSub.subscribe === 'function') {\n      return InternalPubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders,\n        authToken: authToken\n      }, customUserAgentDetails);\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  InternalGraphQLAPIClass.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return this.Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n\n      var cred = _this.Credentials.shear(credentials);\n\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n\n  return InternalGraphQLAPIClass;\n}();\n\nexport { InternalGraphQLAPIClass };\nexport var InternalGraphQLAPI = new InternalGraphQLAPIClass(null);\nAmplify.register(InternalGraphQLAPI);","map":{"version":3,"names":["__assign","__awaiter","__generator","__read","__rest","print","parse","GraphQLError","Amplify","ConsoleLogger","Logger","Credentials","getAmplifyUserAgent","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","InternalPubSub","Auth","Cache","GraphQLAuthError","RestClient","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","authToken","InternalGraphQLAPIClass","options","_api","_options","debug","prototype","getModuleName","configure","_a","_b","API","otherOptions","opt","Object","assign","region","header","graphql_headers","warn","undefined","createInstance","Promise","reject","_headerBasedAuth","defaultAuthenticationType","additionalHeaders","aws_appsync_authenticationType","apiKey","authenticationType","headers","credentialsOK","token","federatedInfo","currentUser","e_1","session","e_2","_c","label","aws_appsync_apiKey","Error","NO_API_KEY","Authorization","_ensureCredentials","sent","NO_CREDENTIALS","trys","push","getItem","currentAuthenticatedUser","NO_FEDERATED_JWT","NO_CURRENT_USER","currentSession","getAccessToken","getJwtToken","NO_AUTH_TOKEN","getGraphqlOperationType","operation","doc","definitions","operationType","graphql","customUserAgentDetails","paramQuery","authMode","filter","def","kind","_d","operationDef","createInstanceIfNotCreated","cancellableToken","getCancellableToken","initParams","withCredentials","responsePromise","_graphql","updateRequestToBeCancellable","_graphqlSubscribe","concat","appSyncGraphqlEndpoint","customGraphqlEndpoint","customEndpointRegion","_e","_f","_g","_h","_j","body","init","endpoint","error","response","err_1","errors","_k","_l","aws_appsync_region","aws_appsync_graphqlEndpoint","graphql_endpoint","graphql_endpoint_iam_region","apply","signerServiceInfo","service","data","post","isCancel","message","length","cancel","request","hasCancelToken","subscribe","provider","_this","get","then","credentials","cred","shear","catch","err","InternalGraphQLAPI","register"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/api-graphql/lib-esm/internals/InternalGraphQLAPI.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __read, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { print, parse, GraphQLError, } from 'graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER, } from '@aws-amplify/core';\nimport { InternalPubSub } from '@aws-amplify/pubsub/internals';\nimport { Auth } from '@aws-amplify/auth';\nimport { Cache } from '@aws-amplify/cache';\nimport { GraphQLAuthError, } from '../types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables, authToken) {\n    if (variables === void 0) { variables = {}; }\n    return ({\n        query: query,\n        variables: variables,\n        authToken: authToken,\n    });\n};\n/**\n * Export Cloud Logic APIs\n */\nvar InternalGraphQLAPIClass = /** @class */ (function () {\n    /**\n     * Initialize GraphQL API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function InternalGraphQLAPIClass(options) {\n        this._api = null;\n        this.Auth = Auth;\n        this.Cache = Cache;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    InternalGraphQLAPIClass.prototype.getModuleName = function () {\n        return 'InternalGraphQLAPI';\n    };\n    /**\n     * Configure API\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    InternalGraphQLAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure GraphQL API', { opt: opt });\n        if (opt['aws_project_region']) {\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (typeof opt.graphql_headers !== 'undefined' &&\n            typeof opt.graphql_headers !== 'function') {\n            logger.warn('graphql_headers should be a function');\n            opt.graphql_headers = undefined;\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    InternalGraphQLAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest instance');\n        if (this._options) {\n            this._api = new RestClient(this._options);\n            // Share instance Credentials with client for SSR\n            this._api.Credentials = this.Credentials;\n            return true;\n        }\n        else {\n            return Promise.reject('API not configured');\n        }\n    };\n    InternalGraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType, additionalHeaders) {\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n                        authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n                        headers = {};\n                        _b = authenticationType;\n                        switch (_b) {\n                            case 'API_KEY': return [3 /*break*/, 1];\n                            case 'AWS_IAM': return [3 /*break*/, 2];\n                            case 'OPENID_CONNECT': return [3 /*break*/, 4];\n                            case 'AMAZON_COGNITO_USER_POOLS': return [3 /*break*/, 11];\n                            case 'AWS_LAMBDA': return [3 /*break*/, 15];\n                        }\n                        return [3 /*break*/, 16];\n                    case 1:\n                        if (!apiKey) {\n                            throw new Error(GraphQLAuthError.NO_API_KEY);\n                        }\n                        headers = {\n                            Authorization: null,\n                            'X-Api-Key': apiKey,\n                        };\n                        return [3 /*break*/, 17];\n                    case 2: return [4 /*yield*/, this._ensureCredentials()];\n                    case 3:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK) {\n                            throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n                        }\n                        return [3 /*break*/, 17];\n                    case 4:\n                        _c.trys.push([4, 9, , 10]);\n                        token = void 0;\n                        return [4 /*yield*/, Cache.getItem('federatedInfo')];\n                    case 5:\n                        federatedInfo = _c.sent();\n                        if (!federatedInfo) return [3 /*break*/, 6];\n                        token = federatedInfo.token;\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n                    case 7:\n                        currentUser = _c.sent();\n                        if (currentUser) {\n                            token = currentUser.token;\n                        }\n                        _c.label = 8;\n                    case 8:\n                        if (!token) {\n                            throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n                        }\n                        headers = {\n                            Authorization: token,\n                        };\n                        return [3 /*break*/, 10];\n                    case 9:\n                        e_1 = _c.sent();\n                        throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n                    case 10: return [3 /*break*/, 17];\n                    case 11:\n                        _c.trys.push([11, 13, , 14]);\n                        return [4 /*yield*/, this.Auth.currentSession()];\n                    case 12:\n                        session = _c.sent();\n                        headers = {\n                            Authorization: session.getAccessToken().getJwtToken(),\n                        };\n                        return [3 /*break*/, 14];\n                    case 13:\n                        e_2 = _c.sent();\n                        throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n                    case 14: return [3 /*break*/, 17];\n                    case 15:\n                        if (!additionalHeaders.Authorization) {\n                            throw new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n                        }\n                        headers = {\n                            Authorization: additionalHeaders.Authorization,\n                        };\n                        return [3 /*break*/, 17];\n                    case 16:\n                        headers = {\n                            Authorization: null,\n                        };\n                        return [3 /*break*/, 17];\n                    case 17: return [2 /*return*/, headers];\n                }\n            });\n        });\n    };\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    InternalGraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n        var doc = parse(operation);\n        var definitions = doc.definitions;\n        var _a = __read(definitions, 1), operationType = _a[0].operation;\n        return operationType;\n    };\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param options - GraphQL Options\n     * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n     * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n     */\n    InternalGraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders, customUserAgentDetails) {\n        var paramQuery = _a.query, _b = _a.variables, variables = _b === void 0 ? {} : _b, authMode = _a.authMode, authToken = _a.authToken;\n        var query = typeof paramQuery === 'string'\n            ? parse(paramQuery)\n            : parse(print(paramQuery));\n        var _c = __read(query.definitions.filter(function (def) { return def.kind === 'OperationDefinition'; }), 1), _d = _c[0], operationDef = _d === void 0 ? {} : _d;\n        var operationType = operationDef.operation;\n        var headers = additionalHeaders || {};\n        // if an authorization header is set, have the explicit authToken take precedence\n        if (authToken) {\n            headers.Authorization = authToken;\n        }\n        switch (operationType) {\n            case 'query':\n            case 'mutation':\n                this.createInstanceIfNotCreated();\n                var cancellableToken = this._api.getCancellableToken();\n                var initParams = {\n                    cancellableToken: cancellableToken,\n                    withCredentials: this._options.withCredentials,\n                };\n                var responsePromise = this._graphql({ query: query, variables: variables, authMode: authMode }, headers, initParams, customUserAgentDetails);\n                this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n                return responsePromise;\n            case 'subscription':\n                return this._graphqlSubscribe({ query: query, variables: variables, authMode: authMode }, headers, customUserAgentDetails);\n            default:\n                throw new Error(\"invalid operation type: \".concat(operationType));\n        }\n    };\n    InternalGraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams, customUserAgentDetails) {\n        var query = _a.query, variables = _a.variables, authMode = _a.authMode;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        if (initParams === void 0) { initParams = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n            var _k;\n            return __generator(this, function (_l) {\n                switch (_l.label) {\n                    case 0:\n                        this.createInstanceIfNotCreated();\n                        _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n                        _d = [{}];\n                        _e = !customGraphqlEndpoint;\n                        if (!_e) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n                    case 1:\n                        _e = (_l.sent());\n                        _l.label = 2;\n                    case 2:\n                        _f = [__assign.apply(void 0, _d.concat([(_e)]))];\n                        _g = customGraphqlEndpoint;\n                        if (!_g) return [3 /*break*/, 6];\n                        if (!customEndpointRegion) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode, additionalHeaders)];\n                    case 3:\n                        _h = _l.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _h = { Authorization: null };\n                        _l.label = 5;\n                    case 5:\n                        _g = (_h);\n                        _l.label = 6;\n                    case 6:\n                        _j = [__assign.apply(void 0, _f.concat([(_g)]))];\n                        return [4 /*yield*/, graphql_headers({ query: query, variables: variables })];\n                    case 7:\n                        headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), additionalHeaders]), (!customGraphqlEndpoint && (_k = {},\n                                _k[USER_AGENT_HEADER] = getAmplifyUserAgent(customUserAgentDetails),\n                                _k))]);\n                        body = {\n                            query: print(query),\n                            variables: variables,\n                        };\n                        init = Object.assign({\n                            headers: headers,\n                            body: body,\n                            signerServiceInfo: {\n                                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                                region: !customGraphqlEndpoint ? region : customEndpointRegion,\n                            },\n                        }, initParams);\n                        endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n                        if (!endpoint) {\n                            error = new GraphQLError('No graphql endpoint provided.');\n                            throw {\n                                data: {},\n                                errors: [error],\n                            };\n                        }\n                        _l.label = 8;\n                    case 8:\n                        _l.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, this._api.post(endpoint, init)];\n                    case 9:\n                        response = _l.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        err_1 = _l.sent();\n                        // If the exception is because user intentionally\n                        // cancelled the request, do not modify the exception\n                        // so that clients can identify the exception correctly.\n                        if (this._api.isCancel(err_1)) {\n                            throw err_1;\n                        }\n                        response = {\n                            data: {},\n                            errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)],\n                        };\n                        return [3 /*break*/, 11];\n                    case 11:\n                        errors = response.errors;\n                        if (errors && errors.length) {\n                            throw response;\n                        }\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    InternalGraphQLAPIClass.prototype.createInstanceIfNotCreated = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.createInstance()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    InternalGraphQLAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request. Only applicable for graphql queries and mutations\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    InternalGraphQLAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    InternalGraphQLAPIClass.prototype.hasCancelToken = function (request) {\n        return this._api.hasCancelToken(request);\n    };\n    InternalGraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders, customUserAgentDetails) {\n        var query = _a.query, variables = _a.variables, defaultAuthenticationType = _a.authMode, authToken = _a.authToken;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        var _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, aws_appsync_authenticationType = _b.aws_appsync_authenticationType, apiKey = _b.aws_appsync_apiKey, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c;\n        var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n        if (InternalPubSub && typeof InternalPubSub.subscribe === 'function') {\n            return InternalPubSub.subscribe('', {\n                provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n                appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n                authenticationType: authenticationType,\n                apiKey: apiKey,\n                query: print(query),\n                region: region,\n                variables: variables,\n                graphql_headers: graphql_headers,\n                additionalHeaders: additionalHeaders,\n                authToken: authToken,\n            }, customUserAgentDetails);\n        }\n        else {\n            logger.debug('No pubsub module applied for subscription');\n            throw new Error('No pubsub module applied for subscription');\n        }\n    };\n    /**\n     * @private\n     */\n    InternalGraphQLAPIClass.prototype._ensureCredentials = function () {\n        var _this = this;\n        return this.Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return false;\n            var cred = _this.Credentials.shear(credentials);\n            logger.debug('set credentials for api', cred);\n            return true;\n        })\n            .catch(function (err) {\n            logger.warn('ensure credentials error', err);\n            return false;\n        });\n    };\n    return InternalGraphQLAPIClass;\n}());\nexport { InternalGraphQLAPIClass };\nexport var InternalGraphQLAPI = new InternalGraphQLAPIClass(null);\nAmplify.register(InternalGraphQLAPI);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}