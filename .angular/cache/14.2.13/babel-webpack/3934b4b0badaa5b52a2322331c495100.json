{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n  const {\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    shape\n  } = attrs;\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n  util.assert(xSize === util.sizeFromShape($shape), () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` + `shape must have the same number of elements.`); // Backend needs to track refCount for the dataId for reshape op\n\n  args.backend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport const reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape\n};","map":{"version":3,"names":["Reshape","util","reshape","args","inputs","attrs","x","shape","xSize","sizeFromShape","$shape","inferFromImplicitShape","assert","backend","incRef","dataId","dtype","reshapeConfig","kernelName","backendName","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reshape.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n    const { inputs, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const xSize = util.sizeFromShape(x.shape);\n    const $shape = util.inferFromImplicitShape(shape, xSize);\n    util.assert(xSize === util.sizeFromShape($shape), () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n        `shape must have the same number of elements.`);\n    // Backend needs to track refCount for the dataId for reshape op\n    args.backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nexport const reshapeConfig = {\n    kernelName: Reshape,\n    backendName: 'wasm',\n    kernelFunc: reshape\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,IAAlB,QAA8B,uBAA9B;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC1B,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAoBF,IAA1B;EACA,MAAM;IAAEG;EAAF,IAAQF,MAAd;EACA,MAAM;IAAEG;EAAF,IAAYF,KAAlB;EACA,MAAMG,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBH,CAAC,CAACC,KAArB,CAAd;EACA,MAAMG,MAAM,GAAGT,IAAI,CAACU,sBAAL,CAA4BJ,KAA5B,EAAmCC,KAAnC,CAAf;EACAP,IAAI,CAACW,MAAL,CAAYJ,KAAK,KAAKP,IAAI,CAACQ,aAAL,CAAmBC,MAAnB,CAAtB,EAAkD,MAAO,cAAaA,MAAO,gBAAeJ,CAAC,CAACC,KAAM,sBAA5C,GACnD,8CADL,EAN0B,CAQ1B;;EACAJ,IAAI,CAACU,OAAL,CAAaC,MAAb,CAAoBR,CAAC,CAACS,MAAtB;EACA,OAAO;IAAEA,MAAM,EAAET,CAAC,CAACS,MAAZ;IAAoBR,KAAK,EAAEG,MAA3B;IAAmCM,KAAK,EAAEV,CAAC,CAACU;EAA5C,CAAP;AACH;AACD,OAAO,MAAMC,aAAa,GAAG;EACzBC,UAAU,EAAElB,OADa;EAEzBmB,WAAW,EAAE,MAFY;EAGzBC,UAAU,EAAElB;AAHa,CAAtB"},"metadata":{},"sourceType":"module"}