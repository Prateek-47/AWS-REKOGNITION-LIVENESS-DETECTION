{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\n\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV5, 'number', // Result*\n  ['number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction kernelFunc(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    iouThreshold,\n    maxOutputSize,\n    scoreThreshold,\n    softNmsSigma\n  } = attrs;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n  const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  } = parseResultStruct(backend, resOffset); // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor = backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc\n};","map":{"version":3,"names":["NonMaxSuppressionV5","parseResultStruct","wasmFunc","setup","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","iouThreshold","maxOutputSize","scoreThreshold","softNmsSigma","boxes","scores","boxesId","dataIdMap","get","dataId","id","scoresId","resOffset","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","selectedIndicesTensor","makeOutput","selectedScoresTensor","nonMaxSuppressionV5Config","kernelName","backendName","setupFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV5.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV5, 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction kernelFunc(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    const { pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs } = parseResultStruct(backend, resOffset);\n    // Since we are not using validOutputs for V5, we have to delete it from the\n    // heap.\n    backend.wasm._free(pValidOutputs);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    const selectedScoresTensor = backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n    return [selectedIndicesTensor, selectedScoresTensor];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: kernelFunc,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAT,QAAoC,uBAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,IAAIC,QAAJ;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;EACpBF,QAAQ,GAAGE,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBN,mBAAnB,EAAwC,QAAxC,EAAkD;EAC7D,CACI,QADJ,EAEI,QAFJ,EAGI,QAHJ,EAII,QAJJ,EAKI,QALJ,EAMI,QANJ,CADW,CAAX;AASH;;AACD,SAASO,UAAT,CAAoBC,IAApB,EAA0B;EACtB,MAAM;IAAEJ,OAAF;IAAWK,MAAX;IAAmBC;EAAnB,IAA6BF,IAAnC;EACA,MAAM;IAAEG,YAAF;IAAgBC,aAAhB;IAA+BC,cAA/B;IAA+CC;EAA/C,IAAgEJ,KAAtE;EACA,MAAM;IAAEK,KAAF;IAASC;EAAT,IAAoBP,MAA1B;EACA,MAAMQ,OAAO,GAAGb,OAAO,CAACc,SAAR,CAAkBC,GAAlB,CAAsBJ,KAAK,CAACK,MAA5B,EAAoCC,EAApD;EACA,MAAMC,QAAQ,GAAGlB,OAAO,CAACc,SAAR,CAAkBC,GAAlB,CAAsBH,MAAM,CAACI,MAA7B,EAAqCC,EAAtD;EACA,MAAME,SAAS,GAAGrB,QAAQ,CAACe,OAAD,EAAUK,QAAV,EAAoBV,aAApB,EAAmCD,YAAnC,EAAiDE,cAAjD,EAAiEC,YAAjE,CAA1B;EACA,MAAM;IAAEU,gBAAF;IAAoBC,YAApB;IAAkCC,eAAlC;IAAmDC;EAAnD,IAAqE1B,iBAAiB,CAACG,OAAD,EAAUmB,SAAV,CAA5F,CAPsB,CAQtB;EACA;;EACAnB,OAAO,CAACC,IAAR,CAAauB,KAAb,CAAmBD,aAAnB;;EACA,MAAME,qBAAqB,GAAGzB,OAAO,CAAC0B,UAAR,CAAmB,CAACL,YAAD,CAAnB,EAAmC,OAAnC,EAA4CD,gBAA5C,CAA9B;EACA,MAAMO,oBAAoB,GAAG3B,OAAO,CAAC0B,UAAR,CAAmB,CAACL,YAAD,CAAnB,EAAmC,SAAnC,EAA8CC,eAA9C,CAA7B;EACA,OAAO,CAACG,qBAAD,EAAwBE,oBAAxB,CAAP;AACH;;AACD,OAAO,MAAMC,yBAAyB,GAAG;EACrCC,UAAU,EAAEjC,mBADyB;EAErCkC,WAAW,EAAE,MAFwB;EAGrCC,SAAS,EAAEhC,KAH0B;EAIrCI,UAAU,EAAEA;AAJyB,CAAlC"},"metadata":{},"sourceType":"module"}