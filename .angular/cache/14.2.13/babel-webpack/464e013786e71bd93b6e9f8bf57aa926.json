{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ConsoleLogger as Logger, StorageAction } from '@aws-amplify/core';\nimport { putObject, createMultipartUpload, uploadPart, completeMultipartUpload, abortMultipartUpload, listParts } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from '../AwsClients/S3/utils';\nimport { EventEmitter } from 'events';\nimport { calculateContentMd5 } from '../common/MD5utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, loadS3Config, getPrefix, credentialsProvider } from '../common/S3ClientUtils';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\n\nvar AWSS3ProviderManagedUpload =\n/** @class */\nfunction () {\n  function AWSS3ProviderManagedUpload(params, opts, emitter) {\n    this.opts = null;\n    this.completedParts = [];\n    this.partSize = DEFAULT_PART_SIZE; // Progress reporting\n\n    this.bytesUploaded = 0;\n    this.totalBytesToUpload = 0;\n    this.emitter = null;\n    this.params = params;\n    this.opts = __assign({\n      isObjectLockEnabled: false\n    }, opts);\n    this.emitter = emitter;\n    this.s3Config = loadS3Config(__assign(__assign({}, opts), {\n      emitter: emitter,\n      storageAction: StorageAction.Put\n    }));\n  }\n\n  AWSS3ProviderManagedUpload.prototype.upload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isObjectLockEnabled, _a, _b, _c, _d, _e, numberOfPartsToUpload, parts, start, error_1;\n\n      var _f;\n\n      var _this = this;\n\n      return __generator(this, function (_g) {\n        switch (_g.label) {\n          case 0:\n            _g.trys.push([0, 12,, 14]);\n\n            isObjectLockEnabled = this.opts.isObjectLockEnabled;\n            if (!(isObjectLockEnabled === true)) return [3\n            /*break*/\n            , 2];\n            _a = this.params;\n            return [4\n            /*yield*/\n            , calculateContentMd5( // @ts-expect-error currently ReadableStream<any> is not being supported in put api\n            this.params.Body)];\n\n          case 1:\n            _a.ContentMD5 = _g.sent();\n            _g.label = 2;\n\n          case 2:\n            this.body = this.validateAndSanitizeBody(this.params.Body);\n            this.totalBytesToUpload = this.byteLength(this.body);\n            if (!(this.totalBytesToUpload <= DEFAULT_PART_SIZE)) return [3\n            /*break*/\n            , 4]; // Multipart upload is not required. Upload the sanitized body as is\n\n            this.params.Body = this.body;\n            _b = putObject;\n            _c = [this.s3Config];\n            _d = [__assign({}, this.params)];\n            _f = {};\n            return [4\n            /*yield*/\n            , this.getObjectKeyWithPrefix(this.params.Key)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _b.apply(void 0, _c.concat([__assign.apply(void 0, _d.concat([(_f.Key = _g.sent(), _f)]))]))];\n\n          case 4:\n            // Step 1: Determine appropriate part size.\n            this.partSize = calculatePartSize(this.totalBytesToUpload); // Step 2: Initiate the multi part upload\n\n            _e = this;\n            return [4\n            /*yield*/\n            , this.createMultiPartUpload()];\n\n          case 5:\n            // Step 2: Initiate the multi part upload\n            _e.uploadId = _g.sent();\n            numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.partSize);\n            parts = this.createParts();\n            start = 0;\n            _g.label = 6;\n\n          case 6:\n            if (!(start < numberOfPartsToUpload)) return [3\n            /*break*/\n            , 9]; // Upload as many as `queueSize` parts simultaneously\n\n            return [4\n            /*yield*/\n            , this.uploadParts(this.uploadId, parts.slice(start, start + DEFAULT_QUEUE_SIZE))];\n\n          case 7:\n            // Upload as many as `queueSize` parts simultaneously\n            _g.sent();\n\n            _g.label = 8;\n\n          case 8:\n            start += DEFAULT_QUEUE_SIZE;\n            return [3\n            /*break*/\n            , 6];\n\n          case 9:\n            parts.map(function (part) {\n              _this.removeEventListener(part);\n            });\n            return [4\n            /*yield*/\n            , this.finishMultiPartUpload(this.uploadId)];\n\n          case 10:\n            // Step 3: Finalize the upload such that S3 can recreate the file\n            return [2\n            /*return*/\n            , _g.sent()];\n\n          case 11:\n            return [3\n            /*break*/\n            , 14];\n\n          case 12:\n            error_1 = _g.sent(); // if any error is thrown, call cleanup\n\n            return [4\n            /*yield*/\n            , this.cleanup(this.uploadId)];\n\n          case 13:\n            // if any error is thrown, call cleanup\n            _g.sent();\n\n            logger.error('Error. Cancelling the multipart upload.');\n            throw error_1;\n\n          case 14:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createParts = function () {\n    try {\n      var parts = [];\n\n      for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {\n        var bodyEnd = Math.min(bodyStart + this.partSize, this.totalBytesToUpload);\n        parts.push({\n          bodyPart: this.body.slice(bodyStart, bodyEnd),\n          partNumber: parts.length + 1,\n          emitter: new EventEmitter(),\n          _lastUploadedBytes: 0\n        });\n        bodyStart += this.partSize;\n      }\n\n      return parts;\n    } catch (error) {\n      logger.error(error);\n      throw error;\n    }\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, _a, _b, _c, error_2;\n\n      var _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 3,, 4]);\n\n            _a = createMultipartUpload;\n            _b = [this.s3Config];\n            _c = [__assign({}, this.params)];\n            _d = {};\n            return [4\n            /*yield*/\n            , this.getObjectKeyWithPrefix(this.params.Key)];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent(), _d)]))]))];\n\n          case 2:\n            response = _e.sent();\n            logger.debug(response.UploadId);\n            return [2\n            /*return*/\n            , response.UploadId];\n\n          case 3:\n            error_2 = _e.sent();\n            logger.error(error_2);\n            throw error_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @private Not to be extended outside of tests\n   * @VisibleFotTesting\n   */\n\n\n  AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var allResults, i, error_3;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , Promise.all(parts.map(function (part) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var isObjectLockEnabled, _a, _b, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, ContentMD5, res, _c, _d;\n\n                var _e;\n\n                return __generator(this, function (_f) {\n                  switch (_f.label) {\n                    case 0:\n                      this.setupEventListener(part);\n                      isObjectLockEnabled = this.opts.isObjectLockEnabled;\n                      if (!isObjectLockEnabled) return [3\n                      /*break*/\n                      , 2];\n                      _a = this.params;\n                      return [4\n                      /*yield*/\n                      , calculateContentMd5(part.bodyPart)];\n\n                    case 1:\n                      _a.ContentMD5 = _f.sent();\n                      _f.label = 2;\n\n                    case 2:\n                      _b = this.params, Key = _b.Key, Bucket = _b.Bucket, SSECustomerAlgorithm = _b.SSECustomerAlgorithm, SSECustomerKey = _b.SSECustomerKey, SSECustomerKeyMD5 = _b.SSECustomerKeyMD5, ContentMD5 = _b.ContentMD5;\n                      _c = uploadPart;\n                      _d = [__assign(__assign({}, this.s3Config), {\n                        emitter: part.emitter\n                      })];\n                      _e = {\n                        PartNumber: part.partNumber,\n                        Body: part.bodyPart,\n                        UploadId: uploadId\n                      };\n                      return [4\n                      /*yield*/\n                      , this.getObjectKeyWithPrefix(this.params.Key)];\n\n                    case 3:\n                      return [4\n                      /*yield*/\n                      , _c.apply(void 0, _d.concat([(_e.Key = _f.sent(), _e.Bucket = Bucket, _e.SSECustomerAlgorithm = SSECustomerAlgorithm, _e.SSECustomerKey = SSECustomerKey, _e.SSECustomerKeyMD5 = SSECustomerKeyMD5, _e.ContentMD5 = ContentMD5, _e)]))];\n\n                    case 4:\n                      res = _f.sent();\n                      return [2\n                      /*return*/\n                      , res];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            allResults = _a.sent(); // The order of resolved promises is the same as input promise order.\n\n            for (i = 0; i < allResults.length; i++) {\n              this.completedParts.push({\n                PartNumber: parts[i].partNumber,\n                ETag: allResults[i].ETag\n              });\n            }\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            error_3 = _a.sent();\n            logger.error('Error happened while uploading a part. Cancelling the multipart upload');\n            throw error_3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, Key, error_4;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {\n              Bucket: this.params.Bucket\n            };\n            return [4\n            /*yield*/\n            , this.getObjectKeyWithPrefix(this.params.Key)];\n\n          case 1:\n            input = (_a.Key = _b.sent(), _a.UploadId = uploadId, _a.MultipartUpload = {\n              Parts: this.completedParts\n            }, _a);\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , completeMultipartUpload(this.s3Config, input)];\n\n          case 3:\n            Key = _b.sent().Key;\n            return [2\n            /*return*/\n            , Key];\n\n          case 4:\n            error_4 = _b.sent();\n            logger.error('Error happened while finishing the upload.');\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, data;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Reset this's state\n            this.body = null;\n            this.completedParts = [];\n            this.bytesUploaded = 0;\n            this.totalBytesToUpload = 0;\n\n            if (!uploadId) {\n              // This is a single part upload;\n              return [2\n              /*return*/\n              ];\n            }\n\n            _a = {\n              Bucket: this.params.Bucket\n            };\n            return [4\n            /*yield*/\n            , this.getObjectKeyWithPrefix(this.params.Key)];\n\n          case 1:\n            input = (_a.Key = _b.sent(), _a.UploadId = uploadId, _a);\n            return [4\n            /*yield*/\n            , abortMultipartUpload(this.s3Config, input)];\n\n          case 2:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , listParts(this.s3Config, input)];\n\n          case 3:\n            data = _b.sent();\n\n            if (data && data.Parts && data.Parts.length > 0) {\n              throw new Error('Multipart upload clean up failed.');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {\n    part.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n    part.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n  };\n\n  AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n    var _this = this;\n\n    part.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n      _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n\n      part._lastUploadedBytes = progress.loaded;\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n    this.bytesUploaded += incrementalUpdate;\n    this.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytesToUpload,\n      part: partNumber,\n      key: this.params.Key\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n    if (input === null || input === undefined) return 0;\n\n    if (typeof input.byteLength === 'number') {\n      return input.byteLength;\n    } else if (typeof input.length === 'number') {\n      return input.length;\n    } else if (typeof input.size === 'number') {\n      return input.size;\n    } else if (typeof input.path === 'string') {\n      /* NodeJs Support\n      return require('fs').lstatSync(input.path).size;\n      */\n    } else {\n      throw new Error('Cannot determine length of ' + input);\n    }\n  };\n\n  AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n    var sanitizedBody = this.isGenericObject(body) ? JSON.stringify(body) : body;\n    /* TODO: streams and files for nodejs\n    if (\n        typeof body.path === 'string' &&\n        require('fs').lstatSync(body.path).size > 0\n    ) {\n        sanitizedBody = body;\n    } */\n\n    if (this.byteLength(sanitizedBody) > MAX_OBJECT_SIZE) {\n      throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytesToUpload, \" Bytes\"));\n    }\n\n    return sanitizedBody;\n  };\n\n  AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n    if (body !== null && typeof body === 'object') {\n      try {\n        return !(this.byteLength(body) >= 0);\n      } catch (error) {\n        // If we cannot determine the length of the body, consider it\n        // as a generic object and upload a stringified version of it\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  AWSS3ProviderManagedUpload.prototype.getObjectKeyWithPrefix = function (keyWithoutPrefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = getPrefix;\n            _b = [__assign({}, this.opts)];\n            _c = {};\n            return [4\n            /*yield*/\n            , credentialsProvider()];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(void 0, [__assign.apply(void 0, _b.concat([(_c.credentials = _d.sent(), _c)]))])];\n\n          case 2:\n            return [2\n            /*return*/\n            , _d.sent() + keyWithoutPrefix];\n        }\n      });\n    });\n  };\n\n  return AWSS3ProviderManagedUpload;\n}();\n\nexport { AWSS3ProviderManagedUpload };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","StorageAction","putObject","createMultipartUpload","uploadPart","completeMultipartUpload","abortMultipartUpload","listParts","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","EventEmitter","calculateContentMd5","calculatePartSize","DEFAULT_PART_SIZE","DEFAULT_QUEUE_SIZE","MAX_OBJECT_SIZE","loadS3Config","getPrefix","credentialsProvider","logger","AWSS3ProviderManagedUpload","params","opts","emitter","completedParts","partSize","bytesUploaded","totalBytesToUpload","isObjectLockEnabled","s3Config","storageAction","Put","upload","_a","_b","_c","_d","_e","numberOfPartsToUpload","parts","start","error_1","_f","_this","_g","Body","ContentMD5","validateAndSanitizeBody","byteLength","getObjectKeyWithPrefix","Key","concat","createMultiPartUpload","uploadId","Math","ceil","createParts","uploadParts","slice","map","part","removeEventListener","finishMultiPartUpload","cleanup","error","bodyStart","bodyEnd","min","bodyPart","partNumber","_lastUploadedBytes","response","error_2","debug","UploadId","allResults","error_3","all","Bucket","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","res","setupEventListener","PartNumber","ETag","input","error_4","MultipartUpload","Parts","data","Error","removeAllListeners","on","progress","progressChanged","loaded","incrementalUpdate","emit","total","key","undefined","size","path","sanitizedBody","isGenericObject","JSON","stringify","keyWithoutPrefix","credentials"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3ProviderManagedUpload.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, StorageAction } from '@aws-amplify/core';\nimport { putObject, createMultipartUpload, uploadPart, completeMultipartUpload, abortMultipartUpload, listParts, } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from '../AwsClients/S3/utils';\nimport { EventEmitter } from 'events';\nimport { calculateContentMd5 } from '../common/MD5utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, loadS3Config, getPrefix, credentialsProvider, } from '../common/S3ClientUtils';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\nvar AWSS3ProviderManagedUpload = /** @class */ (function () {\n    function AWSS3ProviderManagedUpload(params, opts, emitter) {\n        this.opts = null;\n        this.completedParts = [];\n        this.partSize = DEFAULT_PART_SIZE;\n        // Progress reporting\n        this.bytesUploaded = 0;\n        this.totalBytesToUpload = 0;\n        this.emitter = null;\n        this.params = params;\n        this.opts = __assign({ isObjectLockEnabled: false }, opts);\n        this.emitter = emitter;\n        this.s3Config = loadS3Config(__assign(__assign({}, opts), { emitter: emitter, storageAction: StorageAction.Put }));\n    }\n    AWSS3ProviderManagedUpload.prototype.upload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var isObjectLockEnabled, _a, _b, _c, _d, _e, numberOfPartsToUpload, parts, start, error_1;\n            var _f;\n            var _this = this;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        _g.trys.push([0, 12, , 14]);\n                        isObjectLockEnabled = this.opts.isObjectLockEnabled;\n                        if (!(isObjectLockEnabled === true)) return [3 /*break*/, 2];\n                        _a = this.params;\n                        return [4 /*yield*/, calculateContentMd5(\n                            // @ts-expect-error currently ReadableStream<any> is not being supported in put api\n                            this.params.Body)];\n                    case 1:\n                        _a.ContentMD5 = _g.sent();\n                        _g.label = 2;\n                    case 2:\n                        this.body = this.validateAndSanitizeBody(this.params.Body);\n                        this.totalBytesToUpload = this.byteLength(this.body);\n                        if (!(this.totalBytesToUpload <= DEFAULT_PART_SIZE)) return [3 /*break*/, 4];\n                        // Multipart upload is not required. Upload the sanitized body as is\n                        this.params.Body = this.body;\n                        _b = putObject;\n                        _c = [this.s3Config];\n                        _d = [__assign({}, this.params)];\n                        _f = {};\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 3: return [2 /*return*/, _b.apply(void 0, _c.concat([__assign.apply(void 0, _d.concat([(_f.Key = _g.sent(), _f)]))]))];\n                    case 4:\n                        // Step 1: Determine appropriate part size.\n                        this.partSize = calculatePartSize(this.totalBytesToUpload);\n                        // Step 2: Initiate the multi part upload\n                        _e = this;\n                        return [4 /*yield*/, this.createMultiPartUpload()];\n                    case 5:\n                        // Step 2: Initiate the multi part upload\n                        _e.uploadId = _g.sent();\n                        numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.partSize);\n                        parts = this.createParts();\n                        start = 0;\n                        _g.label = 6;\n                    case 6:\n                        if (!(start < numberOfPartsToUpload)) return [3 /*break*/, 9];\n                        // Upload as many as `queueSize` parts simultaneously\n                        return [4 /*yield*/, this.uploadParts(this.uploadId, parts.slice(start, start + DEFAULT_QUEUE_SIZE))];\n                    case 7:\n                        // Upload as many as `queueSize` parts simultaneously\n                        _g.sent();\n                        _g.label = 8;\n                    case 8:\n                        start += DEFAULT_QUEUE_SIZE;\n                        return [3 /*break*/, 6];\n                    case 9:\n                        parts.map(function (part) {\n                            _this.removeEventListener(part);\n                        });\n                        return [4 /*yield*/, this.finishMultiPartUpload(this.uploadId)];\n                    case 10: \n                    // Step 3: Finalize the upload such that S3 can recreate the file\n                    return [2 /*return*/, _g.sent()];\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        error_1 = _g.sent();\n                        // if any error is thrown, call cleanup\n                        return [4 /*yield*/, this.cleanup(this.uploadId)];\n                    case 13:\n                        // if any error is thrown, call cleanup\n                        _g.sent();\n                        logger.error('Error. Cancelling the multipart upload.');\n                        throw error_1;\n                    case 14: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.createParts = function () {\n        try {\n            var parts = [];\n            for (var bodyStart = 0; bodyStart < this.totalBytesToUpload;) {\n                var bodyEnd = Math.min(bodyStart + this.partSize, this.totalBytesToUpload);\n                parts.push({\n                    bodyPart: this.body.slice(bodyStart, bodyEnd),\n                    partNumber: parts.length + 1,\n                    emitter: new EventEmitter(),\n                    _lastUploadedBytes: 0,\n                });\n                bodyStart += this.partSize;\n            }\n            return parts;\n        }\n        catch (error) {\n            logger.error(error);\n            throw error;\n        }\n    };\n    AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, _a, _b, _c, error_2;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 3, , 4]);\n                        _a = createMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = [__assign({}, this.params)];\n                        _d = {};\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent(), _d)]))]))];\n                    case 2:\n                        response = _e.sent();\n                        logger.debug(response.UploadId);\n                        return [2 /*return*/, response.UploadId];\n                    case 3:\n                        error_2 = _e.sent();\n                        logger.error(error_2);\n                        throw error_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @private Not to be extended outside of tests\n     * @VisibleFotTesting\n     */\n    AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allResults, i, error_3;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Promise.all(parts.map(function (part) { return __awaiter(_this, void 0, void 0, function () {\n                                var isObjectLockEnabled, _a, _b, Key, Bucket, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, ContentMD5, res, _c, _d;\n                                var _e;\n                                return __generator(this, function (_f) {\n                                    switch (_f.label) {\n                                        case 0:\n                                            this.setupEventListener(part);\n                                            isObjectLockEnabled = this.opts.isObjectLockEnabled;\n                                            if (!isObjectLockEnabled) return [3 /*break*/, 2];\n                                            _a = this.params;\n                                            return [4 /*yield*/, calculateContentMd5(part.bodyPart)];\n                                        case 1:\n                                            _a.ContentMD5 = _f.sent();\n                                            _f.label = 2;\n                                        case 2:\n                                            _b = this.params, Key = _b.Key, Bucket = _b.Bucket, SSECustomerAlgorithm = _b.SSECustomerAlgorithm, SSECustomerKey = _b.SSECustomerKey, SSECustomerKeyMD5 = _b.SSECustomerKeyMD5, ContentMD5 = _b.ContentMD5;\n                                            _c = uploadPart;\n                                            _d = [__assign(__assign({}, this.s3Config), { emitter: part.emitter })];\n                                            _e = {\n                                                PartNumber: part.partNumber,\n                                                Body: part.bodyPart,\n                                                UploadId: uploadId\n                                            };\n                                            return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                                        case 3: return [4 /*yield*/, _c.apply(void 0, _d.concat([(_e.Key = _f.sent(),\n                                                    _e.Bucket = Bucket,\n                                                    _e.SSECustomerAlgorithm = SSECustomerAlgorithm,\n                                                    _e.SSECustomerKey = SSECustomerKey,\n                                                    _e.SSECustomerKeyMD5 = SSECustomerKeyMD5,\n                                                    _e.ContentMD5 = ContentMD5,\n                                                    _e)]))];\n                                        case 4:\n                                            res = _f.sent();\n                                            return [2 /*return*/, res];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        allResults = _a.sent();\n                        // The order of resolved promises is the same as input promise order.\n                        for (i = 0; i < allResults.length; i++) {\n                            this.completedParts.push({\n                                PartNumber: parts[i].partNumber,\n                                ETag: allResults[i].ETag,\n                            });\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        logger.error('Error happened while uploading a part. Cancelling the multipart upload');\n                        throw error_3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var input, Key, error_4;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1:\n                        input = (_a.Key = _b.sent(),\n                            _a.UploadId = uploadId,\n                            _a.MultipartUpload = { Parts: this.completedParts },\n                            _a);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, completeMultipartUpload(this.s3Config, input)];\n                    case 3:\n                        Key = (_b.sent()).Key;\n                        return [2 /*return*/, Key];\n                    case 4:\n                        error_4 = _b.sent();\n                        logger.error('Error happened while finishing the upload.');\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var input, data;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // Reset this's state\n                        this.body = null;\n                        this.completedParts = [];\n                        this.bytesUploaded = 0;\n                        this.totalBytesToUpload = 0;\n                        if (!uploadId) {\n                            // This is a single part upload;\n                            return [2 /*return*/];\n                        }\n                        _a = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.getObjectKeyWithPrefix(this.params.Key)];\n                    case 1:\n                        input = (_a.Key = _b.sent(),\n                            _a.UploadId = uploadId,\n                            _a);\n                        return [4 /*yield*/, abortMultipartUpload(this.s3Config, input)];\n                    case 2:\n                        _b.sent();\n                        return [4 /*yield*/, listParts(this.s3Config, input)];\n                    case 3:\n                        data = _b.sent();\n                        if (data && data.Parts && data.Parts.length > 0) {\n                            throw new Error('Multipart upload clean up failed.');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.removeEventListener = function (part) {\n        part.emitter.removeAllListeners(SEND_UPLOAD_PROGRESS_EVENT);\n        part.emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n    };\n    AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n        var _this = this;\n        part.emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n            part._lastUploadedBytes = progress.loaded;\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n        this.bytesUploaded += incrementalUpdate;\n        this.emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, {\n            loaded: this.bytesUploaded,\n            total: this.totalBytesToUpload,\n            part: partNumber,\n            key: this.params.Key,\n        });\n    };\n    AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n        if (input === null || input === undefined)\n            return 0;\n        if (typeof input.byteLength === 'number') {\n            return input.byteLength;\n        }\n        else if (typeof input.length === 'number') {\n            return input.length;\n        }\n        else if (typeof input.size === 'number') {\n            return input.size;\n        }\n        else if (typeof input.path === 'string') {\n            /* NodeJs Support\n            return require('fs').lstatSync(input.path).size;\n            */\n        }\n        else {\n            throw new Error('Cannot determine length of ' + input);\n        }\n    };\n    AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n        var sanitizedBody = this.isGenericObject(body)\n            ? JSON.stringify(body)\n            : body;\n        /* TODO: streams and files for nodejs\n        if (\n            typeof body.path === 'string' &&\n            require('fs').lstatSync(body.path).size > 0\n        ) {\n            sanitizedBody = body;\n        } */\n        if (this.byteLength(sanitizedBody) > MAX_OBJECT_SIZE) {\n            throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytesToUpload, \" Bytes\"));\n        }\n        return sanitizedBody;\n    };\n    AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n        if (body !== null && typeof body === 'object') {\n            try {\n                return !(this.byteLength(body) >= 0);\n            }\n            catch (error) {\n                // If we cannot determine the length of the body, consider it\n                // as a generic object and upload a stringified version of it\n                return true;\n            }\n        }\n        return false;\n    };\n    AWSS3ProviderManagedUpload.prototype.getObjectKeyWithPrefix = function (keyWithoutPrefix) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = getPrefix;\n                        _b = [__assign({}, this.opts)];\n                        _c = {};\n                        return [4 /*yield*/, credentialsProvider()];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, [__assign.apply(void 0, _b.concat([(_c.credentials = _d.sent(), _c)]))])];\n                    case 2: return [2 /*return*/, ((_d.sent()) + keyWithoutPrefix)];\n                }\n            });\n        });\n    };\n    return AWSS3ProviderManagedUpload;\n}());\nexport { AWSS3ProviderManagedUpload };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}