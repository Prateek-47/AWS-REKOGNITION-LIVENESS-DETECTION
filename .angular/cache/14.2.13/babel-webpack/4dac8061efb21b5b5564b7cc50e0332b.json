{"ast":null,"code":"import { __awaiter, __generator, __read, __values } from \"tslib\";\nimport { InternalAPI } from '@aws-amplify/api/internals';\nimport Observable from 'zen-observable-ts';\nimport { ProcessName } from '../../types';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter, getTokenForCustomAuth } from '../utils';\nimport { jitteredExponentialRetry, Category, ConsoleLogger as Logger, DataStoreAction, Hub, NonRetryableError, BackgroundProcessManager } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { getSyncErrorType } from './errorMaps';\nvar opResultDefaults = {\n  items: [],\n  nextToken: null,\n  startedAt: null\n};\nvar logger = new Logger('DataStore');\n\nvar SyncProcessor =\n/** @class */\nfunction () {\n  function SyncProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy, errorHandler, amplifyContext) {\n    if (amplifyConfig === void 0) {\n      amplifyConfig = {};\n    }\n\n    this.schema = schema;\n    this.syncPredicates = syncPredicates;\n    this.amplifyConfig = amplifyConfig;\n    this.authModeStrategy = authModeStrategy;\n    this.errorHandler = errorHandler;\n    this.amplifyContext = amplifyContext;\n    this.typeQuery = new WeakMap();\n    this.runningProcesses = new BackgroundProcessManager();\n    amplifyContext.InternalAPI = amplifyContext.InternalAPI || InternalAPI;\n    this.generateQueries();\n  }\n\n  SyncProcessor.prototype.generateQueries = function () {\n    var _this = this;\n\n    Object.values(this.schema.namespaces).forEach(function (namespace) {\n      Object.values(namespace.models).filter(function (_a) {\n        var syncable = _a.syncable;\n        return syncable;\n      }).forEach(function (model) {\n        var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1),\n            _b = __read(_a[0]),\n            opNameQuery = _b.slice(1);\n\n        _this.typeQuery.set(model, opNameQuery);\n      });\n    });\n  };\n\n  SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n    if (!this.syncPredicates) {\n      return null;\n    }\n\n    var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n\n    if (!predicatesGroup) {\n      return null;\n    }\n\n    return predicateToGraphQLFilter(predicatesGroup);\n  };\n\n  SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter, onTerminate) {\n    if (limit === void 0) {\n      limit = null;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, authModeRetry, data, _b, _c, opResult, items, newNextToken, startedAt;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n            variables = {\n              limit: limit,\n              nextToken: nextToken,\n              lastSync: lastSync,\n              filter: filter\n            };\n            return [4\n            /*yield*/\n            , getModelAuthModes({\n              authModeStrategy: this.authModeStrategy,\n              defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n              modelName: modelDefinition.name,\n              schema: this.schema\n            })];\n\n          case 1:\n            modelAuthModes = _d.sent();\n            readAuthModes = modelAuthModes.READ;\n            authModeAttempts = 0;\n\n            authModeRetry = function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var response, error_1, authMode;\n\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      if (!this.runningProcesses.isOpen) {\n                        throw new Error('sync.retreievePage termination was requested. Exiting.');\n                      }\n\n                      _b.label = 1;\n\n                    case 1:\n                      _b.trys.push([1, 3,, 5]);\n\n                      logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4\n                      /*yield*/\n                      , this.jitteredRetry({\n                        query: query,\n                        variables: variables,\n                        opName: opName,\n                        modelDefinition: modelDefinition,\n                        authMode: readAuthModes[authModeAttempts],\n                        onTerminate: onTerminate\n                      })];\n\n                    case 2:\n                      response = _b.sent();\n                      logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [2\n                      /*return*/\n                      , response];\n\n                    case 3:\n                      error_1 = _b.sent();\n                      authModeAttempts++;\n\n                      if (authModeAttempts >= readAuthModes.length) {\n                        authMode = readAuthModes[authModeAttempts - 1];\n                        logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n\n                        if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                          // return empty list of data so DataStore will continue to sync other models\n                          logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                          return [2\n                          /*return*/\n                          , {\n                            data: (_a = {}, _a[opName] = opResultDefaults, _a)\n                          }];\n                        }\n\n                        throw error_1;\n                      }\n\n                      logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                      return [4\n                      /*yield*/\n                      , authModeRetry()];\n\n                    case 4:\n                      return [2\n                      /*return*/\n                      , _b.sent()];\n\n                    case 5:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            };\n\n            return [4\n            /*yield*/\n            , authModeRetry()];\n\n          case 2:\n            data = _d.sent().data;\n            _b = data, _c = opName, opResult = _b[_c];\n            items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n            return [2\n            /*return*/\n            , {\n              nextToken: newNextToken,\n              startedAt: startedAt,\n              items: items\n            }];\n        }\n      });\n    });\n  };\n\n  SyncProcessor.prototype.jitteredRetry = function (_a) {\n    var query = _a.query,\n        variables = _a.variables,\n        opName = _a.opName,\n        modelDefinition = _a.modelDefinition,\n        authMode = _a.authMode,\n        onTerminate = _a.onTerminate;\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , jitteredExponentialRetry(function (query, variables) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var authToken, customUserAgentDetails, error_2, clientOrForbiddenErrorMessage, hasItems, unauthorized, otherErrors, result;\n\n                var _this = this;\n\n                var _a, _b, _c, _d;\n\n                return __generator(this, function (_e) {\n                  switch (_e.label) {\n                    case 0:\n                      _e.trys.push([0, 3,, 6]);\n\n                      return [4\n                      /*yield*/\n                      , getTokenForCustomAuth(authMode, this.amplifyConfig)];\n\n                    case 1:\n                      authToken = _e.sent();\n                      customUserAgentDetails = {\n                        category: Category.DataStore,\n                        action: DataStoreAction.GraphQl\n                      };\n                      return [4\n                      /*yield*/\n                      , this.amplifyContext.InternalAPI.graphql({\n                        query: query,\n                        variables: variables,\n                        authMode: authMode,\n                        authToken: authToken\n                      }, undefined, customUserAgentDetails)];\n\n                    case 2:\n                      return [2\n                      /*return*/\n                      , _e.sent()];\n\n                    case 3:\n                      error_2 = _e.sent();\n                      clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n\n                      if (clientOrForbiddenErrorMessage) {\n                        logger.error('Sync processor retry error:', error_2);\n                        throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                      }\n\n                      hasItems = Boolean((_b = (_a = error_2 === null || error_2 === void 0 ? void 0 : error_2.data) === null || _a === void 0 ? void 0 : _a[opName]) === null || _b === void 0 ? void 0 : _b.items);\n                      unauthorized = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) && error_2.errors.some(function (err) {\n                        return err.errorType === 'Unauthorized';\n                      });\n                      otherErrors = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) && error_2.errors.filter(function (err) {\n                        return err.errorType !== 'Unauthorized';\n                      });\n                      result = error_2;\n\n                      if (hasItems) {\n                        result.data[opName].items = result.data[opName].items.filter(function (item) {\n                          return item !== null;\n                        });\n                      }\n\n                      if (!(hasItems && (otherErrors === null || otherErrors === void 0 ? void 0 : otherErrors.length))) return [3\n                      /*break*/\n                      , 5];\n                      return [4\n                      /*yield*/\n                      , Promise.all(otherErrors.map(function (err) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var e_1;\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                _a.trys.push([0, 2,, 3]);\n\n                                return [4\n                                /*yield*/\n                                , this.errorHandler({\n                                  recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                  localModel: null,\n                                  message: err.message,\n                                  model: modelDefinition.name,\n                                  operation: opName,\n                                  errorType: getSyncErrorType(err),\n                                  process: ProcessName.sync,\n                                  remoteModel: null,\n                                  cause: err\n                                })];\n\n                              case 1:\n                                _a.sent();\n\n                                return [3\n                                /*break*/\n                                , 3];\n\n                              case 2:\n                                e_1 = _a.sent();\n                                logger.error('Sync error handler failed with:', e_1);\n                                return [3\n                                /*break*/\n                                , 3];\n\n                              case 3:\n                                return [2\n                                /*return*/\n                                ];\n                            }\n                          });\n                        });\n                      }))];\n\n                    case 4:\n                      _e.sent();\n\n                      Hub.dispatch('datastore', {\n                        event: 'nonApplicableDataReceived',\n                        data: {\n                          errors: otherErrors,\n                          modelName: modelDefinition.name\n                        }\n                      });\n                      _e.label = 5;\n\n                    case 5:\n                      /**\n                       * Handle $util.unauthorized() in resolver request mapper, which responses with something\n                       * like this:\n                       *\n                       * ```\n                       * {\n                       * \tdata: { syncYourModel: null },\n                       * \terrors: [\n                       * \t\t{\n                       * \t\t\tpath: ['syncLegacyJSONComments'],\n                       * \t\t\tdata: null,\n                       * \t\t\terrorType: 'Unauthorized',\n                       * \t\t\terrorInfo: null,\n                       * \t\t\tlocations: [{ line: 2, column: 3, sourceName: null }],\n                       * \t\t\tmessage:\n                       * \t\t\t\t'Not Authorized to access syncYourModel on type Query',\n                       * \t\t\t},\n                       * \t\t],\n                       * \t}\n                       * ```\n                       *\n                       * The correct handling for this is to signal that we've encountered a non-retryable error,\n                       * since the server has responded with an auth error and *NO DATA* at this point.\n                       */\n                      if (unauthorized) {\n                        this.errorHandler({\n                          recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                          localModel: null,\n                          message: error_2.message,\n                          model: modelDefinition.name,\n                          operation: opName,\n                          errorType: getSyncErrorType(error_2.errors[0]),\n                          process: ProcessName.sync,\n                          remoteModel: null,\n                          cause: error_2\n                        });\n                        throw new NonRetryableError(error_2);\n                      }\n\n                      if ((_d = (_c = result.data) === null || _c === void 0 ? void 0 : _c[opName].items) === null || _d === void 0 ? void 0 : _d.length) {\n                        return [2\n                        /*return*/\n                        , result];\n                      }\n\n                      throw error_2;\n\n                    case 6:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }, [query, variables], undefined, onTerminate)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  SyncProcessor.prototype.start = function (typesLastSync) {\n    var _this = this;\n\n    var _a = this.amplifyConfig,\n        maxRecordsToSync = _a.maxRecordsToSync,\n        syncPageSize = _a.syncPageSize;\n    var parentPromises = new Map();\n    var observable = new Observable(function (observer) {\n      var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n        var e_2, _a;\n\n        try {\n          for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var modelName = _c.value;\n            var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n            map.set(namespace.models[modelName], typeLastSync);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n\n        return map;\n      }, new Map());\n      var allModelsReady = Array.from(sortedTypesLastSyncs.entries()).filter(function (_a) {\n        var _b = __read(_a, 1),\n            syncable = _b[0].syncable;\n\n        return syncable;\n      }).map(function (_a) {\n        var _b = __read(_a, 2),\n            modelDefinition = _b[0],\n            _c = __read(_b[1], 2),\n            namespace = _c[0],\n            lastSync = _c[1];\n\n        return _this.runningProcesses.isOpen && _this.runningProcesses.add(function (onTerminate) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  done = false;\n                  nextToken = null;\n                  startedAt = null;\n                  items = null;\n                  recordsReceived = 0;\n                  filter = this.graphqlFilterFromPredicate(modelDefinition);\n                  parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                  promises = parents.map(function (parent) {\n                    return parentPromises.get(namespace + \"_\" + parent);\n                  });\n                  promise = new Promise(function (res) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var limit, error_3, e_3;\n\n                      var _a;\n\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            return [4\n                            /*yield*/\n                            , Promise.all(promises)];\n\n                          case 1:\n                            _b.sent();\n\n                            _b.label = 2;\n\n                          case 2:\n                            /**\n                             * If `runningProcesses` is not open, it means that the sync processor has been\n                             * stopped (for example by calling `DataStore.clear()` upstream) and has not yet\n                             * finished terminating and/or waiting for its background processes to complete.\n                             */\n                            if (!this.runningProcesses.isOpen) {\n                              logger.debug(\"Sync processor has been stopped, terminating sync for \" + modelDefinition.name);\n                              return [2\n                              /*return*/\n                              , res()];\n                            }\n\n                            limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                            _b.label = 3;\n\n                          case 3:\n                            _b.trys.push([3, 5,, 10]);\n\n                            return [4\n                            /*yield*/\n                            , this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter, onTerminate)];\n\n                          case 4:\n                            _a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt;\n                            return [3\n                            /*break*/\n                            , 10];\n\n                          case 5:\n                            error_3 = _b.sent();\n                            _b.label = 6;\n\n                          case 6:\n                            _b.trys.push([6, 8,, 9]);\n\n                            return [4\n                            /*yield*/\n                            , this.errorHandler({\n                              recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                              localModel: null,\n                              message: error_3.message,\n                              model: modelDefinition.name,\n                              operation: null,\n                              errorType: getSyncErrorType(error_3),\n                              process: ProcessName.sync,\n                              remoteModel: null,\n                              cause: error_3\n                            })];\n\n                          case 7:\n                            _b.sent();\n\n                            return [3\n                            /*break*/\n                            , 9];\n\n                          case 8:\n                            e_3 = _b.sent();\n                            logger.error('Sync error handler failed with:', e_3);\n                            return [3\n                            /*break*/\n                            , 9];\n\n                          case 9:\n                            /**\n                             * If there's an error, this model fails, but the rest of the sync should\n                             * continue. To facilitate this, we explicitly mark this model as `done`\n                             * with no items and allow the loop to continue organically. This ensures\n                             * all callbacks (subscription messages) happen as normal, so anything\n                             * waiting on them knows the model is as done as it can be.\n                             */\n                            done = true;\n                            items = [];\n                            return [3\n                            /*break*/\n                            , 10];\n\n                          case 10:\n                            recordsReceived += items.length;\n                            done = nextToken === null || recordsReceived >= maxRecordsToSync;\n                            observer.next({\n                              namespace: namespace,\n                              modelDefinition: modelDefinition,\n                              items: items,\n                              done: done,\n                              startedAt: startedAt,\n                              isFullSync: !lastSync\n                            });\n                            _b.label = 11;\n\n                          case 11:\n                            if (!done) return [3\n                            /*break*/\n                            , 2];\n                            _b.label = 12;\n\n                          case 12:\n                            res();\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                  parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                  return [4\n                  /*yield*/\n                  , promise];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }, \"adding model \" + modelDefinition.name);\n      });\n      Promise.all(allModelsReady).then(function () {\n        observer.complete();\n      });\n    });\n    return observable;\n  };\n\n  SyncProcessor.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('stopping sync processor');\n            return [4\n            /*yield*/\n            , this.runningProcesses.close()];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.runningProcesses.open()];\n\n          case 2:\n            _a.sent();\n\n            logger.debug('sync processor stopped');\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return SyncProcessor;\n}();\n\nexport { SyncProcessor };","map":{"version":3,"names":["__awaiter","__generator","__read","__values","InternalAPI","Observable","ProcessName","buildGraphQLOperation","getModelAuthModes","getClientSideAuthError","getForbiddenError","predicateToGraphQLFilter","getTokenForCustomAuth","jitteredExponentialRetry","Category","ConsoleLogger","Logger","DataStoreAction","Hub","NonRetryableError","BackgroundProcessManager","ModelPredicateCreator","getSyncErrorType","opResultDefaults","items","nextToken","startedAt","logger","SyncProcessor","schema","syncPredicates","amplifyConfig","authModeStrategy","errorHandler","amplifyContext","typeQuery","WeakMap","runningProcesses","generateQueries","prototype","_this","Object","values","namespaces","forEach","namespace","models","filter","_a","syncable","model","_b","opNameQuery","slice","set","graphqlFilterFromPredicate","predicatesGroup","getPredicates","get","retrievePage","modelDefinition","lastSync","limit","onTerminate","opName","query","variables","modelAuthModes","readAuthModes","authModeAttempts","authModeRetry","data","_c","opResult","newNextToken","_d","label","defaultAuthMode","aws_appsync_authenticationType","modelName","name","sent","READ","response","error_1","authMode","isOpen","Error","trys","push","debug","jitteredRetry","length","warn","authToken","customUserAgentDetails","error_2","clientOrForbiddenErrorMessage","hasItems","unauthorized","otherErrors","result","_e","category","DataStore","action","GraphQl","graphql","undefined","error","Boolean","errors","some","err","errorType","item","Promise","all","map","e_1","recoverySuggestion","localModel","message","operation","process","sync","remoteModel","cause","dispatch","event","start","typesLastSync","maxRecordsToSync","syncPageSize","parentPromises","Map","observable","observer","sortedTypesLastSyncs","reduce","e_2","Array","from","modelTopologicalOrdering","keys","next","done","value","typeLastSync","e_2_1","return","call","allModelsReady","entries","add","recordsReceived","parents","promises","promise","parent","res","error_3","e_3","Math","min","isFullSync","then","complete","stop","close","open"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-amplify/datastore/lib-esm/sync/processors/sync.js"],"sourcesContent":["import { __awaiter, __generator, __read, __values } from \"tslib\";\nimport { InternalAPI } from '@aws-amplify/api/internals';\nimport Observable from 'zen-observable-ts';\nimport { ProcessName, } from '../../types';\nimport { buildGraphQLOperation, getModelAuthModes, getClientSideAuthError, getForbiddenError, predicateToGraphQLFilter, getTokenForCustomAuth, } from '../utils';\nimport { jitteredExponentialRetry, Category, ConsoleLogger as Logger, DataStoreAction, Hub, NonRetryableError, BackgroundProcessManager, } from '@aws-amplify/core';\nimport { ModelPredicateCreator } from '../../predicates';\nimport { getSyncErrorType } from './errorMaps';\nvar opResultDefaults = {\n    items: [],\n    nextToken: null,\n    startedAt: null,\n};\nvar logger = new Logger('DataStore');\nvar SyncProcessor = /** @class */ (function () {\n    function SyncProcessor(schema, syncPredicates, amplifyConfig, authModeStrategy, errorHandler, amplifyContext) {\n        if (amplifyConfig === void 0) { amplifyConfig = {}; }\n        this.schema = schema;\n        this.syncPredicates = syncPredicates;\n        this.amplifyConfig = amplifyConfig;\n        this.authModeStrategy = authModeStrategy;\n        this.errorHandler = errorHandler;\n        this.amplifyContext = amplifyContext;\n        this.typeQuery = new WeakMap();\n        this.runningProcesses = new BackgroundProcessManager();\n        amplifyContext.InternalAPI = amplifyContext.InternalAPI || InternalAPI;\n        this.generateQueries();\n    }\n    SyncProcessor.prototype.generateQueries = function () {\n        var _this = this;\n        Object.values(this.schema.namespaces).forEach(function (namespace) {\n            Object.values(namespace.models)\n                .filter(function (_a) {\n                var syncable = _a.syncable;\n                return syncable;\n            })\n                .forEach(function (model) {\n                var _a = __read(buildGraphQLOperation(namespace, model, 'LIST'), 1), _b = __read(_a[0]), opNameQuery = _b.slice(1);\n                _this.typeQuery.set(model, opNameQuery);\n            });\n        });\n    };\n    SyncProcessor.prototype.graphqlFilterFromPredicate = function (model) {\n        if (!this.syncPredicates) {\n            return null;\n        }\n        var predicatesGroup = ModelPredicateCreator.getPredicates(this.syncPredicates.get(model), false);\n        if (!predicatesGroup) {\n            return null;\n        }\n        return predicateToGraphQLFilter(predicatesGroup);\n    };\n    SyncProcessor.prototype.retrievePage = function (modelDefinition, lastSync, nextToken, limit, filter, onTerminate) {\n        if (limit === void 0) { limit = null; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, opName, query, variables, modelAuthModes, readAuthModes, authModeAttempts, authModeRetry, data, _b, _c, opResult, items, newNextToken, startedAt;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = __read(this.typeQuery.get(modelDefinition), 2), opName = _a[0], query = _a[1];\n                        variables = {\n                            limit: limit,\n                            nextToken: nextToken,\n                            lastSync: lastSync,\n                            filter: filter,\n                        };\n                        return [4 /*yield*/, getModelAuthModes({\n                                authModeStrategy: this.authModeStrategy,\n                                defaultAuthMode: this.amplifyConfig.aws_appsync_authenticationType,\n                                modelName: modelDefinition.name,\n                                schema: this.schema,\n                            })];\n                    case 1:\n                        modelAuthModes = _d.sent();\n                        readAuthModes = modelAuthModes.READ;\n                        authModeAttempts = 0;\n                        authModeRetry = function () { return __awaiter(_this, void 0, void 0, function () {\n                            var response, error_1, authMode;\n                            var _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        if (!this.runningProcesses.isOpen) {\n                                            throw new Error('sync.retreievePage termination was requested. Exiting.');\n                                        }\n                                        _b.label = 1;\n                                    case 1:\n                                        _b.trys.push([1, 3, , 5]);\n                                        logger.debug(\"Attempting sync with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, this.jitteredRetry({\n                                                query: query,\n                                                variables: variables,\n                                                opName: opName,\n                                                modelDefinition: modelDefinition,\n                                                authMode: readAuthModes[authModeAttempts],\n                                                onTerminate: onTerminate,\n                                            })];\n                                    case 2:\n                                        response = _b.sent();\n                                        logger.debug(\"Sync successful with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [2 /*return*/, response];\n                                    case 3:\n                                        error_1 = _b.sent();\n                                        authModeAttempts++;\n                                        if (authModeAttempts >= readAuthModes.length) {\n                                            authMode = readAuthModes[authModeAttempts - 1];\n                                            logger.debug(\"Sync failed with authMode: \" + authMode, error_1);\n                                            if (getClientSideAuthError(error_1) || getForbiddenError(error_1)) {\n                                                // return empty list of data so DataStore will continue to sync other models\n                                                logger.warn(\"User is unauthorized to query \" + opName + \" with auth mode \" + authMode + \". No data could be returned.\");\n                                                return [2 /*return*/, {\n                                                        data: (_a = {},\n                                                            _a[opName] = opResultDefaults,\n                                                            _a),\n                                                    }];\n                                            }\n                                            throw error_1;\n                                        }\n                                        logger.debug(\"Sync failed with authMode: \" + readAuthModes[authModeAttempts - 1] + \". Retrying with authMode: \" + readAuthModes[authModeAttempts]);\n                                        return [4 /*yield*/, authModeRetry()];\n                                    case 4: return [2 /*return*/, _b.sent()];\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        return [4 /*yield*/, authModeRetry()];\n                    case 2:\n                        data = (_d.sent()).data;\n                        _b = data, _c = opName, opResult = _b[_c];\n                        items = opResult.items, newNextToken = opResult.nextToken, startedAt = opResult.startedAt;\n                        return [2 /*return*/, {\n                                nextToken: newNextToken,\n                                startedAt: startedAt,\n                                items: items,\n                            }];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.jitteredRetry = function (_a) {\n        var query = _a.query, variables = _a.variables, opName = _a.opName, modelDefinition = _a.modelDefinition, authMode = _a.authMode, onTerminate = _a.onTerminate;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, jitteredExponentialRetry(function (query, variables) { return __awaiter(_this, void 0, void 0, function () {\n                            var authToken, customUserAgentDetails, error_2, clientOrForbiddenErrorMessage, hasItems, unauthorized, otherErrors, result;\n                            var _this = this;\n                            var _a, _b, _c, _d;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        _e.trys.push([0, 3, , 6]);\n                                        return [4 /*yield*/, getTokenForCustomAuth(authMode, this.amplifyConfig)];\n                                    case 1:\n                                        authToken = _e.sent();\n                                        customUserAgentDetails = {\n                                            category: Category.DataStore,\n                                            action: DataStoreAction.GraphQl,\n                                        };\n                                        return [4 /*yield*/, this.amplifyContext.InternalAPI.graphql({\n                                                query: query,\n                                                variables: variables,\n                                                authMode: authMode,\n                                                authToken: authToken,\n                                            }, undefined, customUserAgentDetails)];\n                                    case 2: return [2 /*return*/, _e.sent()];\n                                    case 3:\n                                        error_2 = _e.sent();\n                                        clientOrForbiddenErrorMessage = getClientSideAuthError(error_2) || getForbiddenError(error_2);\n                                        if (clientOrForbiddenErrorMessage) {\n                                            logger.error('Sync processor retry error:', error_2);\n                                            throw new NonRetryableError(clientOrForbiddenErrorMessage);\n                                        }\n                                        hasItems = Boolean((_b = (_a = error_2 === null || error_2 === void 0 ? void 0 : error_2.data) === null || _a === void 0 ? void 0 : _a[opName]) === null || _b === void 0 ? void 0 : _b.items);\n                                        unauthorized = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) &&\n                                            error_2.errors.some(function (err) { return err.errorType === 'Unauthorized'; });\n                                        otherErrors = (error_2 === null || error_2 === void 0 ? void 0 : error_2.errors) &&\n                                            error_2.errors.filter(function (err) { return err.errorType !== 'Unauthorized'; });\n                                        result = error_2;\n                                        if (hasItems) {\n                                            result.data[opName].items = result.data[opName].items.filter(function (item) { return item !== null; });\n                                        }\n                                        if (!(hasItems && (otherErrors === null || otherErrors === void 0 ? void 0 : otherErrors.length))) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, Promise.all(otherErrors.map(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                                var e_1;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            _a.trys.push([0, 2, , 3]);\n                                                            return [4 /*yield*/, this.errorHandler({\n                                                                    recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                                                    localModel: null,\n                                                                    message: err.message,\n                                                                    model: modelDefinition.name,\n                                                                    operation: opName,\n                                                                    errorType: getSyncErrorType(err),\n                                                                    process: ProcessName.sync,\n                                                                    remoteModel: null,\n                                                                    cause: err,\n                                                                })];\n                                                        case 1:\n                                                            _a.sent();\n                                                            return [3 /*break*/, 3];\n                                                        case 2:\n                                                            e_1 = _a.sent();\n                                                            logger.error('Sync error handler failed with:', e_1);\n                                                            return [3 /*break*/, 3];\n                                                        case 3: return [2 /*return*/];\n                                                    }\n                                                });\n                                            }); }))];\n                                    case 4:\n                                        _e.sent();\n                                        Hub.dispatch('datastore', {\n                                            event: 'nonApplicableDataReceived',\n                                            data: {\n                                                errors: otherErrors,\n                                                modelName: modelDefinition.name,\n                                            },\n                                        });\n                                        _e.label = 5;\n                                    case 5:\n                                        /**\n                                         * Handle $util.unauthorized() in resolver request mapper, which responses with something\n                                         * like this:\n                                         *\n                                         * ```\n                                         * {\n                                         * \tdata: { syncYourModel: null },\n                                         * \terrors: [\n                                         * \t\t{\n                                         * \t\t\tpath: ['syncLegacyJSONComments'],\n                                         * \t\t\tdata: null,\n                                         * \t\t\terrorType: 'Unauthorized',\n                                         * \t\t\terrorInfo: null,\n                                         * \t\t\tlocations: [{ line: 2, column: 3, sourceName: null }],\n                                         * \t\t\tmessage:\n                                         * \t\t\t\t'Not Authorized to access syncYourModel on type Query',\n                                         * \t\t\t},\n                                         * \t\t],\n                                         * \t}\n                                         * ```\n                                         *\n                                         * The correct handling for this is to signal that we've encountered a non-retryable error,\n                                         * since the server has responded with an auth error and *NO DATA* at this point.\n                                         */\n                                        if (unauthorized) {\n                                            this.errorHandler({\n                                                recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                                localModel: null,\n                                                message: error_2.message,\n                                                model: modelDefinition.name,\n                                                operation: opName,\n                                                errorType: getSyncErrorType(error_2.errors[0]),\n                                                process: ProcessName.sync,\n                                                remoteModel: null,\n                                                cause: error_2,\n                                            });\n                                            throw new NonRetryableError(error_2);\n                                        }\n                                        if ((_d = (_c = result.data) === null || _c === void 0 ? void 0 : _c[opName].items) === null || _d === void 0 ? void 0 : _d.length) {\n                                            return [2 /*return*/, result];\n                                        }\n                                        throw error_2;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); }, [query, variables], undefined, onTerminate)];\n                    case 1: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    SyncProcessor.prototype.start = function (typesLastSync) {\n        var _this = this;\n        var _a = this.amplifyConfig, maxRecordsToSync = _a.maxRecordsToSync, syncPageSize = _a.syncPageSize;\n        var parentPromises = new Map();\n        var observable = new Observable(function (observer) {\n            var sortedTypesLastSyncs = Object.values(_this.schema.namespaces).reduce(function (map, namespace) {\n                var e_2, _a;\n                try {\n                    for (var _b = __values(Array.from(namespace.modelTopologicalOrdering.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var modelName = _c.value;\n                        var typeLastSync = typesLastSync.get(namespace.models[modelName]);\n                        map.set(namespace.models[modelName], typeLastSync);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                return map;\n            }, new Map());\n            var allModelsReady = Array.from(sortedTypesLastSyncs.entries())\n                .filter(function (_a) {\n                var _b = __read(_a, 1), syncable = _b[0].syncable;\n                return syncable;\n            })\n                .map(function (_a) {\n                var _b = __read(_a, 2), modelDefinition = _b[0], _c = __read(_b[1], 2), namespace = _c[0], lastSync = _c[1];\n                return _this.runningProcesses.isOpen &&\n                    _this.runningProcesses.add(function (onTerminate) { return __awaiter(_this, void 0, void 0, function () {\n                        var done, nextToken, startedAt, items, recordsReceived, filter, parents, promises, promise;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    done = false;\n                                    nextToken = null;\n                                    startedAt = null;\n                                    items = null;\n                                    recordsReceived = 0;\n                                    filter = this.graphqlFilterFromPredicate(modelDefinition);\n                                    parents = this.schema.namespaces[namespace].modelTopologicalOrdering.get(modelDefinition.name);\n                                    promises = parents.map(function (parent) {\n                                        return parentPromises.get(namespace + \"_\" + parent);\n                                    });\n                                    promise = new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\n                                        var limit, error_3, e_3;\n                                        var _a;\n                                        return __generator(this, function (_b) {\n                                            switch (_b.label) {\n                                                case 0: return [4 /*yield*/, Promise.all(promises)];\n                                                case 1:\n                                                    _b.sent();\n                                                    _b.label = 2;\n                                                case 2:\n                                                    /**\n                                                     * If `runningProcesses` is not open, it means that the sync processor has been\n                                                     * stopped (for example by calling `DataStore.clear()` upstream) and has not yet\n                                                     * finished terminating and/or waiting for its background processes to complete.\n                                                     */\n                                                    if (!this.runningProcesses.isOpen) {\n                                                        logger.debug(\"Sync processor has been stopped, terminating sync for \" + modelDefinition.name);\n                                                        return [2 /*return*/, res()];\n                                                    }\n                                                    limit = Math.min(maxRecordsToSync - recordsReceived, syncPageSize);\n                                                    _b.label = 3;\n                                                case 3:\n                                                    _b.trys.push([3, 5, , 10]);\n                                                    return [4 /*yield*/, this.retrievePage(modelDefinition, lastSync, nextToken, limit, filter, onTerminate)];\n                                                case 4:\n                                                    (_a = _b.sent(), items = _a.items, nextToken = _a.nextToken, startedAt = _a.startedAt);\n                                                    return [3 /*break*/, 10];\n                                                case 5:\n                                                    error_3 = _b.sent();\n                                                    _b.label = 6;\n                                                case 6:\n                                                    _b.trys.push([6, 8, , 9]);\n                                                    return [4 /*yield*/, this.errorHandler({\n                                                            recoverySuggestion: 'Ensure app code is up to date, auth directives exist and are correct on each model, and that server-side data has not been invalidated by a schema change. If the problem persists, search for or create an issue: https://github.com/aws-amplify/amplify-js/issues',\n                                                            localModel: null,\n                                                            message: error_3.message,\n                                                            model: modelDefinition.name,\n                                                            operation: null,\n                                                            errorType: getSyncErrorType(error_3),\n                                                            process: ProcessName.sync,\n                                                            remoteModel: null,\n                                                            cause: error_3,\n                                                        })];\n                                                case 7:\n                                                    _b.sent();\n                                                    return [3 /*break*/, 9];\n                                                case 8:\n                                                    e_3 = _b.sent();\n                                                    logger.error('Sync error handler failed with:', e_3);\n                                                    return [3 /*break*/, 9];\n                                                case 9:\n                                                    /**\n                                                     * If there's an error, this model fails, but the rest of the sync should\n                                                     * continue. To facilitate this, we explicitly mark this model as `done`\n                                                     * with no items and allow the loop to continue organically. This ensures\n                                                     * all callbacks (subscription messages) happen as normal, so anything\n                                                     * waiting on them knows the model is as done as it can be.\n                                                     */\n                                                    done = true;\n                                                    items = [];\n                                                    return [3 /*break*/, 10];\n                                                case 10:\n                                                    recordsReceived += items.length;\n                                                    done =\n                                                        nextToken === null || recordsReceived >= maxRecordsToSync;\n                                                    observer.next({\n                                                        namespace: namespace,\n                                                        modelDefinition: modelDefinition,\n                                                        items: items,\n                                                        done: done,\n                                                        startedAt: startedAt,\n                                                        isFullSync: !lastSync,\n                                                    });\n                                                    _b.label = 11;\n                                                case 11:\n                                                    if (!done) return [3 /*break*/, 2];\n                                                    _b.label = 12;\n                                                case 12:\n                                                    res();\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); });\n                                    parentPromises.set(namespace + \"_\" + modelDefinition.name, promise);\n                                    return [4 /*yield*/, promise];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }, \"adding model \" + modelDefinition.name);\n            });\n            Promise.all(allModelsReady).then(function () {\n                observer.complete();\n            });\n        });\n        return observable;\n    };\n    SyncProcessor.prototype.stop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('stopping sync processor');\n                        return [4 /*yield*/, this.runningProcesses.close()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.runningProcesses.open()];\n                    case 2:\n                        _a.sent();\n                        logger.debug('sync processor stopped');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SyncProcessor;\n}());\nexport { SyncProcessor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}