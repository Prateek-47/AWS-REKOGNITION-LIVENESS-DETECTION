{"ast":null,"code":"import _awaitAsyncGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"D:/aws-rekognition-liveness-detection-main/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport class MessageDecoderStream {\n  constructor(options) {\n    this.options = options;\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.asyncIterator();\n  }\n\n  asyncIterator() {\n    var _this = this;\n\n    return _wrapAsyncGenerator(function* () {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(_this.options.inputStream), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const bytes = _step.value;\n\n          const decoded = _this.options.decoder.decode(bytes);\n\n          yield decoded;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _awaitAsyncGenerator(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    })();\n  }\n\n}","map":{"version":3,"names":["MessageDecoderStream","constructor","options","Symbol","asyncIterator","inputStream","bytes","decoded","decoder","decode"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/eventstream-codec/dist-es/MessageDecoderStream.js"],"sourcesContent":["export class MessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const bytes of this.options.inputStream) {\n            const decoded = this.options.decoder.decode(bytes);\n            yield decoded;\n        }\n    }\n}\n"],"mappings":";;;AAAA,OAAO,MAAMA,oBAAN,CAA2B;EAC9BC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKA,OAAL,GAAeA,OAAf;EACH;;EACoB,CAApBC,MAAM,CAACC,aAAa,IAAI;IACrB,OAAO,KAAKA,aAAL,EAAP;EACH;;EACMA,aAAa,GAAG;IAAA;;IAAA;MAAA;MAAA;;MAAA;;MAAA;QACnB,oCAA0B,KAAI,CAACF,OAAL,CAAaG,WAAvC,uIAAoD;UAAA,MAAnCC,KAAmC;;UAChD,MAAMC,OAAO,GAAG,KAAI,CAACL,OAAL,CAAaM,OAAb,CAAqBC,MAArB,CAA4BH,KAA5B,CAAhB;;UACA,MAAMC,OAAN;QACH;MAJkB;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;UAAA;QAAA;UAAA;YAAA;UAAA;QAAA;MAAA;IAAA;EAKtB;;AAZ6B"},"metadata":{},"sourceType":"module"}