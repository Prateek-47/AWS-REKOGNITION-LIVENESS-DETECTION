{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nexport function resolveAwsAuthConfig(input) {\n  var _this = this;\n\n  var credentials = input.credentials || input.credentialDefaultProvider(input);\n  var normalizedCreds = normalizeProvider(credentials);\n  var _a = input.signingEscapePath,\n      signingEscapePath = _a === void 0 ? true : _a,\n      _b = input.systemClockOffset,\n      systemClockOffset = _b === void 0 ? input.systemClockOffset || 0 : _b,\n      sha256 = input.sha256;\n  var signer;\n\n  if (input.signer) {\n    //if signer is supplied by user, normalize it to a function returning a promise for signer.\n    signer = normalizeProvider(input.signer);\n  } else {\n    //construct a provider inferring signing from region.\n    signer = function () {\n      return normalizeProvider(input.region)().then(function (region) {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , input.regionInfoProvider(region)];\n\n              case 1:\n                return [2\n                /*return*/\n                , [_a.sent() || {}, region]];\n            }\n          });\n        });\n      }).then(function (_a) {\n        var _b = __read(_a, 2),\n            regionInfo = _b[0],\n            region = _b[1];\n\n        var signingRegion = regionInfo.signingRegion,\n            signingService = regionInfo.signingService; //update client's singing region and signing service config if they are resolved.\n        //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n\n        input.signingRegion = input.signingRegion || signingRegion || region; //signing name resolving order:\n        //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n\n        input.signingName = input.signingName || signingService || input.serviceId;\n        return new SignatureV4({\n          credentials: normalizedCreds,\n          region: input.signingRegion,\n          service: input.signingName,\n          sha256: sha256,\n          uriEscapePath: signingEscapePath\n        });\n      });\n    };\n  }\n\n  return __assign(__assign({}, input), {\n    systemClockOffset: systemClockOffset,\n    signingEscapePath: signingEscapePath,\n    credentials: normalizedCreds,\n    signer: signer\n  });\n}\n\nfunction normalizeProvider(input) {\n  if (typeof input === \"object\") {\n    var promisified_1 = Promise.resolve(input);\n    return function () {\n      return promisified_1;\n    };\n  }\n\n  return input;\n}","map":{"version":3,"names":["__assign","__awaiter","__generator","__read","SignatureV4","resolveAwsAuthConfig","input","_this","credentials","credentialDefaultProvider","normalizedCreds","normalizeProvider","_a","signingEscapePath","_b","systemClockOffset","sha256","signer","region","then","label","regionInfoProvider","sent","regionInfo","signingRegion","signingService","signingName","serviceId","service","uriEscapePath","promisified_1","Promise","resolve"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@aws-sdk/client-cloudwatch-logs/node_modules/@aws-sdk/middleware-signing/dist/es/configurations.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nexport function resolveAwsAuthConfig(input) {\n    var _this = this;\n    var credentials = input.credentials || input.credentialDefaultProvider(input);\n    var normalizedCreds = normalizeProvider(credentials);\n    var _a = input.signingEscapePath, signingEscapePath = _a === void 0 ? true : _a, _b = input.systemClockOffset, systemClockOffset = _b === void 0 ? input.systemClockOffset || 0 : _b, sha256 = input.sha256;\n    var signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        //construct a provider inferring signing from region.\n        signer = function () {\n            return normalizeProvider(input.region)()\n                .then(function (region) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, input.regionInfoProvider(region)];\n                    case 1: return [2 /*return*/, [(_a.sent()) || {}, region]];\n                }\n            }); }); })\n                .then(function (_a) {\n                var _b = __read(_a, 2), regionInfo = _b[0], region = _b[1];\n                var signingRegion = regionInfo.signingRegion, signingService = regionInfo.signingService;\n                //update client's singing region and signing service config if they are resolved.\n                //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n                input.signingRegion = input.signingRegion || signingRegion || region;\n                //signing name resolving order:\n                //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n                input.signingName = input.signingName || signingService || input.serviceId;\n                return new SignatureV4({\n                    credentials: normalizedCreds,\n                    region: input.signingRegion,\n                    service: input.signingName,\n                    sha256: sha256,\n                    uriEscapePath: signingEscapePath,\n                });\n            });\n        };\n    }\n    return __assign(__assign({}, input), { systemClockOffset: systemClockOffset,\n        signingEscapePath: signingEscapePath, credentials: normalizedCreds, signer: signer });\n}\nfunction normalizeProvider(input) {\n    if (typeof input === \"object\") {\n        var promisified_1 = Promise.resolve(input);\n        return function () { return promisified_1; };\n    }\n    return input;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}