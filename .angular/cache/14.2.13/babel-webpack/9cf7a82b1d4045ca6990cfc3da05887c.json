{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = args => {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    start,\n    stop,\n    step,\n    dtype\n  } = attrs;\n  const values = rangeImplCPU(start, stop, step, dtype);\n  const out = backend.makeOutput([values.length], dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n};\nexport const rangeConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range\n};","map":{"version":3,"names":["Range","rangeImplCPU","range","args","backend","attrs","start","stop","step","dtype","values","out","makeOutput","length","outVals","typedArrayFromHeap","set","rangeConfig","kernelName","backendName","kernelFunc"],"sources":["D:/aws-rekognition-liveness-detection-main/node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Range.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = rangeImplCPU(start, stop, step, dtype);\n    const out = backend.makeOutput([values.length], dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.set(values);\n    return out;\n};\nexport const rangeConfig = {\n    kernelName: Range,\n    backendName: 'wasm',\n    kernelFunc: range\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,QAAsB,uBAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;EAC3B,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAqBF,IAA3B;EACA,MAAM;IAAEG,KAAF;IAASC,IAAT;IAAeC,IAAf;IAAqBC;EAArB,IAA+BJ,KAArC;EACA,MAAMK,MAAM,GAAGT,YAAY,CAACK,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,KAApB,CAA3B;EACA,MAAME,GAAG,GAAGP,OAAO,CAACQ,UAAR,CAAmB,CAACF,MAAM,CAACG,MAAR,CAAnB,EAAoCJ,KAApC,CAAZ;EACA,MAAMK,OAAO,GAAGV,OAAO,CAACW,kBAAR,CAA2BJ,GAA3B,CAAhB;EACAG,OAAO,CAACE,GAAR,CAAYN,MAAZ;EACA,OAAOC,GAAP;AACH,CARM;AASP,OAAO,MAAMM,WAAW,GAAG;EACvBC,UAAU,EAAElB,KADW;EAEvBmB,WAAW,EAAE,MAFU;EAGvBC,UAAU,EAAElB;AAHW,CAApB"},"metadata":{},"sourceType":"module"}